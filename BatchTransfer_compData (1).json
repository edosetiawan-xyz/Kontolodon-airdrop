{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"edosetiawan.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\n/**\\r\\n * @title BatchTransfer\\r\\n * @dev Smart contract untuk melakukan transfer batch ke banyak alamat sekaligus\\r\\n * Optimal untuk jaringan assam.tea.xyz\\r\\n */\\r\\ncontract BatchTransfer {\\r\\n    address public owner;\\r\\n    \\r\\n    // Event yang akan diemit setiap kali batch transfer berhasil dilakukan\\r\\n    event BatchTransferSuccessful(uint256 totalAddresses, uint256 totalAmount, uint256 timestamp);\\r\\n    \\r\\n    // Modifier untuk memastikan hanya owner yang bisa mengakses fungsi tertentu\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"Hanya owner yang dapat mengakses fungsi ini\\\");\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    // Constructor untuk menetapkan owner kontrak\\r\\n    constructor() {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Fungsi untuk mengubah owner kontrak\\r\\n     * @param newOwner Alamat owner baru\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Alamat owner baru tidak boleh alamat nol\\\");\\r\\n        owner = newOwner;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Fungsi untuk mengirim native token ke banyak alamat sekaligus\\r\\n     * @param recipients Array alamat penerima\\r\\n     * @param amounts Array jumlah yang dikirim ke masing-masing penerima\\r\\n     * @return status Boolean yang menunjukkan keberhasilan transaksi\\r\\n     */\\r\\n    function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external payable onlyOwner returns (bool) {\\r\\n        uint256 totalRecipients = recipients.length;\\r\\n        \\r\\n        // Verifikasi bahwa panjang array recipients dan amounts sama\\r\\n        require(totalRecipients == amounts.length, \\\"Panjang array recipients dan amounts harus sama\\\");\\r\\n        \\r\\n        // Verifikasi batas maksimum alamat penerima untuk efisiensi gas\\r\\n        require(totalRecipients <= 2000, \\\"Maksimal 2000 alamat penerima dalam satu batch\\\");\\r\\n        \\r\\n        // Verifikasi total yang dikirim sama dengan msg.value\\r\\n        uint256 totalAmount = 0;\\r\\n        for (uint256 i = 0; i < totalRecipients; i++) {\\r\\n            totalAmount += amounts[i];\\r\\n        }\\r\\n        require(msg.value == totalAmount, \\\"Total amount harus sama dengan nilai yang dikirim\\\");\\r\\n        \\r\\n        // Lakukan transfer ke masing-masing alamat\\r\\n        bool success;\\r\\n        for (uint256 i = 0; i < totalRecipients; i++) {\\r\\n            // Verifikasi alamat valid\\r\\n            require(recipients[i] != address(0), \\\"Alamat penerima tidak boleh alamat nol\\\");\\r\\n            \\r\\n            // Kirim token ke alamat penerima\\r\\n            (success, ) = recipients[i].call{value: amounts[i]}(\\\"\\\");\\r\\n            require(success, \\\"Transfer gagal\\\");\\r\\n        }\\r\\n        \\r\\n        // Emit event setelah semua transfer berhasil\\r\\n        emit BatchTransferSuccessful(totalRecipients, totalAmount, block.timestamp);\\r\\n        \\r\\n        return true;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Fungsi untuk mengirim token ERC20 ke banyak alamat sekaligus\\r\\n     * @param tokenAddress Alamat kontrak ERC20\\r\\n     * @param recipients Array alamat penerima\\r\\n     * @param amounts Array jumlah token yang dikirim ke masing-masing penerima\\r\\n     * @return status Boolean yang menunjukkan keberhasilan transaksi\\r\\n     */\\r\\n    function batchTransferToken(address tokenAddress, address[] calldata recipients, uint256[] calldata amounts) external onlyOwner returns (bool) {\\r\\n        uint256 totalRecipients = recipients.length;\\r\\n        \\r\\n        // Verifikasi bahwa panjang array recipients dan amounts sama\\r\\n        require(totalRecipients == amounts.length, \\\"Panjang array recipients dan amounts harus sama\\\");\\r\\n        \\r\\n        // Verifikasi batas maksimum alamat penerima untuk efisiensi gas\\r\\n        require(totalRecipients <= 2000, \\\"Maksimal 2000 alamat penerima dalam satu batch\\\");\\r\\n        \\r\\n        // Interface minimal untuk token ERC20\\r\\n        IERC20 token = IERC20(tokenAddress);\\r\\n        \\r\\n        uint256 totalAmount = 0;\\r\\n        for (uint256 i = 0; i < totalRecipients; i++) {\\r\\n            totalAmount += amounts[i];\\r\\n        }\\r\\n        \\r\\n        // Verifikasi kontrak memiliki allowance yang cukup\\r\\n        require(token.allowance(msg.sender, address(this)) >= totalAmount, \\\"Allowance token tidak cukup\\\");\\r\\n        \\r\\n        // Transfer token dari pengirim ke kontrak\\r\\n        require(token.transferFrom(msg.sender, address(this), totalAmount), \\\"Transfer dari pengirim ke kontrak gagal\\\");\\r\\n        \\r\\n        // Transfer token ke masing-masing penerima\\r\\n        for (uint256 i = 0; i < totalRecipients; i++) {\\r\\n            // Verifikasi alamat valid\\r\\n            require(recipients[i] != address(0), \\\"Alamat penerima tidak boleh alamat nol\\\");\\r\\n            \\r\\n            // Transfer token ke alamat penerima\\r\\n            require(token.transfer(recipients[i], amounts[i]), \\\"Transfer token gagal\\\");\\r\\n        }\\r\\n        \\r\\n        // Emit event setelah semua transfer berhasil\\r\\n        emit BatchTransferSuccessful(totalRecipients, totalAmount, block.timestamp);\\r\\n        \\r\\n        return true;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @dev Fungsi untuk mengembalikan token yang tidak sengaja dikirim ke kontrak\\r\\n     * @param tokenAddress Alamat kontrak token (gunakan address(0) untuk native token)\\r\\n     * @param amount Jumlah token yang akan dikembalikan\\r\\n     */\\r\\n    function recoverTokens(address tokenAddress, uint256 amount) external onlyOwner {\\r\\n        if (tokenAddress == address(0)) {\\r\\n            // Recover native token\\r\\n            (bool success, ) = owner.call{value: amount}(\\\"\\\");\\r\\n            require(success, \\\"Transfer native token gagal\\\");\\r\\n        } else {\\r\\n            // Recover ERC20 token\\r\\n            IERC20 token = IERC20(tokenAddress);\\r\\n            require(token.transfer(owner, amount), \\\"Transfer token gagal\\\");\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    // Fungsi untuk menerima native token\\r\\n    receive() external payable {}\\r\\n}\\r\\n\\r\\n// Interface minimal untuk token ERC20\\r\\ninterface IERC20 {\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n}\"}},\"settings\":{\"optimizer\":{\"enabled\":false,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}},\"remappings\":[]}}",
	"name": "BatchTransfer",
	"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAddresses\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BatchTransferSuccessful\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Smart contract untuk melakukan transfer batch ke banyak alamat sekaligus Optimal untuk jaringan assam.tea.xyz\",\"kind\":\"dev\",\"methods\":{\"batchTransfer(address[],uint256[])\":{\"details\":\"Fungsi untuk mengirim native token ke banyak alamat sekaligus\",\"params\":{\"amounts\":\"Array jumlah yang dikirim ke masing-masing penerima\",\"recipients\":\"Array alamat penerima\"},\"returns\":{\"_0\":\"status Boolean yang menunjukkan keberhasilan transaksi\"}},\"batchTransferToken(address,address[],uint256[])\":{\"details\":\"Fungsi untuk mengirim token ERC20 ke banyak alamat sekaligus\",\"params\":{\"amounts\":\"Array jumlah token yang dikirim ke masing-masing penerima\",\"recipients\":\"Array alamat penerima\",\"tokenAddress\":\"Alamat kontrak ERC20\"},\"returns\":{\"_0\":\"status Boolean yang menunjukkan keberhasilan transaksi\"}},\"recoverTokens(address,uint256)\":{\"details\":\"Fungsi untuk mengembalikan token yang tidak sengaja dikirim ke kontrak\",\"params\":{\"amount\":\"Jumlah token yang akan dikembalikan\",\"tokenAddress\":\"Alamat kontrak token (gunakan address(0) untuk native token)\"}},\"transferOwnership(address)\":{\"details\":\"Fungsi untuk mengubah owner kontrak\",\"params\":{\"newOwner\":\"Alamat owner baru\"}}},\"title\":\"BatchTransfer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"edosetiawan.sol\":\"BatchTransfer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"edosetiawan.sol\":{\"keccak256\":\"0x83d467a0edf5770dcdac20ddc11257515d52b026d30c6fc3b7eb4403dc1a2aae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd1748547274488034f15c943f4bd8b633443d9027ca62f8559ef1f8221683b8\",\"dweb:/ipfs/QmUFKvjBxhQnWJFZDx7T2MUj6BRNLBhbiZPkNGZeMvvzhB\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_33": {
				"entryPoint": null,
				"id": 33,
				"parameterSlots": 0,
				"returnSlots": 0
			}
		},
		"generatedSources": [],
		"linkReferences": {},
		"object": "6080604052348015600e575f5ffd5b50335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118858061005b5f395ff3fe60806040526004361061004d575f3560e01c8063069c9fae1461005857806320651d5d1461008057806388d695b2146100bc5780638da5cb5b146100ec578063f2fde38b1461011657610054565b3661005457005b5f5ffd5b348015610063575f5ffd5b5061007e60048036038101906100799190610e0b565b61013e565b005b34801561008b575f5ffd5b506100a660048036038101906100a19190610eff565b6103b1565b6040516100b39190610faa565b60405180910390f35b6100d660048036038101906100d19190610fc3565b610888565b6040516100e39190610faa565b60405180910390f35b3480156100f7575f5ffd5b50610100610c14565b60405161010d9190611050565b60405180910390f35b348015610121575f5ffd5b5061013c60048036038101906101379190611069565b610c38565b005b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c390611114565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102cd575f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516102449061115f565b5f6040518083038185875af1925050503d805f811461027e576040519150601f19603f3d011682016040523d82523d5f602084013e610283565b606091505b50509050806102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be906111bd565b60405180910390fd5b506103ad565b5f8290508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b815260040161032c9291906111ea565b6020604051808303815f875af1158015610348573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061036c919061123b565b6103ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a2906112b0565b60405180910390fd5b505b5050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610440576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043790611114565b60405180910390fd5b5f85859050905083839050811461048c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104839061133e565b60405180910390fd5b6107d08111156104d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c8906113cc565b60405180910390fd5b5f8790505f5f90505f5f90505b8381101561051a578686828181106104f9576104f86113ea565b5b905060200201358261050b9190611444565b915080806001019150506104de565b50808273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610557929190611477565b602060405180830381865afa158015610572573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061059691906114b2565b10156105d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ce90611527565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161061493929190611545565b6020604051808303815f875af1158015610630573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610654919061123b565b610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068a906115ea565b60405180910390fd5b5f5f90505b8381101561083c575f73ffffffffffffffffffffffffffffffffffffffff168989838181106106ca576106c96113ea565b5b90506020020160208101906106df9190611069565b73ffffffffffffffffffffffffffffffffffffffff1603610735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072c90611678565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8a8a84818110610764576107636113ea565b5b90506020020160208101906107799190611069565b89898581811061078c5761078b6113ea565b5b905060200201356040518363ffffffff1660e01b81526004016107b09291906111ea565b6020604051808303815f875af11580156107cc573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107f0919061123b565b61082f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610826906112b0565b60405180910390fd5b8080600101915050610698565b507ff16e4d5f82c54d462ffe3d21d1d2a968d757649029d89f7253094312837a6e8b83824260405161087093929190611696565b60405180910390a16001935050505095945050505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e90611114565b60405180910390fd5b5f858590509050838390508114610963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095a9061133e565b60405180910390fd5b6107d08111156109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099f906113cc565b60405180910390fd5b5f5f90505f5f90505b828110156109ed578585828181106109cc576109cb6113ea565b5b90506020020135826109de9190611444565b915080806001019150506109b1565b50803414610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a279061173b565b60405180910390fd5b5f5f5f90505b83811015610bc9575f73ffffffffffffffffffffffffffffffffffffffff16898983818110610a6857610a676113ea565b5b9050602002016020810190610a7d9190611069565b73ffffffffffffffffffffffffffffffffffffffff1603610ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aca90611678565b60405180910390fd5b888882818110610ae657610ae56113ea565b5b9050602002016020810190610afb9190611069565b73ffffffffffffffffffffffffffffffffffffffff16878783818110610b2457610b236113ea565b5b90506020020135604051610b379061115f565b5f6040518083038185875af1925050503d805f8114610b71576040519150601f19603f3d011682016040523d82523d5f602084013e610b76565b606091505b50508092505081610bbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb3906117a3565b60405180910390fd5b8080600101915050610a36565b507ff16e4d5f82c54d462ffe3d21d1d2a968d757649029d89f7253094312837a6e8b838342604051610bfd93929190611696565b60405180910390a160019350505050949350505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbd90611114565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2b90611831565b60405180910390fd5b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610da782610d7e565b9050919050565b610db781610d9d565b8114610dc1575f5ffd5b50565b5f81359050610dd281610dae565b92915050565b5f819050919050565b610dea81610dd8565b8114610df4575f5ffd5b50565b5f81359050610e0581610de1565b92915050565b5f5f60408385031215610e2157610e20610d76565b5b5f610e2e85828601610dc4565b9250506020610e3f85828601610df7565b9150509250929050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610e6a57610e69610e49565b5b8235905067ffffffffffffffff811115610e8757610e86610e4d565b5b602083019150836020820283011115610ea357610ea2610e51565b5b9250929050565b5f5f83601f840112610ebf57610ebe610e49565b5b8235905067ffffffffffffffff811115610edc57610edb610e4d565b5b602083019150836020820283011115610ef857610ef7610e51565b5b9250929050565b5f5f5f5f5f60608688031215610f1857610f17610d76565b5b5f610f2588828901610dc4565b955050602086013567ffffffffffffffff811115610f4657610f45610d7a565b5b610f5288828901610e55565b9450945050604086013567ffffffffffffffff811115610f7557610f74610d7a565b5b610f8188828901610eaa565b92509250509295509295909350565b5f8115159050919050565b610fa481610f90565b82525050565b5f602082019050610fbd5f830184610f9b565b92915050565b5f5f5f5f60408587031215610fdb57610fda610d76565b5b5f85013567ffffffffffffffff811115610ff857610ff7610d7a565b5b61100487828801610e55565b9450945050602085013567ffffffffffffffff81111561102757611026610d7a565b5b61103387828801610eaa565b925092505092959194509250565b61104a81610d9d565b82525050565b5f6020820190506110635f830184611041565b92915050565b5f6020828403121561107e5761107d610d76565b5b5f61108b84828501610dc4565b91505092915050565b5f82825260208201905092915050565b7f48616e7961206f776e65722079616e67206461706174206d656e67616b7365735f8201527f2066756e67736920696e69000000000000000000000000000000000000000000602082015250565b5f6110fe602b83611094565b9150611109826110a4565b604082019050919050565b5f6020820190508181035f83015261112b816110f2565b9050919050565b5f81905092915050565b50565b5f61114a5f83611132565b91506111558261113c565b5f82019050919050565b5f6111698261113f565b9150819050919050565b7f5472616e73666572206e617469766520746f6b656e20676167616c00000000005f82015250565b5f6111a7601b83611094565b91506111b282611173565b602082019050919050565b5f6020820190508181035f8301526111d48161119b565b9050919050565b6111e481610dd8565b82525050565b5f6040820190506111fd5f830185611041565b61120a60208301846111db565b9392505050565b61121a81610f90565b8114611224575f5ffd5b50565b5f8151905061123581611211565b92915050565b5f602082840312156112505761124f610d76565b5b5f61125d84828501611227565b91505092915050565b7f5472616e7366657220746f6b656e20676167616c0000000000000000000000005f82015250565b5f61129a601483611094565b91506112a582611266565b602082019050919050565b5f6020820190508181035f8301526112c78161128e565b9050919050565b7f50616e6a616e6720617272617920726563697069656e74732064616e20616d6f5f8201527f756e74732068617275732073616d610000000000000000000000000000000000602082015250565b5f611328602f83611094565b9150611333826112ce565b604082019050919050565b5f6020820190508181035f8301526113558161131c565b9050919050565b7f4d616b73696d616c203230303020616c616d61742070656e6572696d612064615f8201527f6c616d2073617475206261746368000000000000000000000000000000000000602082015250565b5f6113b6602e83611094565b91506113c18261135c565b604082019050919050565b5f6020820190508181035f8301526113e3816113aa565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61144e82610dd8565b915061145983610dd8565b925082820190508082111561147157611470611417565b5b92915050565b5f60408201905061148a5f830185611041565b6114976020830184611041565b9392505050565b5f815190506114ac81610de1565b92915050565b5f602082840312156114c7576114c6610d76565b5b5f6114d48482850161149e565b91505092915050565b7f416c6c6f77616e636520746f6b656e20746964616b2063756b757000000000005f82015250565b5f611511601b83611094565b915061151c826114dd565b602082019050919050565b5f6020820190508181035f83015261153e81611505565b9050919050565b5f6060820190506115585f830186611041565b6115656020830185611041565b61157260408301846111db565b949350505050565b7f5472616e7366657220646172692070656e676972696d206b65206b6f6e7472615f8201527f6b20676167616c00000000000000000000000000000000000000000000000000602082015250565b5f6115d4602783611094565b91506115df8261157a565b604082019050919050565b5f6020820190508181035f830152611601816115c8565b9050919050565b7f416c616d61742070656e6572696d6120746964616b20626f6c656820616c616d5f8201527f6174206e6f6c0000000000000000000000000000000000000000000000000000602082015250565b5f611662602683611094565b915061166d82611608565b604082019050919050565b5f6020820190508181035f83015261168f81611656565b9050919050565b5f6060820190506116a95f8301866111db565b6116b660208301856111db565b6116c360408301846111db565b949350505050565b7f546f74616c20616d6f756e742068617275732073616d612064656e67616e206e5f8201527f696c61692079616e672064696b6972696d000000000000000000000000000000602082015250565b5f611725603183611094565b9150611730826116cb565b604082019050919050565b5f6020820190508181035f83015261175281611719565b9050919050565b7f5472616e7366657220676167616c0000000000000000000000000000000000005f82015250565b5f61178d600e83611094565b915061179882611759565b602082019050919050565b5f6020820190508181035f8301526117ba81611781565b9050919050565b7f416c616d6174206f776e6572206261727520746964616b20626f6c656820616c5f8201527f616d6174206e6f6c000000000000000000000000000000000000000000000000602082015250565b5f61181b602883611094565b9150611826826117c1565b604082019050919050565b5f6020820190508181035f8301526118488161180f565b905091905056fea2646970667358221220bba330a36b942a63e899e406cf58e1b1a44842999d3841ceab946150588eac9864736f6c634300081c0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1885 DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69C9FAE EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x20651D5D EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x116 JUMPI PUSH2 0x54 JUMP JUMPDEST CALLDATASIZE PUSH2 0x54 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH2 0x13E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0xEFF JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0xFC3 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH2 0xC38 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3 SWAP1 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2CD JUMPI PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x244 SWAP1 PUSH2 0x115F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x27E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x283 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BE SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x3AD JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32C SWAP3 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x348 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x440 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x437 SWAP1 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 DUP6 SWAP1 POP SWAP1 POP DUP4 DUP4 SWAP1 POP DUP2 EQ PUSH2 0x48C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP1 PUSH2 0x133E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D0 DUP2 GT ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP8 SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x4F9 JUMPI PUSH2 0x4F8 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x50B SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x4DE JUMP JUMPDEST POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x557 SWAP3 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x572 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x14B2 JUMP JUMPDEST LT ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CE SWAP1 PUSH2 0x1527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x630 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x654 SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH2 0x693 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68A SWAP1 PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x83C JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 DUP10 DUP4 DUP2 DUP2 LT PUSH2 0x6CA JUMPI PUSH2 0x6C9 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP1 PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP11 DUP11 DUP5 DUP2 DUP2 LT PUSH2 0x764 JUMPI PUSH2 0x763 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x779 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x78C JUMPI PUSH2 0x78B PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B0 SWAP3 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x826 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x698 JUMP JUMPDEST POP PUSH32 0xF16E4D5F82C54D462FFE3D21D1D2A968D757649029D89F7253094312837A6E8B DUP4 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x870 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP4 POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90E SWAP1 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 DUP6 SWAP1 POP SWAP1 POP DUP4 DUP4 SWAP1 POP DUP2 EQ PUSH2 0x963 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95A SWAP1 PUSH2 0x133E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D0 DUP2 GT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP1 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9ED JUMPI DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0x9CC JUMPI PUSH2 0x9CB PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x9B1 JUMP JUMPDEST POP DUP1 CALLVALUE EQ PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP1 PUSH2 0x173B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBC9 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 DUP10 DUP4 DUP2 DUP2 LT PUSH2 0xA68 JUMPI PUSH2 0xA67 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA7D SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACA SWAP1 PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 DUP9 DUP3 DUP2 DUP2 LT PUSH2 0xAE6 JUMPI PUSH2 0xAE5 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xAFB SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0xB24 JUMPI PUSH2 0xB23 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0xB37 SWAP1 PUSH2 0x115F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB71 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP DUP1 SWAP3 POP POP DUP2 PUSH2 0xBBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB3 SWAP1 PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA36 JUMP JUMPDEST POP PUSH32 0xF16E4D5F82C54D462FFE3D21D1D2A968D757649029D89F7253094312837A6E8B DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xBFD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBD SWAP1 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2B SWAP1 PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDA7 DUP3 PUSH2 0xD7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB7 DUP2 PUSH2 0xD9D JUMP JUMPDEST DUP2 EQ PUSH2 0xDC1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD2 DUP2 PUSH2 0xDAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDEA DUP2 PUSH2 0xDD8 JUMP JUMPDEST DUP2 EQ PUSH2 0xDF4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE05 DUP2 PUSH2 0xDE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE21 JUMPI PUSH2 0xE20 PUSH2 0xD76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE2E DUP6 DUP3 DUP7 ADD PUSH2 0xDC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE3F DUP6 DUP3 DUP7 ADD PUSH2 0xDF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE6A JUMPI PUSH2 0xE69 PUSH2 0xE49 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE87 JUMPI PUSH2 0xE86 PUSH2 0xE4D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xEA3 JUMPI PUSH2 0xEA2 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xE49 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEDC JUMPI PUSH2 0xEDB PUSH2 0xE4D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xEF8 JUMPI PUSH2 0xEF7 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF18 JUMPI PUSH2 0xF17 PUSH2 0xD76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF25 DUP9 DUP3 DUP10 ADD PUSH2 0xDC4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF46 JUMPI PUSH2 0xF45 PUSH2 0xD7A JUMP JUMPDEST JUMPDEST PUSH2 0xF52 DUP9 DUP3 DUP10 ADD PUSH2 0xE55 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF75 JUMPI PUSH2 0xF74 PUSH2 0xD7A JUMP JUMPDEST JUMPDEST PUSH2 0xF81 DUP9 DUP3 DUP10 ADD PUSH2 0xEAA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA4 DUP2 PUSH2 0xF90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFBD PUSH0 DUP4 ADD DUP5 PUSH2 0xF9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFDB JUMPI PUSH2 0xFDA PUSH2 0xD76 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF8 JUMPI PUSH2 0xFF7 PUSH2 0xD7A JUMP JUMPDEST JUMPDEST PUSH2 0x1004 DUP8 DUP3 DUP9 ADD PUSH2 0xE55 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1027 JUMPI PUSH2 0x1026 PUSH2 0xD7A JUMP JUMPDEST JUMPDEST PUSH2 0x1033 DUP8 DUP3 DUP9 ADD PUSH2 0xEAA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x104A DUP2 PUSH2 0xD9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1063 PUSH0 DUP4 ADD DUP5 PUSH2 0x1041 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107E JUMPI PUSH2 0x107D PUSH2 0xD76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x108B DUP5 DUP3 DUP6 ADD PUSH2 0xDC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x48616E7961206F776E65722079616E67206461706174206D656E67616B736573 PUSH0 DUP3 ADD MSTORE PUSH32 0x2066756E67736920696E69000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10FE PUSH1 0x2B DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x1109 DUP3 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x112B DUP2 PUSH2 0x10F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x114A PUSH0 DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x1155 DUP3 PUSH2 0x113C JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1169 DUP3 PUSH2 0x113F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206E617469766520746F6B656E20676167616C0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11A7 PUSH1 0x1B DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B2 DUP3 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11D4 DUP2 PUSH2 0x119B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E4 DUP2 PUSH2 0xDD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11FD PUSH0 DUP4 ADD DUP6 PUSH2 0x1041 JUMP JUMPDEST PUSH2 0x120A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11DB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x121A DUP2 PUSH2 0xF90 JUMP JUMPDEST DUP2 EQ PUSH2 0x1224 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1235 DUP2 PUSH2 0x1211 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1250 JUMPI PUSH2 0x124F PUSH2 0xD76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x125D DUP5 DUP3 DUP6 ADD PUSH2 0x1227 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657220746F6B656E20676167616C000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x129A PUSH1 0x14 DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x12A5 DUP3 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12C7 DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50616E6A616E6720617272617920726563697069656E74732064616E20616D6F PUSH0 DUP3 ADD MSTORE PUSH32 0x756E74732068617275732073616D610000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1328 PUSH1 0x2F DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x1333 DUP3 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1355 DUP2 PUSH2 0x131C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D616B73696D616C203230303020616C616D61742070656E6572696D61206461 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C616D2073617475206261746368000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13B6 PUSH1 0x2E DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x13C1 DUP3 PUSH2 0x135C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13E3 DUP2 PUSH2 0x13AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x144E DUP3 PUSH2 0xDD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1459 DUP4 PUSH2 0xDD8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1471 JUMPI PUSH2 0x1470 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x148A PUSH0 DUP4 ADD DUP6 PUSH2 0x1041 JUMP JUMPDEST PUSH2 0x1497 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1041 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x14AC DUP2 PUSH2 0xDE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C7 JUMPI PUSH2 0x14C6 PUSH2 0xD76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14D4 DUP5 DUP3 DUP6 ADD PUSH2 0x149E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C6C6F77616E636520746F6B656E20746964616B2063756B75700000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1511 PUSH1 0x1B DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x151C DUP3 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x153E DUP2 PUSH2 0x1505 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1558 PUSH0 DUP4 ADD DUP7 PUSH2 0x1041 JUMP JUMPDEST PUSH2 0x1565 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1041 JUMP JUMPDEST PUSH2 0x1572 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11DB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657220646172692070656E676972696D206B65206B6F6E747261 PUSH0 DUP3 ADD MSTORE PUSH32 0x6B20676167616C00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15D4 PUSH1 0x27 DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x15DF DUP3 PUSH2 0x157A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1601 DUP2 PUSH2 0x15C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C616D61742070656E6572696D6120746964616B20626F6C656820616C616D PUSH0 DUP3 ADD MSTORE PUSH32 0x6174206E6F6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1662 PUSH1 0x26 DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x166D DUP3 PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x168F DUP2 PUSH2 0x1656 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16A9 PUSH0 DUP4 ADD DUP7 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0x16B6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0x16C3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11DB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x546F74616C20616D6F756E742068617275732073616D612064656E67616E206E PUSH0 DUP3 ADD MSTORE PUSH32 0x696C61692079616E672064696B6972696D000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1725 PUSH1 0x31 DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x1730 DUP3 PUSH2 0x16CB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1752 DUP2 PUSH2 0x1719 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220676167616C000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x178D PUSH1 0xE DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x1798 DUP3 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17BA DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C616D6174206F776E6572206261727520746964616B20626F6C656820616C PUSH0 DUP3 ADD MSTORE PUSH32 0x616D6174206E6F6C000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x181B PUSH1 0x28 DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x1826 DUP3 PUSH2 0x17C1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1848 DUP2 PUSH2 0x180F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB LOG3 ADDRESS LOG3 PUSH12 0x942A63E899E406CF58E1B1A4 BASEFEE TIMESTAMP SWAP10 SWAP14 CODESIZE COINBASE 0xCE 0xAB SWAP5 PUSH2 0x5058 DUP15 0xAC SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
		"sourceMap": "219:5654:0:-:0;;;737:51;;;;;;;;;;770:10;762:5;;:18;;;;;;;;;;;;;;;;;;219:5654;;;;;;"
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "totalAddresses",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "totalAmount",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "timestamp",
					"type": "uint256"
				}
			],
			"name": "BatchTransferSuccessful",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address[]",
					"name": "recipients",
					"type": "address[]"
				},
				{
					"internalType": "uint256[]",
					"name": "amounts",
					"type": "uint256[]"
				}
			],
			"name": "batchTransfer",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "tokenAddress",
					"type": "address"
				},
				{
					"internalType": "address[]",
					"name": "recipients",
					"type": "address[]"
				},
				{
					"internalType": "uint256[]",
					"name": "amounts",
					"type": "uint256[]"
				}
			],
			"name": "batchTransferToken",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "tokenAddress",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "recoverTokens",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"stateMutability": "payable",
			"type": "receive"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 4,
				"contract": "edosetiawan.sol:BatchTransfer",
				"label": "owner",
				"offset": 0,
				"slot": "0",
				"type": "t_address"
			}
		],
		"types": {
			"t_address": {
				"encoding": "inplace",
				"label": "address",
				"numberOfBytes": "20"
			}
		}
	},
	"web3Deploy": "var batchtransferContract = new web3.eth.Contract([{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAddresses\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BatchTransferSuccessful\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]);\nvar batchtransfer = batchtransferContract.deploy({\n     data: '0x6080604052348015600e575f5ffd5b50335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118858061005b5f395ff3fe60806040526004361061004d575f3560e01c8063069c9fae1461005857806320651d5d1461008057806388d695b2146100bc5780638da5cb5b146100ec578063f2fde38b1461011657610054565b3661005457005b5f5ffd5b348015610063575f5ffd5b5061007e60048036038101906100799190610e0b565b61013e565b005b34801561008b575f5ffd5b506100a660048036038101906100a19190610eff565b6103b1565b6040516100b39190610faa565b60405180910390f35b6100d660048036038101906100d19190610fc3565b610888565b6040516100e39190610faa565b60405180910390f35b3480156100f7575f5ffd5b50610100610c14565b60405161010d9190611050565b60405180910390f35b348015610121575f5ffd5b5061013c60048036038101906101379190611069565b610c38565b005b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c390611114565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102cd575f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516102449061115f565b5f6040518083038185875af1925050503d805f811461027e576040519150601f19603f3d011682016040523d82523d5f602084013e610283565b606091505b50509050806102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be906111bd565b60405180910390fd5b506103ad565b5f8290508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b815260040161032c9291906111ea565b6020604051808303815f875af1158015610348573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061036c919061123b565b6103ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a2906112b0565b60405180910390fd5b505b5050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610440576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043790611114565b60405180910390fd5b5f85859050905083839050811461048c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104839061133e565b60405180910390fd5b6107d08111156104d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c8906113cc565b60405180910390fd5b5f8790505f5f90505f5f90505b8381101561051a578686828181106104f9576104f86113ea565b5b905060200201358261050b9190611444565b915080806001019150506104de565b50808273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610557929190611477565b602060405180830381865afa158015610572573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061059691906114b2565b10156105d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ce90611527565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161061493929190611545565b6020604051808303815f875af1158015610630573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610654919061123b565b610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068a906115ea565b60405180910390fd5b5f5f90505b8381101561083c575f73ffffffffffffffffffffffffffffffffffffffff168989838181106106ca576106c96113ea565b5b90506020020160208101906106df9190611069565b73ffffffffffffffffffffffffffffffffffffffff1603610735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072c90611678565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8a8a84818110610764576107636113ea565b5b90506020020160208101906107799190611069565b89898581811061078c5761078b6113ea565b5b905060200201356040518363ffffffff1660e01b81526004016107b09291906111ea565b6020604051808303815f875af11580156107cc573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107f0919061123b565b61082f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610826906112b0565b60405180910390fd5b8080600101915050610698565b507ff16e4d5f82c54d462ffe3d21d1d2a968d757649029d89f7253094312837a6e8b83824260405161087093929190611696565b60405180910390a16001935050505095945050505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e90611114565b60405180910390fd5b5f858590509050838390508114610963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095a9061133e565b60405180910390fd5b6107d08111156109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099f906113cc565b60405180910390fd5b5f5f90505f5f90505b828110156109ed578585828181106109cc576109cb6113ea565b5b90506020020135826109de9190611444565b915080806001019150506109b1565b50803414610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a279061173b565b60405180910390fd5b5f5f5f90505b83811015610bc9575f73ffffffffffffffffffffffffffffffffffffffff16898983818110610a6857610a676113ea565b5b9050602002016020810190610a7d9190611069565b73ffffffffffffffffffffffffffffffffffffffff1603610ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aca90611678565b60405180910390fd5b888882818110610ae657610ae56113ea565b5b9050602002016020810190610afb9190611069565b73ffffffffffffffffffffffffffffffffffffffff16878783818110610b2457610b236113ea565b5b90506020020135604051610b379061115f565b5f6040518083038185875af1925050503d805f8114610b71576040519150601f19603f3d011682016040523d82523d5f602084013e610b76565b606091505b50508092505081610bbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb3906117a3565b60405180910390fd5b8080600101915050610a36565b507ff16e4d5f82c54d462ffe3d21d1d2a968d757649029d89f7253094312837a6e8b838342604051610bfd93929190611696565b60405180910390a160019350505050949350505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbd90611114565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2b90611831565b60405180910390fd5b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610da782610d7e565b9050919050565b610db781610d9d565b8114610dc1575f5ffd5b50565b5f81359050610dd281610dae565b92915050565b5f819050919050565b610dea81610dd8565b8114610df4575f5ffd5b50565b5f81359050610e0581610de1565b92915050565b5f5f60408385031215610e2157610e20610d76565b5b5f610e2e85828601610dc4565b9250506020610e3f85828601610df7565b9150509250929050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610e6a57610e69610e49565b5b8235905067ffffffffffffffff811115610e8757610e86610e4d565b5b602083019150836020820283011115610ea357610ea2610e51565b5b9250929050565b5f5f83601f840112610ebf57610ebe610e49565b5b8235905067ffffffffffffffff811115610edc57610edb610e4d565b5b602083019150836020820283011115610ef857610ef7610e51565b5b9250929050565b5f5f5f5f5f60608688031215610f1857610f17610d76565b5b5f610f2588828901610dc4565b955050602086013567ffffffffffffffff811115610f4657610f45610d7a565b5b610f5288828901610e55565b9450945050604086013567ffffffffffffffff811115610f7557610f74610d7a565b5b610f8188828901610eaa565b92509250509295509295909350565b5f8115159050919050565b610fa481610f90565b82525050565b5f602082019050610fbd5f830184610f9b565b92915050565b5f5f5f5f60408587031215610fdb57610fda610d76565b5b5f85013567ffffffffffffffff811115610ff857610ff7610d7a565b5b61100487828801610e55565b9450945050602085013567ffffffffffffffff81111561102757611026610d7a565b5b61103387828801610eaa565b925092505092959194509250565b61104a81610d9d565b82525050565b5f6020820190506110635f830184611041565b92915050565b5f6020828403121561107e5761107d610d76565b5b5f61108b84828501610dc4565b91505092915050565b5f82825260208201905092915050565b7f48616e7961206f776e65722079616e67206461706174206d656e67616b7365735f8201527f2066756e67736920696e69000000000000000000000000000000000000000000602082015250565b5f6110fe602b83611094565b9150611109826110a4565b604082019050919050565b5f6020820190508181035f83015261112b816110f2565b9050919050565b5f81905092915050565b50565b5f61114a5f83611132565b91506111558261113c565b5f82019050919050565b5f6111698261113f565b9150819050919050565b7f5472616e73666572206e617469766520746f6b656e20676167616c00000000005f82015250565b5f6111a7601b83611094565b91506111b282611173565b602082019050919050565b5f6020820190508181035f8301526111d48161119b565b9050919050565b6111e481610dd8565b82525050565b5f6040820190506111fd5f830185611041565b61120a60208301846111db565b9392505050565b61121a81610f90565b8114611224575f5ffd5b50565b5f8151905061123581611211565b92915050565b5f602082840312156112505761124f610d76565b5b5f61125d84828501611227565b91505092915050565b7f5472616e7366657220746f6b656e20676167616c0000000000000000000000005f82015250565b5f61129a601483611094565b91506112a582611266565b602082019050919050565b5f6020820190508181035f8301526112c78161128e565b9050919050565b7f50616e6a616e6720617272617920726563697069656e74732064616e20616d6f5f8201527f756e74732068617275732073616d610000000000000000000000000000000000602082015250565b5f611328602f83611094565b9150611333826112ce565b604082019050919050565b5f6020820190508181035f8301526113558161131c565b9050919050565b7f4d616b73696d616c203230303020616c616d61742070656e6572696d612064615f8201527f6c616d2073617475206261746368000000000000000000000000000000000000602082015250565b5f6113b6602e83611094565b91506113c18261135c565b604082019050919050565b5f6020820190508181035f8301526113e3816113aa565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61144e82610dd8565b915061145983610dd8565b925082820190508082111561147157611470611417565b5b92915050565b5f60408201905061148a5f830185611041565b6114976020830184611041565b9392505050565b5f815190506114ac81610de1565b92915050565b5f602082840312156114c7576114c6610d76565b5b5f6114d48482850161149e565b91505092915050565b7f416c6c6f77616e636520746f6b656e20746964616b2063756b757000000000005f82015250565b5f611511601b83611094565b915061151c826114dd565b602082019050919050565b5f6020820190508181035f83015261153e81611505565b9050919050565b5f6060820190506115585f830186611041565b6115656020830185611041565b61157260408301846111db565b949350505050565b7f5472616e7366657220646172692070656e676972696d206b65206b6f6e7472615f8201527f6b20676167616c00000000000000000000000000000000000000000000000000602082015250565b5f6115d4602783611094565b91506115df8261157a565b604082019050919050565b5f6020820190508181035f830152611601816115c8565b9050919050565b7f416c616d61742070656e6572696d6120746964616b20626f6c656820616c616d5f8201527f6174206e6f6c0000000000000000000000000000000000000000000000000000602082015250565b5f611662602683611094565b915061166d82611608565b604082019050919050565b5f6020820190508181035f83015261168f81611656565b9050919050565b5f6060820190506116a95f8301866111db565b6116b660208301856111db565b6116c360408301846111db565b949350505050565b7f546f74616c20616d6f756e742068617275732073616d612064656e67616e206e5f8201527f696c61692079616e672064696b6972696d000000000000000000000000000000602082015250565b5f611725603183611094565b9150611730826116cb565b604082019050919050565b5f6020820190508181035f83015261175281611719565b9050919050565b7f5472616e7366657220676167616c0000000000000000000000000000000000005f82015250565b5f61178d600e83611094565b915061179882611759565b602082019050919050565b5f6020820190508181035f8301526117ba81611781565b9050919050565b7f416c616d6174206f776e6572206261727520746964616b20626f6c656820616c5f8201527f616d6174206e6f6c000000000000000000000000000000000000000000000000602082015250565b5f61181b602883611094565b9150611826826117c1565b604082019050919050565b5f6020820190508181035f8301526118488161180f565b905091905056fea2646970667358221220bba330a36b942a63e899e406cf58e1b1a44842999d3841ceab946150588eac9864736f6c634300081c0033', \n     arguments: [\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"88d695b2": "batchTransfer(address[],uint256[])",
		"20651d5d": "batchTransferToken(address,address[],uint256[])",
		"8da5cb5b": "owner()",
		"069c9fae": "recoverTokens(address,uint256)",
		"f2fde38b": "transferOwnership(address)"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "1255400",
			"executionCost": "25570",
			"totalCost": "1280970"
		},
		"External": {
			"batchTransfer(address[],uint256[])": "infinite",
			"batchTransferToken(address,address[],uint256[])": "infinite",
			"owner()": "2551",
			"recoverTokens(address,uint256)": "infinite",
			"transferOwnership(address)": "26982"
		}
	},
	"devdoc": {
		"details": "Smart contract untuk melakukan transfer batch ke banyak alamat sekaligus Optimal untuk jaringan assam.tea.xyz",
		"kind": "dev",
		"methods": {
			"batchTransfer(address[],uint256[])": {
				"details": "Fungsi untuk mengirim native token ke banyak alamat sekaligus",
				"params": {
					"amounts": "Array jumlah yang dikirim ke masing-masing penerima",
					"recipients": "Array alamat penerima"
				},
				"returns": {
					"_0": "status Boolean yang menunjukkan keberhasilan transaksi"
				}
			},
			"batchTransferToken(address,address[],uint256[])": {
				"details": "Fungsi untuk mengirim token ERC20 ke banyak alamat sekaligus",
				"params": {
					"amounts": "Array jumlah token yang dikirim ke masing-masing penerima",
					"recipients": "Array alamat penerima",
					"tokenAddress": "Alamat kontrak ERC20"
				},
				"returns": {
					"_0": "status Boolean yang menunjukkan keberhasilan transaksi"
				}
			},
			"recoverTokens(address,uint256)": {
				"details": "Fungsi untuk mengembalikan token yang tidak sengaja dikirim ke kontrak",
				"params": {
					"amount": "Jumlah token yang akan dikembalikan",
					"tokenAddress": "Alamat kontrak token (gunakan address(0) untuk native token)"
				}
			},
			"transferOwnership(address)": {
				"details": "Fungsi untuk mengubah owner kontrak",
				"params": {
					"newOwner": "Alamat owner baru"
				}
			}
		},
		"title": "BatchTransfer",
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@_371": {
				"entryPoint": null,
				"id": 371,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@batchTransferToken_317": {
				"entryPoint": 945,
				"id": 317,
				"parameterSlots": 5,
				"returnSlots": 1
			},
			"@batchTransfer_176": {
				"entryPoint": 2184,
				"id": 176,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"@owner_4": {
				"entryPoint": 3092,
				"id": 4,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@recoverTokens_367": {
				"entryPoint": 318,
				"id": 367,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@transferOwnership_56": {
				"entryPoint": 3128,
				"id": 56,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"abi_decode_t_address": {
				"entryPoint": 3524,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
				"entryPoint": 3669,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
				"entryPoint": 3754,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_t_bool_fromMemory": {
				"entryPoint": 4647,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_uint256": {
				"entryPoint": 3575,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_uint256_fromMemory": {
				"entryPoint": 5278,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_address": {
				"entryPoint": 4201,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
				"entryPoint": 3839,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 5
			},
			"abi_decode_tuple_t_addresst_uint256": {
				"entryPoint": 3595,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
				"entryPoint": 4035,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 4
			},
			"abi_decode_tuple_t_bool_fromMemory": {
				"entryPoint": 4667,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_uint256_fromMemory": {
				"entryPoint": 5298,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_t_address_to_t_address_fromStack": {
				"entryPoint": 4161,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_bool_to_t_bool_fromStack": {
				"entryPoint": 3995,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_stringliteral_07a8e39bfd3f01ba00934321cb97f4112b2296efb98e2f7a427e74fe0d1d5d96_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 6159,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_1f106fa176c9775f0dab0bc2b1454a1eca94b668ddb47dadc23fc910e5d0e3a8_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 4892,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_37325eea18700d90d6e215f9e9b752cd62b8a0490ab2d9176862e482d3be78e3_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 5381,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_5ab4f7fd44e4cc20c76b147a0eb5ab50168bbb2e06bd09098b08d7bc42f072ee_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 4750,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_85607cd5db81cda93c99d375bda136faf426bcc483cf8702458057033eeb03ff_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 6017,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_902ee231d0af0be1c620f5541beca83246591b4518a3e21b50a015102ad3aa6c_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 5576,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_91466b77ad938e250b04d9a53330fb68a78cb4b3933d2285eb8f594692280890_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 4507,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
				"entryPoint": 4415,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_cd2b1726f1cf41d7595fc8cf7bb692e2254057a04d640b1c9f9466ee685bf532_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 5034,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_d33486b4551fd8eb94dfa107a54daeacaaea2f39ae8a9d9bdf9d252e9f596d0b_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 5913,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_d455f6787405982f3f0e9fb87195a04c45f352871379deefb1dc966cb46ec915_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 5718,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_eabe5c0aa1a8e5cbf9a86c0c91c48538e31c92d93f25d5c83c5c0a4bca360cd6_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 4338,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 4571,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
				"entryPoint": 4447,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
				"entryPoint": 4176,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
				"entryPoint": 5239,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
				"entryPoint": 5445,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
				"entryPoint": 4586,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
				"entryPoint": 4010,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_07a8e39bfd3f01ba00934321cb97f4112b2296efb98e2f7a427e74fe0d1d5d96__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 6193,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_1f106fa176c9775f0dab0bc2b1454a1eca94b668ddb47dadc23fc910e5d0e3a8__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4926,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_37325eea18700d90d6e215f9e9b752cd62b8a0490ab2d9176862e482d3be78e3__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 5415,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_5ab4f7fd44e4cc20c76b147a0eb5ab50168bbb2e06bd09098b08d7bc42f072ee__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4784,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_85607cd5db81cda93c99d375bda136faf426bcc483cf8702458057033eeb03ff__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 6051,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_902ee231d0af0be1c620f5541beca83246591b4518a3e21b50a015102ad3aa6c__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 5610,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_91466b77ad938e250b04d9a53330fb68a78cb4b3933d2285eb8f594692280890__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4541,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_cd2b1726f1cf41d7595fc8cf7bb692e2254057a04d640b1c9f9466ee685bf532__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 5068,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_d33486b4551fd8eb94dfa107a54daeacaaea2f39ae8a9d9bdf9d252e9f596d0b__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 5947,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_d455f6787405982f3f0e9fb87195a04c45f352871379deefb1dc966cb46ec915__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 5752,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_eabe5c0aa1a8e5cbf9a86c0c91c48538e31c92d93f25d5c83c5c0a4bca360cd6__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4372,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": 5782,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"allocate_unbounded": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
				"entryPoint": 4402,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
				"entryPoint": 4244,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_add_t_uint256": {
				"entryPoint": 5188,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"cleanup_t_address": {
				"entryPoint": 3485,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_bool": {
				"entryPoint": 3984,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint160": {
				"entryPoint": 3454,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 3544,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"panic_error_0x11": {
				"entryPoint": 5143,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x32": {
				"entryPoint": 5098,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
				"entryPoint": 3661,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
				"entryPoint": 3657,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
				"entryPoint": 3665,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
				"entryPoint": 3450,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
				"entryPoint": 3446,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"store_literal_in_memory_07a8e39bfd3f01ba00934321cb97f4112b2296efb98e2f7a427e74fe0d1d5d96": {
				"entryPoint": 6081,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_1f106fa176c9775f0dab0bc2b1454a1eca94b668ddb47dadc23fc910e5d0e3a8": {
				"entryPoint": 4814,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_37325eea18700d90d6e215f9e9b752cd62b8a0490ab2d9176862e482d3be78e3": {
				"entryPoint": 5341,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_5ab4f7fd44e4cc20c76b147a0eb5ab50168bbb2e06bd09098b08d7bc42f072ee": {
				"entryPoint": 4710,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_85607cd5db81cda93c99d375bda136faf426bcc483cf8702458057033eeb03ff": {
				"entryPoint": 5977,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_902ee231d0af0be1c620f5541beca83246591b4518a3e21b50a015102ad3aa6c": {
				"entryPoint": 5498,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_91466b77ad938e250b04d9a53330fb68a78cb4b3933d2285eb8f594692280890": {
				"entryPoint": 4467,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
				"entryPoint": 4412,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_cd2b1726f1cf41d7595fc8cf7bb692e2254057a04d640b1c9f9466ee685bf532": {
				"entryPoint": 4956,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_d33486b4551fd8eb94dfa107a54daeacaaea2f39ae8a9d9bdf9d252e9f596d0b": {
				"entryPoint": 5835,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_d455f6787405982f3f0e9fb87195a04c45f352871379deefb1dc966cb46ec915": {
				"entryPoint": 5640,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_eabe5c0aa1a8e5cbf9a86c0c91c48538e31c92d93f25d5c83c5c0a4bca360cd6": {
				"entryPoint": 4260,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_address": {
				"entryPoint": 3502,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_bool": {
				"entryPoint": 4625,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_uint256": {
				"entryPoint": 3553,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:22120:1",
					"nodeType": "YulBlock",
					"src": "0:22120:1",
					"statements": [
						{
							"body": {
								"nativeSrc": "47:35:1",
								"nodeType": "YulBlock",
								"src": "47:35:1",
								"statements": [
									{
										"nativeSrc": "57:19:1",
										"nodeType": "YulAssignment",
										"src": "57:19:1",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "73:2:1",
													"nodeType": "YulLiteral",
													"src": "73:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "67:5:1",
												"nodeType": "YulIdentifier",
												"src": "67:5:1"
											},
											"nativeSrc": "67:9:1",
											"nodeType": "YulFunctionCall",
											"src": "67:9:1"
										},
										"variableNames": [
											{
												"name": "memPtr",
												"nativeSrc": "57:6:1",
												"nodeType": "YulIdentifier",
												"src": "57:6:1"
											}
										]
									}
								]
							},
							"name": "allocate_unbounded",
							"nativeSrc": "7:75:1",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "memPtr",
									"nativeSrc": "40:6:1",
									"nodeType": "YulTypedName",
									"src": "40:6:1",
									"type": ""
								}
							],
							"src": "7:75:1"
						},
						{
							"body": {
								"nativeSrc": "177:28:1",
								"nodeType": "YulBlock",
								"src": "177:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "194:1:1",
													"nodeType": "YulLiteral",
													"src": "194:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "197:1:1",
													"nodeType": "YulLiteral",
													"src": "197:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "187:6:1",
												"nodeType": "YulIdentifier",
												"src": "187:6:1"
											},
											"nativeSrc": "187:12:1",
											"nodeType": "YulFunctionCall",
											"src": "187:12:1"
										},
										"nativeSrc": "187:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "187:12:1"
									}
								]
							},
							"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
							"nativeSrc": "88:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "88:117:1"
						},
						{
							"body": {
								"nativeSrc": "300:28:1",
								"nodeType": "YulBlock",
								"src": "300:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "317:1:1",
													"nodeType": "YulLiteral",
													"src": "317:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "320:1:1",
													"nodeType": "YulLiteral",
													"src": "320:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "310:6:1",
												"nodeType": "YulIdentifier",
												"src": "310:6:1"
											},
											"nativeSrc": "310:12:1",
											"nodeType": "YulFunctionCall",
											"src": "310:12:1"
										},
										"nativeSrc": "310:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "310:12:1"
									}
								]
							},
							"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
							"nativeSrc": "211:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "211:117:1"
						},
						{
							"body": {
								"nativeSrc": "379:81:1",
								"nodeType": "YulBlock",
								"src": "379:81:1",
								"statements": [
									{
										"nativeSrc": "389:65:1",
										"nodeType": "YulAssignment",
										"src": "389:65:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "404:5:1",
													"nodeType": "YulIdentifier",
													"src": "404:5:1"
												},
												{
													"kind": "number",
													"nativeSrc": "411:42:1",
													"nodeType": "YulLiteral",
													"src": "411:42:1",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "400:3:1",
												"nodeType": "YulIdentifier",
												"src": "400:3:1"
											},
											"nativeSrc": "400:54:1",
											"nodeType": "YulFunctionCall",
											"src": "400:54:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "389:7:1",
												"nodeType": "YulIdentifier",
												"src": "389:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint160",
							"nativeSrc": "334:126:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "361:5:1",
									"nodeType": "YulTypedName",
									"src": "361:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "371:7:1",
									"nodeType": "YulTypedName",
									"src": "371:7:1",
									"type": ""
								}
							],
							"src": "334:126:1"
						},
						{
							"body": {
								"nativeSrc": "511:51:1",
								"nodeType": "YulBlock",
								"src": "511:51:1",
								"statements": [
									{
										"nativeSrc": "521:35:1",
										"nodeType": "YulAssignment",
										"src": "521:35:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "550:5:1",
													"nodeType": "YulIdentifier",
													"src": "550:5:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint160",
												"nativeSrc": "532:17:1",
												"nodeType": "YulIdentifier",
												"src": "532:17:1"
											},
											"nativeSrc": "532:24:1",
											"nodeType": "YulFunctionCall",
											"src": "532:24:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "521:7:1",
												"nodeType": "YulIdentifier",
												"src": "521:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_address",
							"nativeSrc": "466:96:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "493:5:1",
									"nodeType": "YulTypedName",
									"src": "493:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "503:7:1",
									"nodeType": "YulTypedName",
									"src": "503:7:1",
									"type": ""
								}
							],
							"src": "466:96:1"
						},
						{
							"body": {
								"nativeSrc": "611:79:1",
								"nodeType": "YulBlock",
								"src": "611:79:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "668:16:1",
											"nodeType": "YulBlock",
											"src": "668:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "677:1:1",
																"nodeType": "YulLiteral",
																"src": "677:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "680:1:1",
																"nodeType": "YulLiteral",
																"src": "680:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "670:6:1",
															"nodeType": "YulIdentifier",
															"src": "670:6:1"
														},
														"nativeSrc": "670:12:1",
														"nodeType": "YulFunctionCall",
														"src": "670:12:1"
													},
													"nativeSrc": "670:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "670:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "634:5:1",
															"nodeType": "YulIdentifier",
															"src": "634:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "659:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "659:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_address",
																"nativeSrc": "641:17:1",
																"nodeType": "YulIdentifier",
																"src": "641:17:1"
															},
															"nativeSrc": "641:24:1",
															"nodeType": "YulFunctionCall",
															"src": "641:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "631:2:1",
														"nodeType": "YulIdentifier",
														"src": "631:2:1"
													},
													"nativeSrc": "631:35:1",
													"nodeType": "YulFunctionCall",
													"src": "631:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "624:6:1",
												"nodeType": "YulIdentifier",
												"src": "624:6:1"
											},
											"nativeSrc": "624:43:1",
											"nodeType": "YulFunctionCall",
											"src": "624:43:1"
										},
										"nativeSrc": "621:63:1",
										"nodeType": "YulIf",
										"src": "621:63:1"
									}
								]
							},
							"name": "validator_revert_t_address",
							"nativeSrc": "568:122:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "604:5:1",
									"nodeType": "YulTypedName",
									"src": "604:5:1",
									"type": ""
								}
							],
							"src": "568:122:1"
						},
						{
							"body": {
								"nativeSrc": "748:87:1",
								"nodeType": "YulBlock",
								"src": "748:87:1",
								"statements": [
									{
										"nativeSrc": "758:29:1",
										"nodeType": "YulAssignment",
										"src": "758:29:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "780:6:1",
													"nodeType": "YulIdentifier",
													"src": "780:6:1"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "767:12:1",
												"nodeType": "YulIdentifier",
												"src": "767:12:1"
											},
											"nativeSrc": "767:20:1",
											"nodeType": "YulFunctionCall",
											"src": "767:20:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "758:5:1",
												"nodeType": "YulIdentifier",
												"src": "758:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "823:5:1",
													"nodeType": "YulIdentifier",
													"src": "823:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_address",
												"nativeSrc": "796:26:1",
												"nodeType": "YulIdentifier",
												"src": "796:26:1"
											},
											"nativeSrc": "796:33:1",
											"nodeType": "YulFunctionCall",
											"src": "796:33:1"
										},
										"nativeSrc": "796:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "796:33:1"
									}
								]
							},
							"name": "abi_decode_t_address",
							"nativeSrc": "696:139:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "726:6:1",
									"nodeType": "YulTypedName",
									"src": "726:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "734:3:1",
									"nodeType": "YulTypedName",
									"src": "734:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "742:5:1",
									"nodeType": "YulTypedName",
									"src": "742:5:1",
									"type": ""
								}
							],
							"src": "696:139:1"
						},
						{
							"body": {
								"nativeSrc": "886:32:1",
								"nodeType": "YulBlock",
								"src": "886:32:1",
								"statements": [
									{
										"nativeSrc": "896:16:1",
										"nodeType": "YulAssignment",
										"src": "896:16:1",
										"value": {
											"name": "value",
											"nativeSrc": "907:5:1",
											"nodeType": "YulIdentifier",
											"src": "907:5:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "896:7:1",
												"nodeType": "YulIdentifier",
												"src": "896:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "841:77:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "868:5:1",
									"nodeType": "YulTypedName",
									"src": "868:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "878:7:1",
									"nodeType": "YulTypedName",
									"src": "878:7:1",
									"type": ""
								}
							],
							"src": "841:77:1"
						},
						{
							"body": {
								"nativeSrc": "967:79:1",
								"nodeType": "YulBlock",
								"src": "967:79:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "1024:16:1",
											"nodeType": "YulBlock",
											"src": "1024:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1033:1:1",
																"nodeType": "YulLiteral",
																"src": "1033:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "1036:1:1",
																"nodeType": "YulLiteral",
																"src": "1036:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "1026:6:1",
															"nodeType": "YulIdentifier",
															"src": "1026:6:1"
														},
														"nativeSrc": "1026:12:1",
														"nodeType": "YulFunctionCall",
														"src": "1026:12:1"
													},
													"nativeSrc": "1026:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "1026:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "990:5:1",
															"nodeType": "YulIdentifier",
															"src": "990:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "1015:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1015:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_uint256",
																"nativeSrc": "997:17:1",
																"nodeType": "YulIdentifier",
																"src": "997:17:1"
															},
															"nativeSrc": "997:24:1",
															"nodeType": "YulFunctionCall",
															"src": "997:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "987:2:1",
														"nodeType": "YulIdentifier",
														"src": "987:2:1"
													},
													"nativeSrc": "987:35:1",
													"nodeType": "YulFunctionCall",
													"src": "987:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "980:6:1",
												"nodeType": "YulIdentifier",
												"src": "980:6:1"
											},
											"nativeSrc": "980:43:1",
											"nodeType": "YulFunctionCall",
											"src": "980:43:1"
										},
										"nativeSrc": "977:63:1",
										"nodeType": "YulIf",
										"src": "977:63:1"
									}
								]
							},
							"name": "validator_revert_t_uint256",
							"nativeSrc": "924:122:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "960:5:1",
									"nodeType": "YulTypedName",
									"src": "960:5:1",
									"type": ""
								}
							],
							"src": "924:122:1"
						},
						{
							"body": {
								"nativeSrc": "1104:87:1",
								"nodeType": "YulBlock",
								"src": "1104:87:1",
								"statements": [
									{
										"nativeSrc": "1114:29:1",
										"nodeType": "YulAssignment",
										"src": "1114:29:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "1136:6:1",
													"nodeType": "YulIdentifier",
													"src": "1136:6:1"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "1123:12:1",
												"nodeType": "YulIdentifier",
												"src": "1123:12:1"
											},
											"nativeSrc": "1123:20:1",
											"nodeType": "YulFunctionCall",
											"src": "1123:20:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "1114:5:1",
												"nodeType": "YulIdentifier",
												"src": "1114:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1179:5:1",
													"nodeType": "YulIdentifier",
													"src": "1179:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1152:26:1",
												"nodeType": "YulIdentifier",
												"src": "1152:26:1"
											},
											"nativeSrc": "1152:33:1",
											"nodeType": "YulFunctionCall",
											"src": "1152:33:1"
										},
										"nativeSrc": "1152:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "1152:33:1"
									}
								]
							},
							"name": "abi_decode_t_uint256",
							"nativeSrc": "1052:139:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "1082:6:1",
									"nodeType": "YulTypedName",
									"src": "1082:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "1090:3:1",
									"nodeType": "YulTypedName",
									"src": "1090:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "1098:5:1",
									"nodeType": "YulTypedName",
									"src": "1098:5:1",
									"type": ""
								}
							],
							"src": "1052:139:1"
						},
						{
							"body": {
								"nativeSrc": "1280:391:1",
								"nodeType": "YulBlock",
								"src": "1280:391:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "1326:83:1",
											"nodeType": "YulBlock",
											"src": "1326:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "1328:77:1",
															"nodeType": "YulIdentifier",
															"src": "1328:77:1"
														},
														"nativeSrc": "1328:79:1",
														"nodeType": "YulFunctionCall",
														"src": "1328:79:1"
													},
													"nativeSrc": "1328:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "1328:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "1301:7:1",
															"nodeType": "YulIdentifier",
															"src": "1301:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "1310:9:1",
															"nodeType": "YulIdentifier",
															"src": "1310:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "1297:3:1",
														"nodeType": "YulIdentifier",
														"src": "1297:3:1"
													},
													"nativeSrc": "1297:23:1",
													"nodeType": "YulFunctionCall",
													"src": "1297:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1322:2:1",
													"nodeType": "YulLiteral",
													"src": "1322:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "1293:3:1",
												"nodeType": "YulIdentifier",
												"src": "1293:3:1"
											},
											"nativeSrc": "1293:32:1",
											"nodeType": "YulFunctionCall",
											"src": "1293:32:1"
										},
										"nativeSrc": "1290:119:1",
										"nodeType": "YulIf",
										"src": "1290:119:1"
									},
									{
										"nativeSrc": "1419:117:1",
										"nodeType": "YulBlock",
										"src": "1419:117:1",
										"statements": [
											{
												"nativeSrc": "1434:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "1434:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "1448:1:1",
													"nodeType": "YulLiteral",
													"src": "1448:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "1438:6:1",
														"nodeType": "YulTypedName",
														"src": "1438:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "1463:63:1",
												"nodeType": "YulAssignment",
												"src": "1463:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "1498:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1498:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "1509:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1509:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1494:3:1",
																"nodeType": "YulIdentifier",
																"src": "1494:3:1"
															},
															"nativeSrc": "1494:22:1",
															"nodeType": "YulFunctionCall",
															"src": "1494:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "1518:7:1",
															"nodeType": "YulIdentifier",
															"src": "1518:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "1473:20:1",
														"nodeType": "YulIdentifier",
														"src": "1473:20:1"
													},
													"nativeSrc": "1473:53:1",
													"nodeType": "YulFunctionCall",
													"src": "1473:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "1463:6:1",
														"nodeType": "YulIdentifier",
														"src": "1463:6:1"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "1546:118:1",
										"nodeType": "YulBlock",
										"src": "1546:118:1",
										"statements": [
											{
												"nativeSrc": "1561:16:1",
												"nodeType": "YulVariableDeclaration",
												"src": "1561:16:1",
												"value": {
													"kind": "number",
													"nativeSrc": "1575:2:1",
													"nodeType": "YulLiteral",
													"src": "1575:2:1",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "1565:6:1",
														"nodeType": "YulTypedName",
														"src": "1565:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "1591:63:1",
												"nodeType": "YulAssignment",
												"src": "1591:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "1626:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1626:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "1637:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1637:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1622:3:1",
																"nodeType": "YulIdentifier",
																"src": "1622:3:1"
															},
															"nativeSrc": "1622:22:1",
															"nodeType": "YulFunctionCall",
															"src": "1622:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "1646:7:1",
															"nodeType": "YulIdentifier",
															"src": "1646:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "1601:20:1",
														"nodeType": "YulIdentifier",
														"src": "1601:20:1"
													},
													"nativeSrc": "1601:53:1",
													"nodeType": "YulFunctionCall",
													"src": "1601:53:1"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "1591:6:1",
														"nodeType": "YulIdentifier",
														"src": "1591:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_uint256",
							"nativeSrc": "1197:474:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1242:9:1",
									"nodeType": "YulTypedName",
									"src": "1242:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "1253:7:1",
									"nodeType": "YulTypedName",
									"src": "1253:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "1265:6:1",
									"nodeType": "YulTypedName",
									"src": "1265:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "1273:6:1",
									"nodeType": "YulTypedName",
									"src": "1273:6:1",
									"type": ""
								}
							],
							"src": "1197:474:1"
						},
						{
							"body": {
								"nativeSrc": "1766:28:1",
								"nodeType": "YulBlock",
								"src": "1766:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "1783:1:1",
													"nodeType": "YulLiteral",
													"src": "1783:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "1786:1:1",
													"nodeType": "YulLiteral",
													"src": "1786:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "1776:6:1",
												"nodeType": "YulIdentifier",
												"src": "1776:6:1"
											},
											"nativeSrc": "1776:12:1",
											"nodeType": "YulFunctionCall",
											"src": "1776:12:1"
										},
										"nativeSrc": "1776:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "1776:12:1"
									}
								]
							},
							"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
							"nativeSrc": "1677:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "1677:117:1"
						},
						{
							"body": {
								"nativeSrc": "1889:28:1",
								"nodeType": "YulBlock",
								"src": "1889:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "1906:1:1",
													"nodeType": "YulLiteral",
													"src": "1906:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "1909:1:1",
													"nodeType": "YulLiteral",
													"src": "1909:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "1899:6:1",
												"nodeType": "YulIdentifier",
												"src": "1899:6:1"
											},
											"nativeSrc": "1899:12:1",
											"nodeType": "YulFunctionCall",
											"src": "1899:12:1"
										},
										"nativeSrc": "1899:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "1899:12:1"
									}
								]
							},
							"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
							"nativeSrc": "1800:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "1800:117:1"
						},
						{
							"body": {
								"nativeSrc": "2012:28:1",
								"nodeType": "YulBlock",
								"src": "2012:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "2029:1:1",
													"nodeType": "YulLiteral",
													"src": "2029:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "2032:1:1",
													"nodeType": "YulLiteral",
													"src": "2032:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "2022:6:1",
												"nodeType": "YulIdentifier",
												"src": "2022:6:1"
											},
											"nativeSrc": "2022:12:1",
											"nodeType": "YulFunctionCall",
											"src": "2022:12:1"
										},
										"nativeSrc": "2022:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "2022:12:1"
									}
								]
							},
							"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
							"nativeSrc": "1923:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "1923:117:1"
						},
						{
							"body": {
								"nativeSrc": "2153:478:1",
								"nodeType": "YulBlock",
								"src": "2153:478:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "2202:83:1",
											"nodeType": "YulBlock",
											"src": "2202:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
															"nativeSrc": "2204:77:1",
															"nodeType": "YulIdentifier",
															"src": "2204:77:1"
														},
														"nativeSrc": "2204:79:1",
														"nodeType": "YulFunctionCall",
														"src": "2204:79:1"
													},
													"nativeSrc": "2204:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "2204:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "offset",
																	"nativeSrc": "2181:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2181:6:1"
																},
																{
																	"kind": "number",
																	"nativeSrc": "2189:4:1",
																	"nodeType": "YulLiteral",
																	"src": "2189:4:1",
																	"type": "",
																	"value": "0x1f"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "2177:3:1",
																"nodeType": "YulIdentifier",
																"src": "2177:3:1"
															},
															"nativeSrc": "2177:17:1",
															"nodeType": "YulFunctionCall",
															"src": "2177:17:1"
														},
														{
															"name": "end",
															"nativeSrc": "2196:3:1",
															"nodeType": "YulIdentifier",
															"src": "2196:3:1"
														}
													],
													"functionName": {
														"name": "slt",
														"nativeSrc": "2173:3:1",
														"nodeType": "YulIdentifier",
														"src": "2173:3:1"
													},
													"nativeSrc": "2173:27:1",
													"nodeType": "YulFunctionCall",
													"src": "2173:27:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "2166:6:1",
												"nodeType": "YulIdentifier",
												"src": "2166:6:1"
											},
											"nativeSrc": "2166:35:1",
											"nodeType": "YulFunctionCall",
											"src": "2166:35:1"
										},
										"nativeSrc": "2163:122:1",
										"nodeType": "YulIf",
										"src": "2163:122:1"
									},
									{
										"nativeSrc": "2294:30:1",
										"nodeType": "YulAssignment",
										"src": "2294:30:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "2317:6:1",
													"nodeType": "YulIdentifier",
													"src": "2317:6:1"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "2304:12:1",
												"nodeType": "YulIdentifier",
												"src": "2304:12:1"
											},
											"nativeSrc": "2304:20:1",
											"nodeType": "YulFunctionCall",
											"src": "2304:20:1"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "2294:6:1",
												"nodeType": "YulIdentifier",
												"src": "2294:6:1"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "2367:83:1",
											"nodeType": "YulBlock",
											"src": "2367:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
															"nativeSrc": "2369:77:1",
															"nodeType": "YulIdentifier",
															"src": "2369:77:1"
														},
														"nativeSrc": "2369:79:1",
														"nodeType": "YulFunctionCall",
														"src": "2369:79:1"
													},
													"nativeSrc": "2369:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "2369:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "length",
													"nativeSrc": "2339:6:1",
													"nodeType": "YulIdentifier",
													"src": "2339:6:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2347:18:1",
													"nodeType": "YulLiteral",
													"src": "2347:18:1",
													"type": "",
													"value": "0xffffffffffffffff"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "2336:2:1",
												"nodeType": "YulIdentifier",
												"src": "2336:2:1"
											},
											"nativeSrc": "2336:30:1",
											"nodeType": "YulFunctionCall",
											"src": "2336:30:1"
										},
										"nativeSrc": "2333:117:1",
										"nodeType": "YulIf",
										"src": "2333:117:1"
									},
									{
										"nativeSrc": "2459:29:1",
										"nodeType": "YulAssignment",
										"src": "2459:29:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "2475:6:1",
													"nodeType": "YulIdentifier",
													"src": "2475:6:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2483:4:1",
													"nodeType": "YulLiteral",
													"src": "2483:4:1",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2471:3:1",
												"nodeType": "YulIdentifier",
												"src": "2471:3:1"
											},
											"nativeSrc": "2471:17:1",
											"nodeType": "YulFunctionCall",
											"src": "2471:17:1"
										},
										"variableNames": [
											{
												"name": "arrayPos",
												"nativeSrc": "2459:8:1",
												"nodeType": "YulIdentifier",
												"src": "2459:8:1"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "2542:83:1",
											"nodeType": "YulBlock",
											"src": "2542:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
															"nativeSrc": "2544:77:1",
															"nodeType": "YulIdentifier",
															"src": "2544:77:1"
														},
														"nativeSrc": "2544:79:1",
														"nodeType": "YulFunctionCall",
														"src": "2544:79:1"
													},
													"nativeSrc": "2544:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "2544:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "arrayPos",
															"nativeSrc": "2507:8:1",
															"nodeType": "YulIdentifier",
															"src": "2507:8:1"
														},
														{
															"arguments": [
																{
																	"name": "length",
																	"nativeSrc": "2521:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2521:6:1"
																},
																{
																	"kind": "number",
																	"nativeSrc": "2529:4:1",
																	"nodeType": "YulLiteral",
																	"src": "2529:4:1",
																	"type": "",
																	"value": "0x20"
																}
															],
															"functionName": {
																"name": "mul",
																"nativeSrc": "2517:3:1",
																"nodeType": "YulIdentifier",
																"src": "2517:3:1"
															},
															"nativeSrc": "2517:17:1",
															"nodeType": "YulFunctionCall",
															"src": "2517:17:1"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "2503:3:1",
														"nodeType": "YulIdentifier",
														"src": "2503:3:1"
													},
													"nativeSrc": "2503:32:1",
													"nodeType": "YulFunctionCall",
													"src": "2503:32:1"
												},
												{
													"name": "end",
													"nativeSrc": "2537:3:1",
													"nodeType": "YulIdentifier",
													"src": "2537:3:1"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "2500:2:1",
												"nodeType": "YulIdentifier",
												"src": "2500:2:1"
											},
											"nativeSrc": "2500:41:1",
											"nodeType": "YulFunctionCall",
											"src": "2500:41:1"
										},
										"nativeSrc": "2497:128:1",
										"nodeType": "YulIf",
										"src": "2497:128:1"
									}
								]
							},
							"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
							"nativeSrc": "2063:568:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "2120:6:1",
									"nodeType": "YulTypedName",
									"src": "2120:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "2128:3:1",
									"nodeType": "YulTypedName",
									"src": "2128:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "arrayPos",
									"nativeSrc": "2136:8:1",
									"nodeType": "YulTypedName",
									"src": "2136:8:1",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "2146:6:1",
									"nodeType": "YulTypedName",
									"src": "2146:6:1",
									"type": ""
								}
							],
							"src": "2063:568:1"
						},
						{
							"body": {
								"nativeSrc": "2744:478:1",
								"nodeType": "YulBlock",
								"src": "2744:478:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "2793:83:1",
											"nodeType": "YulBlock",
											"src": "2793:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
															"nativeSrc": "2795:77:1",
															"nodeType": "YulIdentifier",
															"src": "2795:77:1"
														},
														"nativeSrc": "2795:79:1",
														"nodeType": "YulFunctionCall",
														"src": "2795:79:1"
													},
													"nativeSrc": "2795:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "2795:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "offset",
																	"nativeSrc": "2772:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2772:6:1"
																},
																{
																	"kind": "number",
																	"nativeSrc": "2780:4:1",
																	"nodeType": "YulLiteral",
																	"src": "2780:4:1",
																	"type": "",
																	"value": "0x1f"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "2768:3:1",
																"nodeType": "YulIdentifier",
																"src": "2768:3:1"
															},
															"nativeSrc": "2768:17:1",
															"nodeType": "YulFunctionCall",
															"src": "2768:17:1"
														},
														{
															"name": "end",
															"nativeSrc": "2787:3:1",
															"nodeType": "YulIdentifier",
															"src": "2787:3:1"
														}
													],
													"functionName": {
														"name": "slt",
														"nativeSrc": "2764:3:1",
														"nodeType": "YulIdentifier",
														"src": "2764:3:1"
													},
													"nativeSrc": "2764:27:1",
													"nodeType": "YulFunctionCall",
													"src": "2764:27:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "2757:6:1",
												"nodeType": "YulIdentifier",
												"src": "2757:6:1"
											},
											"nativeSrc": "2757:35:1",
											"nodeType": "YulFunctionCall",
											"src": "2757:35:1"
										},
										"nativeSrc": "2754:122:1",
										"nodeType": "YulIf",
										"src": "2754:122:1"
									},
									{
										"nativeSrc": "2885:30:1",
										"nodeType": "YulAssignment",
										"src": "2885:30:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "2908:6:1",
													"nodeType": "YulIdentifier",
													"src": "2908:6:1"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "2895:12:1",
												"nodeType": "YulIdentifier",
												"src": "2895:12:1"
											},
											"nativeSrc": "2895:20:1",
											"nodeType": "YulFunctionCall",
											"src": "2895:20:1"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "2885:6:1",
												"nodeType": "YulIdentifier",
												"src": "2885:6:1"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "2958:83:1",
											"nodeType": "YulBlock",
											"src": "2958:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
															"nativeSrc": "2960:77:1",
															"nodeType": "YulIdentifier",
															"src": "2960:77:1"
														},
														"nativeSrc": "2960:79:1",
														"nodeType": "YulFunctionCall",
														"src": "2960:79:1"
													},
													"nativeSrc": "2960:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "2960:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "length",
													"nativeSrc": "2930:6:1",
													"nodeType": "YulIdentifier",
													"src": "2930:6:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2938:18:1",
													"nodeType": "YulLiteral",
													"src": "2938:18:1",
													"type": "",
													"value": "0xffffffffffffffff"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "2927:2:1",
												"nodeType": "YulIdentifier",
												"src": "2927:2:1"
											},
											"nativeSrc": "2927:30:1",
											"nodeType": "YulFunctionCall",
											"src": "2927:30:1"
										},
										"nativeSrc": "2924:117:1",
										"nodeType": "YulIf",
										"src": "2924:117:1"
									},
									{
										"nativeSrc": "3050:29:1",
										"nodeType": "YulAssignment",
										"src": "3050:29:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "3066:6:1",
													"nodeType": "YulIdentifier",
													"src": "3066:6:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3074:4:1",
													"nodeType": "YulLiteral",
													"src": "3074:4:1",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3062:3:1",
												"nodeType": "YulIdentifier",
												"src": "3062:3:1"
											},
											"nativeSrc": "3062:17:1",
											"nodeType": "YulFunctionCall",
											"src": "3062:17:1"
										},
										"variableNames": [
											{
												"name": "arrayPos",
												"nativeSrc": "3050:8:1",
												"nodeType": "YulIdentifier",
												"src": "3050:8:1"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "3133:83:1",
											"nodeType": "YulBlock",
											"src": "3133:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
															"nativeSrc": "3135:77:1",
															"nodeType": "YulIdentifier",
															"src": "3135:77:1"
														},
														"nativeSrc": "3135:79:1",
														"nodeType": "YulFunctionCall",
														"src": "3135:79:1"
													},
													"nativeSrc": "3135:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "3135:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "arrayPos",
															"nativeSrc": "3098:8:1",
															"nodeType": "YulIdentifier",
															"src": "3098:8:1"
														},
														{
															"arguments": [
																{
																	"name": "length",
																	"nativeSrc": "3112:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3112:6:1"
																},
																{
																	"kind": "number",
																	"nativeSrc": "3120:4:1",
																	"nodeType": "YulLiteral",
																	"src": "3120:4:1",
																	"type": "",
																	"value": "0x20"
																}
															],
															"functionName": {
																"name": "mul",
																"nativeSrc": "3108:3:1",
																"nodeType": "YulIdentifier",
																"src": "3108:3:1"
															},
															"nativeSrc": "3108:17:1",
															"nodeType": "YulFunctionCall",
															"src": "3108:17:1"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3094:3:1",
														"nodeType": "YulIdentifier",
														"src": "3094:3:1"
													},
													"nativeSrc": "3094:32:1",
													"nodeType": "YulFunctionCall",
													"src": "3094:32:1"
												},
												{
													"name": "end",
													"nativeSrc": "3128:3:1",
													"nodeType": "YulIdentifier",
													"src": "3128:3:1"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "3091:2:1",
												"nodeType": "YulIdentifier",
												"src": "3091:2:1"
											},
											"nativeSrc": "3091:41:1",
											"nodeType": "YulFunctionCall",
											"src": "3091:41:1"
										},
										"nativeSrc": "3088:128:1",
										"nodeType": "YulIf",
										"src": "3088:128:1"
									}
								]
							},
							"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
							"nativeSrc": "2654:568:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "2711:6:1",
									"nodeType": "YulTypedName",
									"src": "2711:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "2719:3:1",
									"nodeType": "YulTypedName",
									"src": "2719:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "arrayPos",
									"nativeSrc": "2727:8:1",
									"nodeType": "YulTypedName",
									"src": "2727:8:1",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "2737:6:1",
									"nodeType": "YulTypedName",
									"src": "2737:6:1",
									"type": ""
								}
							],
							"src": "2654:568:1"
						},
						{
							"body": {
								"nativeSrc": "3398:909:1",
								"nodeType": "YulBlock",
								"src": "3398:909:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "3444:83:1",
											"nodeType": "YulBlock",
											"src": "3444:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "3446:77:1",
															"nodeType": "YulIdentifier",
															"src": "3446:77:1"
														},
														"nativeSrc": "3446:79:1",
														"nodeType": "YulFunctionCall",
														"src": "3446:79:1"
													},
													"nativeSrc": "3446:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "3446:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "3419:7:1",
															"nodeType": "YulIdentifier",
															"src": "3419:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "3428:9:1",
															"nodeType": "YulIdentifier",
															"src": "3428:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "3415:3:1",
														"nodeType": "YulIdentifier",
														"src": "3415:3:1"
													},
													"nativeSrc": "3415:23:1",
													"nodeType": "YulFunctionCall",
													"src": "3415:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3440:2:1",
													"nodeType": "YulLiteral",
													"src": "3440:2:1",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "3411:3:1",
												"nodeType": "YulIdentifier",
												"src": "3411:3:1"
											},
											"nativeSrc": "3411:32:1",
											"nodeType": "YulFunctionCall",
											"src": "3411:32:1"
										},
										"nativeSrc": "3408:119:1",
										"nodeType": "YulIf",
										"src": "3408:119:1"
									},
									{
										"nativeSrc": "3537:117:1",
										"nodeType": "YulBlock",
										"src": "3537:117:1",
										"statements": [
											{
												"nativeSrc": "3552:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "3552:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "3566:1:1",
													"nodeType": "YulLiteral",
													"src": "3566:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "3556:6:1",
														"nodeType": "YulTypedName",
														"src": "3556:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "3581:63:1",
												"nodeType": "YulAssignment",
												"src": "3581:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "3616:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "3616:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "3627:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "3612:3:1",
																"nodeType": "YulIdentifier",
																"src": "3612:3:1"
															},
															"nativeSrc": "3612:22:1",
															"nodeType": "YulFunctionCall",
															"src": "3612:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "3636:7:1",
															"nodeType": "YulIdentifier",
															"src": "3636:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "3591:20:1",
														"nodeType": "YulIdentifier",
														"src": "3591:20:1"
													},
													"nativeSrc": "3591:53:1",
													"nodeType": "YulFunctionCall",
													"src": "3591:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "3581:6:1",
														"nodeType": "YulIdentifier",
														"src": "3581:6:1"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "3664:313:1",
										"nodeType": "YulBlock",
										"src": "3664:313:1",
										"statements": [
											{
												"nativeSrc": "3679:46:1",
												"nodeType": "YulVariableDeclaration",
												"src": "3679:46:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "3710:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "3710:9:1"
																},
																{
																	"kind": "number",
																	"nativeSrc": "3721:2:1",
																	"nodeType": "YulLiteral",
																	"src": "3721:2:1",
																	"type": "",
																	"value": "32"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "3706:3:1",
																"nodeType": "YulIdentifier",
																"src": "3706:3:1"
															},
															"nativeSrc": "3706:18:1",
															"nodeType": "YulFunctionCall",
															"src": "3706:18:1"
														}
													],
													"functionName": {
														"name": "calldataload",
														"nativeSrc": "3693:12:1",
														"nodeType": "YulIdentifier",
														"src": "3693:12:1"
													},
													"nativeSrc": "3693:32:1",
													"nodeType": "YulFunctionCall",
													"src": "3693:32:1"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "3683:6:1",
														"nodeType": "YulTypedName",
														"src": "3683:6:1",
														"type": ""
													}
												]
											},
											{
												"body": {
													"nativeSrc": "3772:83:1",
													"nodeType": "YulBlock",
													"src": "3772:83:1",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"functionName": {
																	"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																	"nativeSrc": "3774:77:1",
																	"nodeType": "YulIdentifier",
																	"src": "3774:77:1"
																},
																"nativeSrc": "3774:79:1",
																"nodeType": "YulFunctionCall",
																"src": "3774:79:1"
															},
															"nativeSrc": "3774:79:1",
															"nodeType": "YulExpressionStatement",
															"src": "3774:79:1"
														}
													]
												},
												"condition": {
													"arguments": [
														{
															"name": "offset",
															"nativeSrc": "3744:6:1",
															"nodeType": "YulIdentifier",
															"src": "3744:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "3752:18:1",
															"nodeType": "YulLiteral",
															"src": "3752:18:1",
															"type": "",
															"value": "0xffffffffffffffff"
														}
													],
													"functionName": {
														"name": "gt",
														"nativeSrc": "3741:2:1",
														"nodeType": "YulIdentifier",
														"src": "3741:2:1"
													},
													"nativeSrc": "3741:30:1",
													"nodeType": "YulFunctionCall",
													"src": "3741:30:1"
												},
												"nativeSrc": "3738:117:1",
												"nodeType": "YulIf",
												"src": "3738:117:1"
											},
											{
												"nativeSrc": "3869:98:1",
												"nodeType": "YulAssignment",
												"src": "3869:98:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "3939:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "3939:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "3950:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3950:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "3935:3:1",
																"nodeType": "YulIdentifier",
																"src": "3935:3:1"
															},
															"nativeSrc": "3935:22:1",
															"nodeType": "YulFunctionCall",
															"src": "3935:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "3959:7:1",
															"nodeType": "YulIdentifier",
															"src": "3959:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
														"nativeSrc": "3887:47:1",
														"nodeType": "YulIdentifier",
														"src": "3887:47:1"
													},
													"nativeSrc": "3887:80:1",
													"nodeType": "YulFunctionCall",
													"src": "3887:80:1"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "3869:6:1",
														"nodeType": "YulIdentifier",
														"src": "3869:6:1"
													},
													{
														"name": "value2",
														"nativeSrc": "3877:6:1",
														"nodeType": "YulIdentifier",
														"src": "3877:6:1"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "3987:313:1",
										"nodeType": "YulBlock",
										"src": "3987:313:1",
										"statements": [
											{
												"nativeSrc": "4002:46:1",
												"nodeType": "YulVariableDeclaration",
												"src": "4002:46:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "4033:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4033:9:1"
																},
																{
																	"kind": "number",
																	"nativeSrc": "4044:2:1",
																	"nodeType": "YulLiteral",
																	"src": "4044:2:1",
																	"type": "",
																	"value": "64"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "4029:3:1",
																"nodeType": "YulIdentifier",
																"src": "4029:3:1"
															},
															"nativeSrc": "4029:18:1",
															"nodeType": "YulFunctionCall",
															"src": "4029:18:1"
														}
													],
													"functionName": {
														"name": "calldataload",
														"nativeSrc": "4016:12:1",
														"nodeType": "YulIdentifier",
														"src": "4016:12:1"
													},
													"nativeSrc": "4016:32:1",
													"nodeType": "YulFunctionCall",
													"src": "4016:32:1"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "4006:6:1",
														"nodeType": "YulTypedName",
														"src": "4006:6:1",
														"type": ""
													}
												]
											},
											{
												"body": {
													"nativeSrc": "4095:83:1",
													"nodeType": "YulBlock",
													"src": "4095:83:1",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"functionName": {
																	"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																	"nativeSrc": "4097:77:1",
																	"nodeType": "YulIdentifier",
																	"src": "4097:77:1"
																},
																"nativeSrc": "4097:79:1",
																"nodeType": "YulFunctionCall",
																"src": "4097:79:1"
															},
															"nativeSrc": "4097:79:1",
															"nodeType": "YulExpressionStatement",
															"src": "4097:79:1"
														}
													]
												},
												"condition": {
													"arguments": [
														{
															"name": "offset",
															"nativeSrc": "4067:6:1",
															"nodeType": "YulIdentifier",
															"src": "4067:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "4075:18:1",
															"nodeType": "YulLiteral",
															"src": "4075:18:1",
															"type": "",
															"value": "0xffffffffffffffff"
														}
													],
													"functionName": {
														"name": "gt",
														"nativeSrc": "4064:2:1",
														"nodeType": "YulIdentifier",
														"src": "4064:2:1"
													},
													"nativeSrc": "4064:30:1",
													"nodeType": "YulFunctionCall",
													"src": "4064:30:1"
												},
												"nativeSrc": "4061:117:1",
												"nodeType": "YulIf",
												"src": "4061:117:1"
											},
											{
												"nativeSrc": "4192:98:1",
												"nodeType": "YulAssignment",
												"src": "4192:98:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "4262:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4262:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "4273:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4273:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "4258:3:1",
																"nodeType": "YulIdentifier",
																"src": "4258:3:1"
															},
															"nativeSrc": "4258:22:1",
															"nodeType": "YulFunctionCall",
															"src": "4258:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "4282:7:1",
															"nodeType": "YulIdentifier",
															"src": "4282:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
														"nativeSrc": "4210:47:1",
														"nodeType": "YulIdentifier",
														"src": "4210:47:1"
													},
													"nativeSrc": "4210:80:1",
													"nodeType": "YulFunctionCall",
													"src": "4210:80:1"
												},
												"variableNames": [
													{
														"name": "value3",
														"nativeSrc": "4192:6:1",
														"nodeType": "YulIdentifier",
														"src": "4192:6:1"
													},
													{
														"name": "value4",
														"nativeSrc": "4200:6:1",
														"nodeType": "YulIdentifier",
														"src": "4200:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
							"nativeSrc": "3228:1079:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3336:9:1",
									"nodeType": "YulTypedName",
									"src": "3336:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "3347:7:1",
									"nodeType": "YulTypedName",
									"src": "3347:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "3359:6:1",
									"nodeType": "YulTypedName",
									"src": "3359:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "3367:6:1",
									"nodeType": "YulTypedName",
									"src": "3367:6:1",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "3375:6:1",
									"nodeType": "YulTypedName",
									"src": "3375:6:1",
									"type": ""
								},
								{
									"name": "value3",
									"nativeSrc": "3383:6:1",
									"nodeType": "YulTypedName",
									"src": "3383:6:1",
									"type": ""
								},
								{
									"name": "value4",
									"nativeSrc": "3391:6:1",
									"nodeType": "YulTypedName",
									"src": "3391:6:1",
									"type": ""
								}
							],
							"src": "3228:1079:1"
						},
						{
							"body": {
								"nativeSrc": "4355:48:1",
								"nodeType": "YulBlock",
								"src": "4355:48:1",
								"statements": [
									{
										"nativeSrc": "4365:32:1",
										"nodeType": "YulAssignment",
										"src": "4365:32:1",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "4390:5:1",
															"nodeType": "YulIdentifier",
															"src": "4390:5:1"
														}
													],
													"functionName": {
														"name": "iszero",
														"nativeSrc": "4383:6:1",
														"nodeType": "YulIdentifier",
														"src": "4383:6:1"
													},
													"nativeSrc": "4383:13:1",
													"nodeType": "YulFunctionCall",
													"src": "4383:13:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "4376:6:1",
												"nodeType": "YulIdentifier",
												"src": "4376:6:1"
											},
											"nativeSrc": "4376:21:1",
											"nodeType": "YulFunctionCall",
											"src": "4376:21:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "4365:7:1",
												"nodeType": "YulIdentifier",
												"src": "4365:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_bool",
							"nativeSrc": "4313:90:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "4337:5:1",
									"nodeType": "YulTypedName",
									"src": "4337:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "4347:7:1",
									"nodeType": "YulTypedName",
									"src": "4347:7:1",
									"type": ""
								}
							],
							"src": "4313:90:1"
						},
						{
							"body": {
								"nativeSrc": "4468:50:1",
								"nodeType": "YulBlock",
								"src": "4468:50:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "4485:3:1",
													"nodeType": "YulIdentifier",
													"src": "4485:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "4505:5:1",
															"nodeType": "YulIdentifier",
															"src": "4505:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_bool",
														"nativeSrc": "4490:14:1",
														"nodeType": "YulIdentifier",
														"src": "4490:14:1"
													},
													"nativeSrc": "4490:21:1",
													"nodeType": "YulFunctionCall",
													"src": "4490:21:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "4478:6:1",
												"nodeType": "YulIdentifier",
												"src": "4478:6:1"
											},
											"nativeSrc": "4478:34:1",
											"nodeType": "YulFunctionCall",
											"src": "4478:34:1"
										},
										"nativeSrc": "4478:34:1",
										"nodeType": "YulExpressionStatement",
										"src": "4478:34:1"
									}
								]
							},
							"name": "abi_encode_t_bool_to_t_bool_fromStack",
							"nativeSrc": "4409:109:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "4456:5:1",
									"nodeType": "YulTypedName",
									"src": "4456:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "4463:3:1",
									"nodeType": "YulTypedName",
									"src": "4463:3:1",
									"type": ""
								}
							],
							"src": "4409:109:1"
						},
						{
							"body": {
								"nativeSrc": "4616:118:1",
								"nodeType": "YulBlock",
								"src": "4616:118:1",
								"statements": [
									{
										"nativeSrc": "4626:26:1",
										"nodeType": "YulAssignment",
										"src": "4626:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "4638:9:1",
													"nodeType": "YulIdentifier",
													"src": "4638:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "4649:2:1",
													"nodeType": "YulLiteral",
													"src": "4649:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "4634:3:1",
												"nodeType": "YulIdentifier",
												"src": "4634:3:1"
											},
											"nativeSrc": "4634:18:1",
											"nodeType": "YulFunctionCall",
											"src": "4634:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "4626:4:1",
												"nodeType": "YulIdentifier",
												"src": "4626:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "4700:6:1",
													"nodeType": "YulIdentifier",
													"src": "4700:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "4713:9:1",
															"nodeType": "YulIdentifier",
															"src": "4713:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "4724:1:1",
															"nodeType": "YulLiteral",
															"src": "4724:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "4709:3:1",
														"nodeType": "YulIdentifier",
														"src": "4709:3:1"
													},
													"nativeSrc": "4709:17:1",
													"nodeType": "YulFunctionCall",
													"src": "4709:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "4662:37:1",
												"nodeType": "YulIdentifier",
												"src": "4662:37:1"
											},
											"nativeSrc": "4662:65:1",
											"nodeType": "YulFunctionCall",
											"src": "4662:65:1"
										},
										"nativeSrc": "4662:65:1",
										"nodeType": "YulExpressionStatement",
										"src": "4662:65:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
							"nativeSrc": "4524:210:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "4588:9:1",
									"nodeType": "YulTypedName",
									"src": "4588:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "4600:6:1",
									"nodeType": "YulTypedName",
									"src": "4600:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "4611:4:1",
									"nodeType": "YulTypedName",
									"src": "4611:4:1",
									"type": ""
								}
							],
							"src": "4524:210:1"
						},
						{
							"body": {
								"nativeSrc": "4893:781:1",
								"nodeType": "YulBlock",
								"src": "4893:781:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "4939:83:1",
											"nodeType": "YulBlock",
											"src": "4939:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "4941:77:1",
															"nodeType": "YulIdentifier",
															"src": "4941:77:1"
														},
														"nativeSrc": "4941:79:1",
														"nodeType": "YulFunctionCall",
														"src": "4941:79:1"
													},
													"nativeSrc": "4941:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "4941:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "4914:7:1",
															"nodeType": "YulIdentifier",
															"src": "4914:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "4923:9:1",
															"nodeType": "YulIdentifier",
															"src": "4923:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "4910:3:1",
														"nodeType": "YulIdentifier",
														"src": "4910:3:1"
													},
													"nativeSrc": "4910:23:1",
													"nodeType": "YulFunctionCall",
													"src": "4910:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "4935:2:1",
													"nodeType": "YulLiteral",
													"src": "4935:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "4906:3:1",
												"nodeType": "YulIdentifier",
												"src": "4906:3:1"
											},
											"nativeSrc": "4906:32:1",
											"nodeType": "YulFunctionCall",
											"src": "4906:32:1"
										},
										"nativeSrc": "4903:119:1",
										"nodeType": "YulIf",
										"src": "4903:119:1"
									},
									{
										"nativeSrc": "5032:312:1",
										"nodeType": "YulBlock",
										"src": "5032:312:1",
										"statements": [
											{
												"nativeSrc": "5047:45:1",
												"nodeType": "YulVariableDeclaration",
												"src": "5047:45:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "5078:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5078:9:1"
																},
																{
																	"kind": "number",
																	"nativeSrc": "5089:1:1",
																	"nodeType": "YulLiteral",
																	"src": "5089:1:1",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "5074:3:1",
																"nodeType": "YulIdentifier",
																"src": "5074:3:1"
															},
															"nativeSrc": "5074:17:1",
															"nodeType": "YulFunctionCall",
															"src": "5074:17:1"
														}
													],
													"functionName": {
														"name": "calldataload",
														"nativeSrc": "5061:12:1",
														"nodeType": "YulIdentifier",
														"src": "5061:12:1"
													},
													"nativeSrc": "5061:31:1",
													"nodeType": "YulFunctionCall",
													"src": "5061:31:1"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "5051:6:1",
														"nodeType": "YulTypedName",
														"src": "5051:6:1",
														"type": ""
													}
												]
											},
											{
												"body": {
													"nativeSrc": "5139:83:1",
													"nodeType": "YulBlock",
													"src": "5139:83:1",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"functionName": {
																	"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																	"nativeSrc": "5141:77:1",
																	"nodeType": "YulIdentifier",
																	"src": "5141:77:1"
																},
																"nativeSrc": "5141:79:1",
																"nodeType": "YulFunctionCall",
																"src": "5141:79:1"
															},
															"nativeSrc": "5141:79:1",
															"nodeType": "YulExpressionStatement",
															"src": "5141:79:1"
														}
													]
												},
												"condition": {
													"arguments": [
														{
															"name": "offset",
															"nativeSrc": "5111:6:1",
															"nodeType": "YulIdentifier",
															"src": "5111:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "5119:18:1",
															"nodeType": "YulLiteral",
															"src": "5119:18:1",
															"type": "",
															"value": "0xffffffffffffffff"
														}
													],
													"functionName": {
														"name": "gt",
														"nativeSrc": "5108:2:1",
														"nodeType": "YulIdentifier",
														"src": "5108:2:1"
													},
													"nativeSrc": "5108:30:1",
													"nodeType": "YulFunctionCall",
													"src": "5108:30:1"
												},
												"nativeSrc": "5105:117:1",
												"nodeType": "YulIf",
												"src": "5105:117:1"
											},
											{
												"nativeSrc": "5236:98:1",
												"nodeType": "YulAssignment",
												"src": "5236:98:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "5306:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5306:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "5317:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5317:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "5302:3:1",
																"nodeType": "YulIdentifier",
																"src": "5302:3:1"
															},
															"nativeSrc": "5302:22:1",
															"nodeType": "YulFunctionCall",
															"src": "5302:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "5326:7:1",
															"nodeType": "YulIdentifier",
															"src": "5326:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
														"nativeSrc": "5254:47:1",
														"nodeType": "YulIdentifier",
														"src": "5254:47:1"
													},
													"nativeSrc": "5254:80:1",
													"nodeType": "YulFunctionCall",
													"src": "5254:80:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "5236:6:1",
														"nodeType": "YulIdentifier",
														"src": "5236:6:1"
													},
													{
														"name": "value1",
														"nativeSrc": "5244:6:1",
														"nodeType": "YulIdentifier",
														"src": "5244:6:1"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "5354:313:1",
										"nodeType": "YulBlock",
										"src": "5354:313:1",
										"statements": [
											{
												"nativeSrc": "5369:46:1",
												"nodeType": "YulVariableDeclaration",
												"src": "5369:46:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "5400:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5400:9:1"
																},
																{
																	"kind": "number",
																	"nativeSrc": "5411:2:1",
																	"nodeType": "YulLiteral",
																	"src": "5411:2:1",
																	"type": "",
																	"value": "32"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "5396:3:1",
																"nodeType": "YulIdentifier",
																"src": "5396:3:1"
															},
															"nativeSrc": "5396:18:1",
															"nodeType": "YulFunctionCall",
															"src": "5396:18:1"
														}
													],
													"functionName": {
														"name": "calldataload",
														"nativeSrc": "5383:12:1",
														"nodeType": "YulIdentifier",
														"src": "5383:12:1"
													},
													"nativeSrc": "5383:32:1",
													"nodeType": "YulFunctionCall",
													"src": "5383:32:1"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "5373:6:1",
														"nodeType": "YulTypedName",
														"src": "5373:6:1",
														"type": ""
													}
												]
											},
											{
												"body": {
													"nativeSrc": "5462:83:1",
													"nodeType": "YulBlock",
													"src": "5462:83:1",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"functionName": {
																	"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																	"nativeSrc": "5464:77:1",
																	"nodeType": "YulIdentifier",
																	"src": "5464:77:1"
																},
																"nativeSrc": "5464:79:1",
																"nodeType": "YulFunctionCall",
																"src": "5464:79:1"
															},
															"nativeSrc": "5464:79:1",
															"nodeType": "YulExpressionStatement",
															"src": "5464:79:1"
														}
													]
												},
												"condition": {
													"arguments": [
														{
															"name": "offset",
															"nativeSrc": "5434:6:1",
															"nodeType": "YulIdentifier",
															"src": "5434:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "5442:18:1",
															"nodeType": "YulLiteral",
															"src": "5442:18:1",
															"type": "",
															"value": "0xffffffffffffffff"
														}
													],
													"functionName": {
														"name": "gt",
														"nativeSrc": "5431:2:1",
														"nodeType": "YulIdentifier",
														"src": "5431:2:1"
													},
													"nativeSrc": "5431:30:1",
													"nodeType": "YulFunctionCall",
													"src": "5431:30:1"
												},
												"nativeSrc": "5428:117:1",
												"nodeType": "YulIf",
												"src": "5428:117:1"
											},
											{
												"nativeSrc": "5559:98:1",
												"nodeType": "YulAssignment",
												"src": "5559:98:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "5629:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5629:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "5640:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5640:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "5625:3:1",
																"nodeType": "YulIdentifier",
																"src": "5625:3:1"
															},
															"nativeSrc": "5625:22:1",
															"nodeType": "YulFunctionCall",
															"src": "5625:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "5649:7:1",
															"nodeType": "YulIdentifier",
															"src": "5649:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
														"nativeSrc": "5577:47:1",
														"nodeType": "YulIdentifier",
														"src": "5577:47:1"
													},
													"nativeSrc": "5577:80:1",
													"nodeType": "YulFunctionCall",
													"src": "5577:80:1"
												},
												"variableNames": [
													{
														"name": "value2",
														"nativeSrc": "5559:6:1",
														"nodeType": "YulIdentifier",
														"src": "5559:6:1"
													},
													{
														"name": "value3",
														"nativeSrc": "5567:6:1",
														"nodeType": "YulIdentifier",
														"src": "5567:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
							"nativeSrc": "4740:934:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "4839:9:1",
									"nodeType": "YulTypedName",
									"src": "4839:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "4850:7:1",
									"nodeType": "YulTypedName",
									"src": "4850:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "4862:6:1",
									"nodeType": "YulTypedName",
									"src": "4862:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "4870:6:1",
									"nodeType": "YulTypedName",
									"src": "4870:6:1",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "4878:6:1",
									"nodeType": "YulTypedName",
									"src": "4878:6:1",
									"type": ""
								},
								{
									"name": "value3",
									"nativeSrc": "4886:6:1",
									"nodeType": "YulTypedName",
									"src": "4886:6:1",
									"type": ""
								}
							],
							"src": "4740:934:1"
						},
						{
							"body": {
								"nativeSrc": "5745:53:1",
								"nodeType": "YulBlock",
								"src": "5745:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "5762:3:1",
													"nodeType": "YulIdentifier",
													"src": "5762:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "5785:5:1",
															"nodeType": "YulIdentifier",
															"src": "5785:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_address",
														"nativeSrc": "5767:17:1",
														"nodeType": "YulIdentifier",
														"src": "5767:17:1"
													},
													"nativeSrc": "5767:24:1",
													"nodeType": "YulFunctionCall",
													"src": "5767:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5755:6:1",
												"nodeType": "YulIdentifier",
												"src": "5755:6:1"
											},
											"nativeSrc": "5755:37:1",
											"nodeType": "YulFunctionCall",
											"src": "5755:37:1"
										},
										"nativeSrc": "5755:37:1",
										"nodeType": "YulExpressionStatement",
										"src": "5755:37:1"
									}
								]
							},
							"name": "abi_encode_t_address_to_t_address_fromStack",
							"nativeSrc": "5680:118:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "5733:5:1",
									"nodeType": "YulTypedName",
									"src": "5733:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "5740:3:1",
									"nodeType": "YulTypedName",
									"src": "5740:3:1",
									"type": ""
								}
							],
							"src": "5680:118:1"
						},
						{
							"body": {
								"nativeSrc": "5902:124:1",
								"nodeType": "YulBlock",
								"src": "5902:124:1",
								"statements": [
									{
										"nativeSrc": "5912:26:1",
										"nodeType": "YulAssignment",
										"src": "5912:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "5924:9:1",
													"nodeType": "YulIdentifier",
													"src": "5924:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "5935:2:1",
													"nodeType": "YulLiteral",
													"src": "5935:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "5920:3:1",
												"nodeType": "YulIdentifier",
												"src": "5920:3:1"
											},
											"nativeSrc": "5920:18:1",
											"nodeType": "YulFunctionCall",
											"src": "5920:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "5912:4:1",
												"nodeType": "YulIdentifier",
												"src": "5912:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "5992:6:1",
													"nodeType": "YulIdentifier",
													"src": "5992:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "6005:9:1",
															"nodeType": "YulIdentifier",
															"src": "6005:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "6016:1:1",
															"nodeType": "YulLiteral",
															"src": "6016:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "6001:3:1",
														"nodeType": "YulIdentifier",
														"src": "6001:3:1"
													},
													"nativeSrc": "6001:17:1",
													"nodeType": "YulFunctionCall",
													"src": "6001:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5948:43:1",
												"nodeType": "YulIdentifier",
												"src": "5948:43:1"
											},
											"nativeSrc": "5948:71:1",
											"nodeType": "YulFunctionCall",
											"src": "5948:71:1"
										},
										"nativeSrc": "5948:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "5948:71:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
							"nativeSrc": "5804:222:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "5874:9:1",
									"nodeType": "YulTypedName",
									"src": "5874:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "5886:6:1",
									"nodeType": "YulTypedName",
									"src": "5886:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "5897:4:1",
									"nodeType": "YulTypedName",
									"src": "5897:4:1",
									"type": ""
								}
							],
							"src": "5804:222:1"
						},
						{
							"body": {
								"nativeSrc": "6098:263:1",
								"nodeType": "YulBlock",
								"src": "6098:263:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "6144:83:1",
											"nodeType": "YulBlock",
											"src": "6144:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "6146:77:1",
															"nodeType": "YulIdentifier",
															"src": "6146:77:1"
														},
														"nativeSrc": "6146:79:1",
														"nodeType": "YulFunctionCall",
														"src": "6146:79:1"
													},
													"nativeSrc": "6146:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "6146:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "6119:7:1",
															"nodeType": "YulIdentifier",
															"src": "6119:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "6128:9:1",
															"nodeType": "YulIdentifier",
															"src": "6128:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "6115:3:1",
														"nodeType": "YulIdentifier",
														"src": "6115:3:1"
													},
													"nativeSrc": "6115:23:1",
													"nodeType": "YulFunctionCall",
													"src": "6115:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "6140:2:1",
													"nodeType": "YulLiteral",
													"src": "6140:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "6111:3:1",
												"nodeType": "YulIdentifier",
												"src": "6111:3:1"
											},
											"nativeSrc": "6111:32:1",
											"nodeType": "YulFunctionCall",
											"src": "6111:32:1"
										},
										"nativeSrc": "6108:119:1",
										"nodeType": "YulIf",
										"src": "6108:119:1"
									},
									{
										"nativeSrc": "6237:117:1",
										"nodeType": "YulBlock",
										"src": "6237:117:1",
										"statements": [
											{
												"nativeSrc": "6252:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "6252:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "6266:1:1",
													"nodeType": "YulLiteral",
													"src": "6266:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "6256:6:1",
														"nodeType": "YulTypedName",
														"src": "6256:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "6281:63:1",
												"nodeType": "YulAssignment",
												"src": "6281:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "6316:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "6316:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "6327:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6327:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "6312:3:1",
																"nodeType": "YulIdentifier",
																"src": "6312:3:1"
															},
															"nativeSrc": "6312:22:1",
															"nodeType": "YulFunctionCall",
															"src": "6312:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "6336:7:1",
															"nodeType": "YulIdentifier",
															"src": "6336:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "6291:20:1",
														"nodeType": "YulIdentifier",
														"src": "6291:20:1"
													},
													"nativeSrc": "6291:53:1",
													"nodeType": "YulFunctionCall",
													"src": "6291:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "6281:6:1",
														"nodeType": "YulIdentifier",
														"src": "6281:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_address",
							"nativeSrc": "6032:329:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "6068:9:1",
									"nodeType": "YulTypedName",
									"src": "6068:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "6079:7:1",
									"nodeType": "YulTypedName",
									"src": "6079:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "6091:6:1",
									"nodeType": "YulTypedName",
									"src": "6091:6:1",
									"type": ""
								}
							],
							"src": "6032:329:1"
						},
						{
							"body": {
								"nativeSrc": "6463:73:1",
								"nodeType": "YulBlock",
								"src": "6463:73:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "6480:3:1",
													"nodeType": "YulIdentifier",
													"src": "6480:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "6485:6:1",
													"nodeType": "YulIdentifier",
													"src": "6485:6:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "6473:6:1",
												"nodeType": "YulIdentifier",
												"src": "6473:6:1"
											},
											"nativeSrc": "6473:19:1",
											"nodeType": "YulFunctionCall",
											"src": "6473:19:1"
										},
										"nativeSrc": "6473:19:1",
										"nodeType": "YulExpressionStatement",
										"src": "6473:19:1"
									},
									{
										"nativeSrc": "6501:29:1",
										"nodeType": "YulAssignment",
										"src": "6501:29:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "6520:3:1",
													"nodeType": "YulIdentifier",
													"src": "6520:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "6525:4:1",
													"nodeType": "YulLiteral",
													"src": "6525:4:1",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "6516:3:1",
												"nodeType": "YulIdentifier",
												"src": "6516:3:1"
											},
											"nativeSrc": "6516:14:1",
											"nodeType": "YulFunctionCall",
											"src": "6516:14:1"
										},
										"variableNames": [
											{
												"name": "updated_pos",
												"nativeSrc": "6501:11:1",
												"nodeType": "YulIdentifier",
												"src": "6501:11:1"
											}
										]
									}
								]
							},
							"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
							"nativeSrc": "6367:169:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "6435:3:1",
									"nodeType": "YulTypedName",
									"src": "6435:3:1",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "6440:6:1",
									"nodeType": "YulTypedName",
									"src": "6440:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "updated_pos",
									"nativeSrc": "6451:11:1",
									"nodeType": "YulTypedName",
									"src": "6451:11:1",
									"type": ""
								}
							],
							"src": "6367:169:1"
						},
						{
							"body": {
								"nativeSrc": "6648:124:1",
								"nodeType": "YulBlock",
								"src": "6648:124:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "6670:6:1",
															"nodeType": "YulIdentifier",
															"src": "6670:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "6678:1:1",
															"nodeType": "YulLiteral",
															"src": "6678:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "6666:3:1",
														"nodeType": "YulIdentifier",
														"src": "6666:3:1"
													},
													"nativeSrc": "6666:14:1",
													"nodeType": "YulFunctionCall",
													"src": "6666:14:1"
												},
												{
													"hexValue": "48616e7961206f776e65722079616e67206461706174206d656e67616b736573",
													"kind": "string",
													"nativeSrc": "6682:34:1",
													"nodeType": "YulLiteral",
													"src": "6682:34:1",
													"type": "",
													"value": "Hanya owner yang dapat mengakses"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "6659:6:1",
												"nodeType": "YulIdentifier",
												"src": "6659:6:1"
											},
											"nativeSrc": "6659:58:1",
											"nodeType": "YulFunctionCall",
											"src": "6659:58:1"
										},
										"nativeSrc": "6659:58:1",
										"nodeType": "YulExpressionStatement",
										"src": "6659:58:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "6738:6:1",
															"nodeType": "YulIdentifier",
															"src": "6738:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "6746:2:1",
															"nodeType": "YulLiteral",
															"src": "6746:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "6734:3:1",
														"nodeType": "YulIdentifier",
														"src": "6734:3:1"
													},
													"nativeSrc": "6734:15:1",
													"nodeType": "YulFunctionCall",
													"src": "6734:15:1"
												},
												{
													"hexValue": "2066756e67736920696e69",
													"kind": "string",
													"nativeSrc": "6751:13:1",
													"nodeType": "YulLiteral",
													"src": "6751:13:1",
													"type": "",
													"value": " fungsi ini"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "6727:6:1",
												"nodeType": "YulIdentifier",
												"src": "6727:6:1"
											},
											"nativeSrc": "6727:38:1",
											"nodeType": "YulFunctionCall",
											"src": "6727:38:1"
										},
										"nativeSrc": "6727:38:1",
										"nodeType": "YulExpressionStatement",
										"src": "6727:38:1"
									}
								]
							},
							"name": "store_literal_in_memory_eabe5c0aa1a8e5cbf9a86c0c91c48538e31c92d93f25d5c83c5c0a4bca360cd6",
							"nativeSrc": "6542:230:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "6640:6:1",
									"nodeType": "YulTypedName",
									"src": "6640:6:1",
									"type": ""
								}
							],
							"src": "6542:230:1"
						},
						{
							"body": {
								"nativeSrc": "6924:220:1",
								"nodeType": "YulBlock",
								"src": "6924:220:1",
								"statements": [
									{
										"nativeSrc": "6934:74:1",
										"nodeType": "YulAssignment",
										"src": "6934:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "7000:3:1",
													"nodeType": "YulIdentifier",
													"src": "7000:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "7005:2:1",
													"nodeType": "YulLiteral",
													"src": "7005:2:1",
													"type": "",
													"value": "43"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6941:58:1",
												"nodeType": "YulIdentifier",
												"src": "6941:58:1"
											},
											"nativeSrc": "6941:67:1",
											"nodeType": "YulFunctionCall",
											"src": "6941:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "6934:3:1",
												"nodeType": "YulIdentifier",
												"src": "6934:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "7106:3:1",
													"nodeType": "YulIdentifier",
													"src": "7106:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_eabe5c0aa1a8e5cbf9a86c0c91c48538e31c92d93f25d5c83c5c0a4bca360cd6",
												"nativeSrc": "7017:88:1",
												"nodeType": "YulIdentifier",
												"src": "7017:88:1"
											},
											"nativeSrc": "7017:93:1",
											"nodeType": "YulFunctionCall",
											"src": "7017:93:1"
										},
										"nativeSrc": "7017:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "7017:93:1"
									},
									{
										"nativeSrc": "7119:19:1",
										"nodeType": "YulAssignment",
										"src": "7119:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "7130:3:1",
													"nodeType": "YulIdentifier",
													"src": "7130:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "7135:2:1",
													"nodeType": "YulLiteral",
													"src": "7135:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "7126:3:1",
												"nodeType": "YulIdentifier",
												"src": "7126:3:1"
											},
											"nativeSrc": "7126:12:1",
											"nodeType": "YulFunctionCall",
											"src": "7126:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "7119:3:1",
												"nodeType": "YulIdentifier",
												"src": "7119:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_eabe5c0aa1a8e5cbf9a86c0c91c48538e31c92d93f25d5c83c5c0a4bca360cd6_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "6778:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "6912:3:1",
									"nodeType": "YulTypedName",
									"src": "6912:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "6920:3:1",
									"nodeType": "YulTypedName",
									"src": "6920:3:1",
									"type": ""
								}
							],
							"src": "6778:366:1"
						},
						{
							"body": {
								"nativeSrc": "7321:248:1",
								"nodeType": "YulBlock",
								"src": "7321:248:1",
								"statements": [
									{
										"nativeSrc": "7331:26:1",
										"nodeType": "YulAssignment",
										"src": "7331:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "7343:9:1",
													"nodeType": "YulIdentifier",
													"src": "7343:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "7354:2:1",
													"nodeType": "YulLiteral",
													"src": "7354:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "7339:3:1",
												"nodeType": "YulIdentifier",
												"src": "7339:3:1"
											},
											"nativeSrc": "7339:18:1",
											"nodeType": "YulFunctionCall",
											"src": "7339:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "7331:4:1",
												"nodeType": "YulIdentifier",
												"src": "7331:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "7378:9:1",
															"nodeType": "YulIdentifier",
															"src": "7378:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "7389:1:1",
															"nodeType": "YulLiteral",
															"src": "7389:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "7374:3:1",
														"nodeType": "YulIdentifier",
														"src": "7374:3:1"
													},
													"nativeSrc": "7374:17:1",
													"nodeType": "YulFunctionCall",
													"src": "7374:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "7397:4:1",
															"nodeType": "YulIdentifier",
															"src": "7397:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "7403:9:1",
															"nodeType": "YulIdentifier",
															"src": "7403:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "7393:3:1",
														"nodeType": "YulIdentifier",
														"src": "7393:3:1"
													},
													"nativeSrc": "7393:20:1",
													"nodeType": "YulFunctionCall",
													"src": "7393:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "7367:6:1",
												"nodeType": "YulIdentifier",
												"src": "7367:6:1"
											},
											"nativeSrc": "7367:47:1",
											"nodeType": "YulFunctionCall",
											"src": "7367:47:1"
										},
										"nativeSrc": "7367:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "7367:47:1"
									},
									{
										"nativeSrc": "7423:139:1",
										"nodeType": "YulAssignment",
										"src": "7423:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "7557:4:1",
													"nodeType": "YulIdentifier",
													"src": "7557:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_eabe5c0aa1a8e5cbf9a86c0c91c48538e31c92d93f25d5c83c5c0a4bca360cd6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7431:124:1",
												"nodeType": "YulIdentifier",
												"src": "7431:124:1"
											},
											"nativeSrc": "7431:131:1",
											"nodeType": "YulFunctionCall",
											"src": "7431:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "7423:4:1",
												"nodeType": "YulIdentifier",
												"src": "7423:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_eabe5c0aa1a8e5cbf9a86c0c91c48538e31c92d93f25d5c83c5c0a4bca360cd6__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "7150:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "7301:9:1",
									"nodeType": "YulTypedName",
									"src": "7301:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "7316:4:1",
									"nodeType": "YulTypedName",
									"src": "7316:4:1",
									"type": ""
								}
							],
							"src": "7150:419:1"
						},
						{
							"body": {
								"nativeSrc": "7688:34:1",
								"nodeType": "YulBlock",
								"src": "7688:34:1",
								"statements": [
									{
										"nativeSrc": "7698:18:1",
										"nodeType": "YulAssignment",
										"src": "7698:18:1",
										"value": {
											"name": "pos",
											"nativeSrc": "7713:3:1",
											"nodeType": "YulIdentifier",
											"src": "7713:3:1"
										},
										"variableNames": [
											{
												"name": "updated_pos",
												"nativeSrc": "7698:11:1",
												"nodeType": "YulIdentifier",
												"src": "7698:11:1"
											}
										]
									}
								]
							},
							"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
							"nativeSrc": "7575:147:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "7660:3:1",
									"nodeType": "YulTypedName",
									"src": "7660:3:1",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "7665:6:1",
									"nodeType": "YulTypedName",
									"src": "7665:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "updated_pos",
									"nativeSrc": "7676:11:1",
									"nodeType": "YulTypedName",
									"src": "7676:11:1",
									"type": ""
								}
							],
							"src": "7575:147:1"
						},
						{
							"body": {
								"nativeSrc": "7834:8:1",
								"nodeType": "YulBlock",
								"src": "7834:8:1",
								"statements": []
							},
							"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
							"nativeSrc": "7728:114:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "7826:6:1",
									"nodeType": "YulTypedName",
									"src": "7826:6:1",
									"type": ""
								}
							],
							"src": "7728:114:1"
						},
						{
							"body": {
								"nativeSrc": "8011:235:1",
								"nodeType": "YulBlock",
								"src": "8011:235:1",
								"statements": [
									{
										"nativeSrc": "8021:90:1",
										"nodeType": "YulAssignment",
										"src": "8021:90:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "8104:3:1",
													"nodeType": "YulIdentifier",
													"src": "8104:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "8109:1:1",
													"nodeType": "YulLiteral",
													"src": "8109:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "8028:75:1",
												"nodeType": "YulIdentifier",
												"src": "8028:75:1"
											},
											"nativeSrc": "8028:83:1",
											"nodeType": "YulFunctionCall",
											"src": "8028:83:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "8021:3:1",
												"nodeType": "YulIdentifier",
												"src": "8021:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "8209:3:1",
													"nodeType": "YulIdentifier",
													"src": "8209:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "8120:88:1",
												"nodeType": "YulIdentifier",
												"src": "8120:88:1"
											},
											"nativeSrc": "8120:93:1",
											"nodeType": "YulFunctionCall",
											"src": "8120:93:1"
										},
										"nativeSrc": "8120:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "8120:93:1"
									},
									{
										"nativeSrc": "8222:18:1",
										"nodeType": "YulAssignment",
										"src": "8222:18:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "8233:3:1",
													"nodeType": "YulIdentifier",
													"src": "8233:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "8238:1:1",
													"nodeType": "YulLiteral",
													"src": "8238:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "8229:3:1",
												"nodeType": "YulIdentifier",
												"src": "8229:3:1"
											},
											"nativeSrc": "8229:11:1",
											"nodeType": "YulFunctionCall",
											"src": "8229:11:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "8222:3:1",
												"nodeType": "YulIdentifier",
												"src": "8222:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
							"nativeSrc": "7848:398:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "7999:3:1",
									"nodeType": "YulTypedName",
									"src": "7999:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "8007:3:1",
									"nodeType": "YulTypedName",
									"src": "8007:3:1",
									"type": ""
								}
							],
							"src": "7848:398:1"
						},
						{
							"body": {
								"nativeSrc": "8440:191:1",
								"nodeType": "YulBlock",
								"src": "8440:191:1",
								"statements": [
									{
										"nativeSrc": "8451:154:1",
										"nodeType": "YulAssignment",
										"src": "8451:154:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "8601:3:1",
													"nodeType": "YulIdentifier",
													"src": "8601:3:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "8458:141:1",
												"nodeType": "YulIdentifier",
												"src": "8458:141:1"
											},
											"nativeSrc": "8458:147:1",
											"nodeType": "YulFunctionCall",
											"src": "8458:147:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "8451:3:1",
												"nodeType": "YulIdentifier",
												"src": "8451:3:1"
											}
										]
									},
									{
										"nativeSrc": "8615:10:1",
										"nodeType": "YulAssignment",
										"src": "8615:10:1",
										"value": {
											"name": "pos",
											"nativeSrc": "8622:3:1",
											"nodeType": "YulIdentifier",
											"src": "8622:3:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "8615:3:1",
												"nodeType": "YulIdentifier",
												"src": "8615:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
							"nativeSrc": "8252:379:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "8427:3:1",
									"nodeType": "YulTypedName",
									"src": "8427:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "8436:3:1",
									"nodeType": "YulTypedName",
									"src": "8436:3:1",
									"type": ""
								}
							],
							"src": "8252:379:1"
						},
						{
							"body": {
								"nativeSrc": "8743:71:1",
								"nodeType": "YulBlock",
								"src": "8743:71:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "8765:6:1",
															"nodeType": "YulIdentifier",
															"src": "8765:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "8773:1:1",
															"nodeType": "YulLiteral",
															"src": "8773:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "8761:3:1",
														"nodeType": "YulIdentifier",
														"src": "8761:3:1"
													},
													"nativeSrc": "8761:14:1",
													"nodeType": "YulFunctionCall",
													"src": "8761:14:1"
												},
												{
													"hexValue": "5472616e73666572206e617469766520746f6b656e20676167616c",
													"kind": "string",
													"nativeSrc": "8777:29:1",
													"nodeType": "YulLiteral",
													"src": "8777:29:1",
													"type": "",
													"value": "Transfer native token gagal"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "8754:6:1",
												"nodeType": "YulIdentifier",
												"src": "8754:6:1"
											},
											"nativeSrc": "8754:53:1",
											"nodeType": "YulFunctionCall",
											"src": "8754:53:1"
										},
										"nativeSrc": "8754:53:1",
										"nodeType": "YulExpressionStatement",
										"src": "8754:53:1"
									}
								]
							},
							"name": "store_literal_in_memory_91466b77ad938e250b04d9a53330fb68a78cb4b3933d2285eb8f594692280890",
							"nativeSrc": "8637:177:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "8735:6:1",
									"nodeType": "YulTypedName",
									"src": "8735:6:1",
									"type": ""
								}
							],
							"src": "8637:177:1"
						},
						{
							"body": {
								"nativeSrc": "8966:220:1",
								"nodeType": "YulBlock",
								"src": "8966:220:1",
								"statements": [
									{
										"nativeSrc": "8976:74:1",
										"nodeType": "YulAssignment",
										"src": "8976:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9042:3:1",
													"nodeType": "YulIdentifier",
													"src": "9042:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "9047:2:1",
													"nodeType": "YulLiteral",
													"src": "9047:2:1",
													"type": "",
													"value": "27"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8983:58:1",
												"nodeType": "YulIdentifier",
												"src": "8983:58:1"
											},
											"nativeSrc": "8983:67:1",
											"nodeType": "YulFunctionCall",
											"src": "8983:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "8976:3:1",
												"nodeType": "YulIdentifier",
												"src": "8976:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9148:3:1",
													"nodeType": "YulIdentifier",
													"src": "9148:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_91466b77ad938e250b04d9a53330fb68a78cb4b3933d2285eb8f594692280890",
												"nativeSrc": "9059:88:1",
												"nodeType": "YulIdentifier",
												"src": "9059:88:1"
											},
											"nativeSrc": "9059:93:1",
											"nodeType": "YulFunctionCall",
											"src": "9059:93:1"
										},
										"nativeSrc": "9059:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "9059:93:1"
									},
									{
										"nativeSrc": "9161:19:1",
										"nodeType": "YulAssignment",
										"src": "9161:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9172:3:1",
													"nodeType": "YulIdentifier",
													"src": "9172:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "9177:2:1",
													"nodeType": "YulLiteral",
													"src": "9177:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9168:3:1",
												"nodeType": "YulIdentifier",
												"src": "9168:3:1"
											},
											"nativeSrc": "9168:12:1",
											"nodeType": "YulFunctionCall",
											"src": "9168:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "9161:3:1",
												"nodeType": "YulIdentifier",
												"src": "9161:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_91466b77ad938e250b04d9a53330fb68a78cb4b3933d2285eb8f594692280890_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "8820:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "8954:3:1",
									"nodeType": "YulTypedName",
									"src": "8954:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "8962:3:1",
									"nodeType": "YulTypedName",
									"src": "8962:3:1",
									"type": ""
								}
							],
							"src": "8820:366:1"
						},
						{
							"body": {
								"nativeSrc": "9363:248:1",
								"nodeType": "YulBlock",
								"src": "9363:248:1",
								"statements": [
									{
										"nativeSrc": "9373:26:1",
										"nodeType": "YulAssignment",
										"src": "9373:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "9385:9:1",
													"nodeType": "YulIdentifier",
													"src": "9385:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "9396:2:1",
													"nodeType": "YulLiteral",
													"src": "9396:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9381:3:1",
												"nodeType": "YulIdentifier",
												"src": "9381:3:1"
											},
											"nativeSrc": "9381:18:1",
											"nodeType": "YulFunctionCall",
											"src": "9381:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "9373:4:1",
												"nodeType": "YulIdentifier",
												"src": "9373:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "9420:9:1",
															"nodeType": "YulIdentifier",
															"src": "9420:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "9431:1:1",
															"nodeType": "YulLiteral",
															"src": "9431:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9416:3:1",
														"nodeType": "YulIdentifier",
														"src": "9416:3:1"
													},
													"nativeSrc": "9416:17:1",
													"nodeType": "YulFunctionCall",
													"src": "9416:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "9439:4:1",
															"nodeType": "YulIdentifier",
															"src": "9439:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "9445:9:1",
															"nodeType": "YulIdentifier",
															"src": "9445:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "9435:3:1",
														"nodeType": "YulIdentifier",
														"src": "9435:3:1"
													},
													"nativeSrc": "9435:20:1",
													"nodeType": "YulFunctionCall",
													"src": "9435:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "9409:6:1",
												"nodeType": "YulIdentifier",
												"src": "9409:6:1"
											},
											"nativeSrc": "9409:47:1",
											"nodeType": "YulFunctionCall",
											"src": "9409:47:1"
										},
										"nativeSrc": "9409:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "9409:47:1"
									},
									{
										"nativeSrc": "9465:139:1",
										"nodeType": "YulAssignment",
										"src": "9465:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "9599:4:1",
													"nodeType": "YulIdentifier",
													"src": "9599:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_91466b77ad938e250b04d9a53330fb68a78cb4b3933d2285eb8f594692280890_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9473:124:1",
												"nodeType": "YulIdentifier",
												"src": "9473:124:1"
											},
											"nativeSrc": "9473:131:1",
											"nodeType": "YulFunctionCall",
											"src": "9473:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "9465:4:1",
												"nodeType": "YulIdentifier",
												"src": "9465:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_91466b77ad938e250b04d9a53330fb68a78cb4b3933d2285eb8f594692280890__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "9192:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "9343:9:1",
									"nodeType": "YulTypedName",
									"src": "9343:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "9358:4:1",
									"nodeType": "YulTypedName",
									"src": "9358:4:1",
									"type": ""
								}
							],
							"src": "9192:419:1"
						},
						{
							"body": {
								"nativeSrc": "9682:53:1",
								"nodeType": "YulBlock",
								"src": "9682:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9699:3:1",
													"nodeType": "YulIdentifier",
													"src": "9699:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "9722:5:1",
															"nodeType": "YulIdentifier",
															"src": "9722:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nativeSrc": "9704:17:1",
														"nodeType": "YulIdentifier",
														"src": "9704:17:1"
													},
													"nativeSrc": "9704:24:1",
													"nodeType": "YulFunctionCall",
													"src": "9704:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "9692:6:1",
												"nodeType": "YulIdentifier",
												"src": "9692:6:1"
											},
											"nativeSrc": "9692:37:1",
											"nodeType": "YulFunctionCall",
											"src": "9692:37:1"
										},
										"nativeSrc": "9692:37:1",
										"nodeType": "YulExpressionStatement",
										"src": "9692:37:1"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nativeSrc": "9617:118:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "9670:5:1",
									"nodeType": "YulTypedName",
									"src": "9670:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "9677:3:1",
									"nodeType": "YulTypedName",
									"src": "9677:3:1",
									"type": ""
								}
							],
							"src": "9617:118:1"
						},
						{
							"body": {
								"nativeSrc": "9867:206:1",
								"nodeType": "YulBlock",
								"src": "9867:206:1",
								"statements": [
									{
										"nativeSrc": "9877:26:1",
										"nodeType": "YulAssignment",
										"src": "9877:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "9889:9:1",
													"nodeType": "YulIdentifier",
													"src": "9889:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "9900:2:1",
													"nodeType": "YulLiteral",
													"src": "9900:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9885:3:1",
												"nodeType": "YulIdentifier",
												"src": "9885:3:1"
											},
											"nativeSrc": "9885:18:1",
											"nodeType": "YulFunctionCall",
											"src": "9885:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "9877:4:1",
												"nodeType": "YulIdentifier",
												"src": "9877:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "9957:6:1",
													"nodeType": "YulIdentifier",
													"src": "9957:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "9970:9:1",
															"nodeType": "YulIdentifier",
															"src": "9970:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "9981:1:1",
															"nodeType": "YulLiteral",
															"src": "9981:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9966:3:1",
														"nodeType": "YulIdentifier",
														"src": "9966:3:1"
													},
													"nativeSrc": "9966:17:1",
													"nodeType": "YulFunctionCall",
													"src": "9966:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9913:43:1",
												"nodeType": "YulIdentifier",
												"src": "9913:43:1"
											},
											"nativeSrc": "9913:71:1",
											"nodeType": "YulFunctionCall",
											"src": "9913:71:1"
										},
										"nativeSrc": "9913:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "9913:71:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value1",
													"nativeSrc": "10038:6:1",
													"nodeType": "YulIdentifier",
													"src": "10038:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "10051:9:1",
															"nodeType": "YulIdentifier",
															"src": "10051:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "10062:2:1",
															"nodeType": "YulLiteral",
															"src": "10062:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "10047:3:1",
														"nodeType": "YulIdentifier",
														"src": "10047:3:1"
													},
													"nativeSrc": "10047:18:1",
													"nodeType": "YulFunctionCall",
													"src": "10047:18:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9994:43:1",
												"nodeType": "YulIdentifier",
												"src": "9994:43:1"
											},
											"nativeSrc": "9994:72:1",
											"nodeType": "YulFunctionCall",
											"src": "9994:72:1"
										},
										"nativeSrc": "9994:72:1",
										"nodeType": "YulExpressionStatement",
										"src": "9994:72:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
							"nativeSrc": "9741:332:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "9831:9:1",
									"nodeType": "YulTypedName",
									"src": "9831:9:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "9843:6:1",
									"nodeType": "YulTypedName",
									"src": "9843:6:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "9851:6:1",
									"nodeType": "YulTypedName",
									"src": "9851:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "9862:4:1",
									"nodeType": "YulTypedName",
									"src": "9862:4:1",
									"type": ""
								}
							],
							"src": "9741:332:1"
						},
						{
							"body": {
								"nativeSrc": "10119:76:1",
								"nodeType": "YulBlock",
								"src": "10119:76:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "10173:16:1",
											"nodeType": "YulBlock",
											"src": "10173:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "10182:1:1",
																"nodeType": "YulLiteral",
																"src": "10182:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "10185:1:1",
																"nodeType": "YulLiteral",
																"src": "10185:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "10175:6:1",
															"nodeType": "YulIdentifier",
															"src": "10175:6:1"
														},
														"nativeSrc": "10175:12:1",
														"nodeType": "YulFunctionCall",
														"src": "10175:12:1"
													},
													"nativeSrc": "10175:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "10175:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "10142:5:1",
															"nodeType": "YulIdentifier",
															"src": "10142:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "10164:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "10164:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_bool",
																"nativeSrc": "10149:14:1",
																"nodeType": "YulIdentifier",
																"src": "10149:14:1"
															},
															"nativeSrc": "10149:21:1",
															"nodeType": "YulFunctionCall",
															"src": "10149:21:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "10139:2:1",
														"nodeType": "YulIdentifier",
														"src": "10139:2:1"
													},
													"nativeSrc": "10139:32:1",
													"nodeType": "YulFunctionCall",
													"src": "10139:32:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "10132:6:1",
												"nodeType": "YulIdentifier",
												"src": "10132:6:1"
											},
											"nativeSrc": "10132:40:1",
											"nodeType": "YulFunctionCall",
											"src": "10132:40:1"
										},
										"nativeSrc": "10129:60:1",
										"nodeType": "YulIf",
										"src": "10129:60:1"
									}
								]
							},
							"name": "validator_revert_t_bool",
							"nativeSrc": "10079:116:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "10112:5:1",
									"nodeType": "YulTypedName",
									"src": "10112:5:1",
									"type": ""
								}
							],
							"src": "10079:116:1"
						},
						{
							"body": {
								"nativeSrc": "10261:77:1",
								"nodeType": "YulBlock",
								"src": "10261:77:1",
								"statements": [
									{
										"nativeSrc": "10271:22:1",
										"nodeType": "YulAssignment",
										"src": "10271:22:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "10286:6:1",
													"nodeType": "YulIdentifier",
													"src": "10286:6:1"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "10280:5:1",
												"nodeType": "YulIdentifier",
												"src": "10280:5:1"
											},
											"nativeSrc": "10280:13:1",
											"nodeType": "YulFunctionCall",
											"src": "10280:13:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "10271:5:1",
												"nodeType": "YulIdentifier",
												"src": "10271:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "10326:5:1",
													"nodeType": "YulIdentifier",
													"src": "10326:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_bool",
												"nativeSrc": "10302:23:1",
												"nodeType": "YulIdentifier",
												"src": "10302:23:1"
											},
											"nativeSrc": "10302:30:1",
											"nodeType": "YulFunctionCall",
											"src": "10302:30:1"
										},
										"nativeSrc": "10302:30:1",
										"nodeType": "YulExpressionStatement",
										"src": "10302:30:1"
									}
								]
							},
							"name": "abi_decode_t_bool_fromMemory",
							"nativeSrc": "10201:137:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "10239:6:1",
									"nodeType": "YulTypedName",
									"src": "10239:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "10247:3:1",
									"nodeType": "YulTypedName",
									"src": "10247:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "10255:5:1",
									"nodeType": "YulTypedName",
									"src": "10255:5:1",
									"type": ""
								}
							],
							"src": "10201:137:1"
						},
						{
							"body": {
								"nativeSrc": "10418:271:1",
								"nodeType": "YulBlock",
								"src": "10418:271:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "10464:83:1",
											"nodeType": "YulBlock",
											"src": "10464:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "10466:77:1",
															"nodeType": "YulIdentifier",
															"src": "10466:77:1"
														},
														"nativeSrc": "10466:79:1",
														"nodeType": "YulFunctionCall",
														"src": "10466:79:1"
													},
													"nativeSrc": "10466:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "10466:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "10439:7:1",
															"nodeType": "YulIdentifier",
															"src": "10439:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "10448:9:1",
															"nodeType": "YulIdentifier",
															"src": "10448:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "10435:3:1",
														"nodeType": "YulIdentifier",
														"src": "10435:3:1"
													},
													"nativeSrc": "10435:23:1",
													"nodeType": "YulFunctionCall",
													"src": "10435:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "10460:2:1",
													"nodeType": "YulLiteral",
													"src": "10460:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "10431:3:1",
												"nodeType": "YulIdentifier",
												"src": "10431:3:1"
											},
											"nativeSrc": "10431:32:1",
											"nodeType": "YulFunctionCall",
											"src": "10431:32:1"
										},
										"nativeSrc": "10428:119:1",
										"nodeType": "YulIf",
										"src": "10428:119:1"
									},
									{
										"nativeSrc": "10557:125:1",
										"nodeType": "YulBlock",
										"src": "10557:125:1",
										"statements": [
											{
												"nativeSrc": "10572:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "10572:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "10586:1:1",
													"nodeType": "YulLiteral",
													"src": "10586:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "10576:6:1",
														"nodeType": "YulTypedName",
														"src": "10576:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "10601:71:1",
												"nodeType": "YulAssignment",
												"src": "10601:71:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "10644:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "10644:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "10655:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10655:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "10640:3:1",
																"nodeType": "YulIdentifier",
																"src": "10640:3:1"
															},
															"nativeSrc": "10640:22:1",
															"nodeType": "YulFunctionCall",
															"src": "10640:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "10664:7:1",
															"nodeType": "YulIdentifier",
															"src": "10664:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_bool_fromMemory",
														"nativeSrc": "10611:28:1",
														"nodeType": "YulIdentifier",
														"src": "10611:28:1"
													},
													"nativeSrc": "10611:61:1",
													"nodeType": "YulFunctionCall",
													"src": "10611:61:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "10601:6:1",
														"nodeType": "YulIdentifier",
														"src": "10601:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_bool_fromMemory",
							"nativeSrc": "10344:345:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "10388:9:1",
									"nodeType": "YulTypedName",
									"src": "10388:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "10399:7:1",
									"nodeType": "YulTypedName",
									"src": "10399:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "10411:6:1",
									"nodeType": "YulTypedName",
									"src": "10411:6:1",
									"type": ""
								}
							],
							"src": "10344:345:1"
						},
						{
							"body": {
								"nativeSrc": "10801:64:1",
								"nodeType": "YulBlock",
								"src": "10801:64:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "10823:6:1",
															"nodeType": "YulIdentifier",
															"src": "10823:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "10831:1:1",
															"nodeType": "YulLiteral",
															"src": "10831:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "10819:3:1",
														"nodeType": "YulIdentifier",
														"src": "10819:3:1"
													},
													"nativeSrc": "10819:14:1",
													"nodeType": "YulFunctionCall",
													"src": "10819:14:1"
												},
												{
													"hexValue": "5472616e7366657220746f6b656e20676167616c",
													"kind": "string",
													"nativeSrc": "10835:22:1",
													"nodeType": "YulLiteral",
													"src": "10835:22:1",
													"type": "",
													"value": "Transfer token gagal"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "10812:6:1",
												"nodeType": "YulIdentifier",
												"src": "10812:6:1"
											},
											"nativeSrc": "10812:46:1",
											"nodeType": "YulFunctionCall",
											"src": "10812:46:1"
										},
										"nativeSrc": "10812:46:1",
										"nodeType": "YulExpressionStatement",
										"src": "10812:46:1"
									}
								]
							},
							"name": "store_literal_in_memory_5ab4f7fd44e4cc20c76b147a0eb5ab50168bbb2e06bd09098b08d7bc42f072ee",
							"nativeSrc": "10695:170:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "10793:6:1",
									"nodeType": "YulTypedName",
									"src": "10793:6:1",
									"type": ""
								}
							],
							"src": "10695:170:1"
						},
						{
							"body": {
								"nativeSrc": "11017:220:1",
								"nodeType": "YulBlock",
								"src": "11017:220:1",
								"statements": [
									{
										"nativeSrc": "11027:74:1",
										"nodeType": "YulAssignment",
										"src": "11027:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "11093:3:1",
													"nodeType": "YulIdentifier",
													"src": "11093:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "11098:2:1",
													"nodeType": "YulLiteral",
													"src": "11098:2:1",
													"type": "",
													"value": "20"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11034:58:1",
												"nodeType": "YulIdentifier",
												"src": "11034:58:1"
											},
											"nativeSrc": "11034:67:1",
											"nodeType": "YulFunctionCall",
											"src": "11034:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "11027:3:1",
												"nodeType": "YulIdentifier",
												"src": "11027:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "11199:3:1",
													"nodeType": "YulIdentifier",
													"src": "11199:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_5ab4f7fd44e4cc20c76b147a0eb5ab50168bbb2e06bd09098b08d7bc42f072ee",
												"nativeSrc": "11110:88:1",
												"nodeType": "YulIdentifier",
												"src": "11110:88:1"
											},
											"nativeSrc": "11110:93:1",
											"nodeType": "YulFunctionCall",
											"src": "11110:93:1"
										},
										"nativeSrc": "11110:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "11110:93:1"
									},
									{
										"nativeSrc": "11212:19:1",
										"nodeType": "YulAssignment",
										"src": "11212:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "11223:3:1",
													"nodeType": "YulIdentifier",
													"src": "11223:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "11228:2:1",
													"nodeType": "YulLiteral",
													"src": "11228:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "11219:3:1",
												"nodeType": "YulIdentifier",
												"src": "11219:3:1"
											},
											"nativeSrc": "11219:12:1",
											"nodeType": "YulFunctionCall",
											"src": "11219:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "11212:3:1",
												"nodeType": "YulIdentifier",
												"src": "11212:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_5ab4f7fd44e4cc20c76b147a0eb5ab50168bbb2e06bd09098b08d7bc42f072ee_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "10871:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "11005:3:1",
									"nodeType": "YulTypedName",
									"src": "11005:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "11013:3:1",
									"nodeType": "YulTypedName",
									"src": "11013:3:1",
									"type": ""
								}
							],
							"src": "10871:366:1"
						},
						{
							"body": {
								"nativeSrc": "11414:248:1",
								"nodeType": "YulBlock",
								"src": "11414:248:1",
								"statements": [
									{
										"nativeSrc": "11424:26:1",
										"nodeType": "YulAssignment",
										"src": "11424:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "11436:9:1",
													"nodeType": "YulIdentifier",
													"src": "11436:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "11447:2:1",
													"nodeType": "YulLiteral",
													"src": "11447:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "11432:3:1",
												"nodeType": "YulIdentifier",
												"src": "11432:3:1"
											},
											"nativeSrc": "11432:18:1",
											"nodeType": "YulFunctionCall",
											"src": "11432:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "11424:4:1",
												"nodeType": "YulIdentifier",
												"src": "11424:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "11471:9:1",
															"nodeType": "YulIdentifier",
															"src": "11471:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "11482:1:1",
															"nodeType": "YulLiteral",
															"src": "11482:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "11467:3:1",
														"nodeType": "YulIdentifier",
														"src": "11467:3:1"
													},
													"nativeSrc": "11467:17:1",
													"nodeType": "YulFunctionCall",
													"src": "11467:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "11490:4:1",
															"nodeType": "YulIdentifier",
															"src": "11490:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "11496:9:1",
															"nodeType": "YulIdentifier",
															"src": "11496:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "11486:3:1",
														"nodeType": "YulIdentifier",
														"src": "11486:3:1"
													},
													"nativeSrc": "11486:20:1",
													"nodeType": "YulFunctionCall",
													"src": "11486:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "11460:6:1",
												"nodeType": "YulIdentifier",
												"src": "11460:6:1"
											},
											"nativeSrc": "11460:47:1",
											"nodeType": "YulFunctionCall",
											"src": "11460:47:1"
										},
										"nativeSrc": "11460:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "11460:47:1"
									},
									{
										"nativeSrc": "11516:139:1",
										"nodeType": "YulAssignment",
										"src": "11516:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "11650:4:1",
													"nodeType": "YulIdentifier",
													"src": "11650:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_5ab4f7fd44e4cc20c76b147a0eb5ab50168bbb2e06bd09098b08d7bc42f072ee_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11524:124:1",
												"nodeType": "YulIdentifier",
												"src": "11524:124:1"
											},
											"nativeSrc": "11524:131:1",
											"nodeType": "YulFunctionCall",
											"src": "11524:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "11516:4:1",
												"nodeType": "YulIdentifier",
												"src": "11516:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_5ab4f7fd44e4cc20c76b147a0eb5ab50168bbb2e06bd09098b08d7bc42f072ee__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "11243:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "11394:9:1",
									"nodeType": "YulTypedName",
									"src": "11394:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "11409:4:1",
									"nodeType": "YulTypedName",
									"src": "11409:4:1",
									"type": ""
								}
							],
							"src": "11243:419:1"
						},
						{
							"body": {
								"nativeSrc": "11774:128:1",
								"nodeType": "YulBlock",
								"src": "11774:128:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "11796:6:1",
															"nodeType": "YulIdentifier",
															"src": "11796:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "11804:1:1",
															"nodeType": "YulLiteral",
															"src": "11804:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "11792:3:1",
														"nodeType": "YulIdentifier",
														"src": "11792:3:1"
													},
													"nativeSrc": "11792:14:1",
													"nodeType": "YulFunctionCall",
													"src": "11792:14:1"
												},
												{
													"hexValue": "50616e6a616e6720617272617920726563697069656e74732064616e20616d6f",
													"kind": "string",
													"nativeSrc": "11808:34:1",
													"nodeType": "YulLiteral",
													"src": "11808:34:1",
													"type": "",
													"value": "Panjang array recipients dan amo"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "11785:6:1",
												"nodeType": "YulIdentifier",
												"src": "11785:6:1"
											},
											"nativeSrc": "11785:58:1",
											"nodeType": "YulFunctionCall",
											"src": "11785:58:1"
										},
										"nativeSrc": "11785:58:1",
										"nodeType": "YulExpressionStatement",
										"src": "11785:58:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "11864:6:1",
															"nodeType": "YulIdentifier",
															"src": "11864:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "11872:2:1",
															"nodeType": "YulLiteral",
															"src": "11872:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "11860:3:1",
														"nodeType": "YulIdentifier",
														"src": "11860:3:1"
													},
													"nativeSrc": "11860:15:1",
													"nodeType": "YulFunctionCall",
													"src": "11860:15:1"
												},
												{
													"hexValue": "756e74732068617275732073616d61",
													"kind": "string",
													"nativeSrc": "11877:17:1",
													"nodeType": "YulLiteral",
													"src": "11877:17:1",
													"type": "",
													"value": "unts harus sama"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "11853:6:1",
												"nodeType": "YulIdentifier",
												"src": "11853:6:1"
											},
											"nativeSrc": "11853:42:1",
											"nodeType": "YulFunctionCall",
											"src": "11853:42:1"
										},
										"nativeSrc": "11853:42:1",
										"nodeType": "YulExpressionStatement",
										"src": "11853:42:1"
									}
								]
							},
							"name": "store_literal_in_memory_1f106fa176c9775f0dab0bc2b1454a1eca94b668ddb47dadc23fc910e5d0e3a8",
							"nativeSrc": "11668:234:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "11766:6:1",
									"nodeType": "YulTypedName",
									"src": "11766:6:1",
									"type": ""
								}
							],
							"src": "11668:234:1"
						},
						{
							"body": {
								"nativeSrc": "12054:220:1",
								"nodeType": "YulBlock",
								"src": "12054:220:1",
								"statements": [
									{
										"nativeSrc": "12064:74:1",
										"nodeType": "YulAssignment",
										"src": "12064:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "12130:3:1",
													"nodeType": "YulIdentifier",
													"src": "12130:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "12135:2:1",
													"nodeType": "YulLiteral",
													"src": "12135:2:1",
													"type": "",
													"value": "47"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "12071:58:1",
												"nodeType": "YulIdentifier",
												"src": "12071:58:1"
											},
											"nativeSrc": "12071:67:1",
											"nodeType": "YulFunctionCall",
											"src": "12071:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "12064:3:1",
												"nodeType": "YulIdentifier",
												"src": "12064:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "12236:3:1",
													"nodeType": "YulIdentifier",
													"src": "12236:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_1f106fa176c9775f0dab0bc2b1454a1eca94b668ddb47dadc23fc910e5d0e3a8",
												"nativeSrc": "12147:88:1",
												"nodeType": "YulIdentifier",
												"src": "12147:88:1"
											},
											"nativeSrc": "12147:93:1",
											"nodeType": "YulFunctionCall",
											"src": "12147:93:1"
										},
										"nativeSrc": "12147:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "12147:93:1"
									},
									{
										"nativeSrc": "12249:19:1",
										"nodeType": "YulAssignment",
										"src": "12249:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "12260:3:1",
													"nodeType": "YulIdentifier",
													"src": "12260:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "12265:2:1",
													"nodeType": "YulLiteral",
													"src": "12265:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "12256:3:1",
												"nodeType": "YulIdentifier",
												"src": "12256:3:1"
											},
											"nativeSrc": "12256:12:1",
											"nodeType": "YulFunctionCall",
											"src": "12256:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "12249:3:1",
												"nodeType": "YulIdentifier",
												"src": "12249:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_1f106fa176c9775f0dab0bc2b1454a1eca94b668ddb47dadc23fc910e5d0e3a8_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "11908:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "12042:3:1",
									"nodeType": "YulTypedName",
									"src": "12042:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "12050:3:1",
									"nodeType": "YulTypedName",
									"src": "12050:3:1",
									"type": ""
								}
							],
							"src": "11908:366:1"
						},
						{
							"body": {
								"nativeSrc": "12451:248:1",
								"nodeType": "YulBlock",
								"src": "12451:248:1",
								"statements": [
									{
										"nativeSrc": "12461:26:1",
										"nodeType": "YulAssignment",
										"src": "12461:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "12473:9:1",
													"nodeType": "YulIdentifier",
													"src": "12473:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "12484:2:1",
													"nodeType": "YulLiteral",
													"src": "12484:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "12469:3:1",
												"nodeType": "YulIdentifier",
												"src": "12469:3:1"
											},
											"nativeSrc": "12469:18:1",
											"nodeType": "YulFunctionCall",
											"src": "12469:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "12461:4:1",
												"nodeType": "YulIdentifier",
												"src": "12461:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "12508:9:1",
															"nodeType": "YulIdentifier",
															"src": "12508:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "12519:1:1",
															"nodeType": "YulLiteral",
															"src": "12519:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "12504:3:1",
														"nodeType": "YulIdentifier",
														"src": "12504:3:1"
													},
													"nativeSrc": "12504:17:1",
													"nodeType": "YulFunctionCall",
													"src": "12504:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "12527:4:1",
															"nodeType": "YulIdentifier",
															"src": "12527:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "12533:9:1",
															"nodeType": "YulIdentifier",
															"src": "12533:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "12523:3:1",
														"nodeType": "YulIdentifier",
														"src": "12523:3:1"
													},
													"nativeSrc": "12523:20:1",
													"nodeType": "YulFunctionCall",
													"src": "12523:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "12497:6:1",
												"nodeType": "YulIdentifier",
												"src": "12497:6:1"
											},
											"nativeSrc": "12497:47:1",
											"nodeType": "YulFunctionCall",
											"src": "12497:47:1"
										},
										"nativeSrc": "12497:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "12497:47:1"
									},
									{
										"nativeSrc": "12553:139:1",
										"nodeType": "YulAssignment",
										"src": "12553:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "12687:4:1",
													"nodeType": "YulIdentifier",
													"src": "12687:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_1f106fa176c9775f0dab0bc2b1454a1eca94b668ddb47dadc23fc910e5d0e3a8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12561:124:1",
												"nodeType": "YulIdentifier",
												"src": "12561:124:1"
											},
											"nativeSrc": "12561:131:1",
											"nodeType": "YulFunctionCall",
											"src": "12561:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "12553:4:1",
												"nodeType": "YulIdentifier",
												"src": "12553:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_1f106fa176c9775f0dab0bc2b1454a1eca94b668ddb47dadc23fc910e5d0e3a8__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "12280:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "12431:9:1",
									"nodeType": "YulTypedName",
									"src": "12431:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "12446:4:1",
									"nodeType": "YulTypedName",
									"src": "12446:4:1",
									"type": ""
								}
							],
							"src": "12280:419:1"
						},
						{
							"body": {
								"nativeSrc": "12811:127:1",
								"nodeType": "YulBlock",
								"src": "12811:127:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "12833:6:1",
															"nodeType": "YulIdentifier",
															"src": "12833:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "12841:1:1",
															"nodeType": "YulLiteral",
															"src": "12841:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "12829:3:1",
														"nodeType": "YulIdentifier",
														"src": "12829:3:1"
													},
													"nativeSrc": "12829:14:1",
													"nodeType": "YulFunctionCall",
													"src": "12829:14:1"
												},
												{
													"hexValue": "4d616b73696d616c203230303020616c616d61742070656e6572696d61206461",
													"kind": "string",
													"nativeSrc": "12845:34:1",
													"nodeType": "YulLiteral",
													"src": "12845:34:1",
													"type": "",
													"value": "Maksimal 2000 alamat penerima da"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "12822:6:1",
												"nodeType": "YulIdentifier",
												"src": "12822:6:1"
											},
											"nativeSrc": "12822:58:1",
											"nodeType": "YulFunctionCall",
											"src": "12822:58:1"
										},
										"nativeSrc": "12822:58:1",
										"nodeType": "YulExpressionStatement",
										"src": "12822:58:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "12901:6:1",
															"nodeType": "YulIdentifier",
															"src": "12901:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "12909:2:1",
															"nodeType": "YulLiteral",
															"src": "12909:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "12897:3:1",
														"nodeType": "YulIdentifier",
														"src": "12897:3:1"
													},
													"nativeSrc": "12897:15:1",
													"nodeType": "YulFunctionCall",
													"src": "12897:15:1"
												},
												{
													"hexValue": "6c616d2073617475206261746368",
													"kind": "string",
													"nativeSrc": "12914:16:1",
													"nodeType": "YulLiteral",
													"src": "12914:16:1",
													"type": "",
													"value": "lam satu batch"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "12890:6:1",
												"nodeType": "YulIdentifier",
												"src": "12890:6:1"
											},
											"nativeSrc": "12890:41:1",
											"nodeType": "YulFunctionCall",
											"src": "12890:41:1"
										},
										"nativeSrc": "12890:41:1",
										"nodeType": "YulExpressionStatement",
										"src": "12890:41:1"
									}
								]
							},
							"name": "store_literal_in_memory_cd2b1726f1cf41d7595fc8cf7bb692e2254057a04d640b1c9f9466ee685bf532",
							"nativeSrc": "12705:233:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "12803:6:1",
									"nodeType": "YulTypedName",
									"src": "12803:6:1",
									"type": ""
								}
							],
							"src": "12705:233:1"
						},
						{
							"body": {
								"nativeSrc": "13090:220:1",
								"nodeType": "YulBlock",
								"src": "13090:220:1",
								"statements": [
									{
										"nativeSrc": "13100:74:1",
										"nodeType": "YulAssignment",
										"src": "13100:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "13166:3:1",
													"nodeType": "YulIdentifier",
													"src": "13166:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "13171:2:1",
													"nodeType": "YulLiteral",
													"src": "13171:2:1",
													"type": "",
													"value": "46"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "13107:58:1",
												"nodeType": "YulIdentifier",
												"src": "13107:58:1"
											},
											"nativeSrc": "13107:67:1",
											"nodeType": "YulFunctionCall",
											"src": "13107:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "13100:3:1",
												"nodeType": "YulIdentifier",
												"src": "13100:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "13272:3:1",
													"nodeType": "YulIdentifier",
													"src": "13272:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_cd2b1726f1cf41d7595fc8cf7bb692e2254057a04d640b1c9f9466ee685bf532",
												"nativeSrc": "13183:88:1",
												"nodeType": "YulIdentifier",
												"src": "13183:88:1"
											},
											"nativeSrc": "13183:93:1",
											"nodeType": "YulFunctionCall",
											"src": "13183:93:1"
										},
										"nativeSrc": "13183:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "13183:93:1"
									},
									{
										"nativeSrc": "13285:19:1",
										"nodeType": "YulAssignment",
										"src": "13285:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "13296:3:1",
													"nodeType": "YulIdentifier",
													"src": "13296:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "13301:2:1",
													"nodeType": "YulLiteral",
													"src": "13301:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "13292:3:1",
												"nodeType": "YulIdentifier",
												"src": "13292:3:1"
											},
											"nativeSrc": "13292:12:1",
											"nodeType": "YulFunctionCall",
											"src": "13292:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "13285:3:1",
												"nodeType": "YulIdentifier",
												"src": "13285:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_cd2b1726f1cf41d7595fc8cf7bb692e2254057a04d640b1c9f9466ee685bf532_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "12944:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "13078:3:1",
									"nodeType": "YulTypedName",
									"src": "13078:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "13086:3:1",
									"nodeType": "YulTypedName",
									"src": "13086:3:1",
									"type": ""
								}
							],
							"src": "12944:366:1"
						},
						{
							"body": {
								"nativeSrc": "13487:248:1",
								"nodeType": "YulBlock",
								"src": "13487:248:1",
								"statements": [
									{
										"nativeSrc": "13497:26:1",
										"nodeType": "YulAssignment",
										"src": "13497:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "13509:9:1",
													"nodeType": "YulIdentifier",
													"src": "13509:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "13520:2:1",
													"nodeType": "YulLiteral",
													"src": "13520:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "13505:3:1",
												"nodeType": "YulIdentifier",
												"src": "13505:3:1"
											},
											"nativeSrc": "13505:18:1",
											"nodeType": "YulFunctionCall",
											"src": "13505:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "13497:4:1",
												"nodeType": "YulIdentifier",
												"src": "13497:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "13544:9:1",
															"nodeType": "YulIdentifier",
															"src": "13544:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "13555:1:1",
															"nodeType": "YulLiteral",
															"src": "13555:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "13540:3:1",
														"nodeType": "YulIdentifier",
														"src": "13540:3:1"
													},
													"nativeSrc": "13540:17:1",
													"nodeType": "YulFunctionCall",
													"src": "13540:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "13563:4:1",
															"nodeType": "YulIdentifier",
															"src": "13563:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "13569:9:1",
															"nodeType": "YulIdentifier",
															"src": "13569:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "13559:3:1",
														"nodeType": "YulIdentifier",
														"src": "13559:3:1"
													},
													"nativeSrc": "13559:20:1",
													"nodeType": "YulFunctionCall",
													"src": "13559:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "13533:6:1",
												"nodeType": "YulIdentifier",
												"src": "13533:6:1"
											},
											"nativeSrc": "13533:47:1",
											"nodeType": "YulFunctionCall",
											"src": "13533:47:1"
										},
										"nativeSrc": "13533:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "13533:47:1"
									},
									{
										"nativeSrc": "13589:139:1",
										"nodeType": "YulAssignment",
										"src": "13589:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "13723:4:1",
													"nodeType": "YulIdentifier",
													"src": "13723:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_cd2b1726f1cf41d7595fc8cf7bb692e2254057a04d640b1c9f9466ee685bf532_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13597:124:1",
												"nodeType": "YulIdentifier",
												"src": "13597:124:1"
											},
											"nativeSrc": "13597:131:1",
											"nodeType": "YulFunctionCall",
											"src": "13597:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "13589:4:1",
												"nodeType": "YulIdentifier",
												"src": "13589:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_cd2b1726f1cf41d7595fc8cf7bb692e2254057a04d640b1c9f9466ee685bf532__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "13316:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "13467:9:1",
									"nodeType": "YulTypedName",
									"src": "13467:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "13482:4:1",
									"nodeType": "YulTypedName",
									"src": "13482:4:1",
									"type": ""
								}
							],
							"src": "13316:419:1"
						},
						{
							"body": {
								"nativeSrc": "13769:152:1",
								"nodeType": "YulBlock",
								"src": "13769:152:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "13786:1:1",
													"nodeType": "YulLiteral",
													"src": "13786:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "13789:77:1",
													"nodeType": "YulLiteral",
													"src": "13789:77:1",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "13779:6:1",
												"nodeType": "YulIdentifier",
												"src": "13779:6:1"
											},
											"nativeSrc": "13779:88:1",
											"nodeType": "YulFunctionCall",
											"src": "13779:88:1"
										},
										"nativeSrc": "13779:88:1",
										"nodeType": "YulExpressionStatement",
										"src": "13779:88:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "13883:1:1",
													"nodeType": "YulLiteral",
													"src": "13883:1:1",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "13886:4:1",
													"nodeType": "YulLiteral",
													"src": "13886:4:1",
													"type": "",
													"value": "0x32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "13876:6:1",
												"nodeType": "YulIdentifier",
												"src": "13876:6:1"
											},
											"nativeSrc": "13876:15:1",
											"nodeType": "YulFunctionCall",
											"src": "13876:15:1"
										},
										"nativeSrc": "13876:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "13876:15:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "13907:1:1",
													"nodeType": "YulLiteral",
													"src": "13907:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "13910:4:1",
													"nodeType": "YulLiteral",
													"src": "13910:4:1",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "13900:6:1",
												"nodeType": "YulIdentifier",
												"src": "13900:6:1"
											},
											"nativeSrc": "13900:15:1",
											"nodeType": "YulFunctionCall",
											"src": "13900:15:1"
										},
										"nativeSrc": "13900:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "13900:15:1"
									}
								]
							},
							"name": "panic_error_0x32",
							"nativeSrc": "13741:180:1",
							"nodeType": "YulFunctionDefinition",
							"src": "13741:180:1"
						},
						{
							"body": {
								"nativeSrc": "13955:152:1",
								"nodeType": "YulBlock",
								"src": "13955:152:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "13972:1:1",
													"nodeType": "YulLiteral",
													"src": "13972:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "13975:77:1",
													"nodeType": "YulLiteral",
													"src": "13975:77:1",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "13965:6:1",
												"nodeType": "YulIdentifier",
												"src": "13965:6:1"
											},
											"nativeSrc": "13965:88:1",
											"nodeType": "YulFunctionCall",
											"src": "13965:88:1"
										},
										"nativeSrc": "13965:88:1",
										"nodeType": "YulExpressionStatement",
										"src": "13965:88:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "14069:1:1",
													"nodeType": "YulLiteral",
													"src": "14069:1:1",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "14072:4:1",
													"nodeType": "YulLiteral",
													"src": "14072:4:1",
													"type": "",
													"value": "0x11"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "14062:6:1",
												"nodeType": "YulIdentifier",
												"src": "14062:6:1"
											},
											"nativeSrc": "14062:15:1",
											"nodeType": "YulFunctionCall",
											"src": "14062:15:1"
										},
										"nativeSrc": "14062:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "14062:15:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "14093:1:1",
													"nodeType": "YulLiteral",
													"src": "14093:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "14096:4:1",
													"nodeType": "YulLiteral",
													"src": "14096:4:1",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "14086:6:1",
												"nodeType": "YulIdentifier",
												"src": "14086:6:1"
											},
											"nativeSrc": "14086:15:1",
											"nodeType": "YulFunctionCall",
											"src": "14086:15:1"
										},
										"nativeSrc": "14086:15:1",
										"nodeType": "YulExpressionStatement",
										"src": "14086:15:1"
									}
								]
							},
							"name": "panic_error_0x11",
							"nativeSrc": "13927:180:1",
							"nodeType": "YulFunctionDefinition",
							"src": "13927:180:1"
						},
						{
							"body": {
								"nativeSrc": "14157:147:1",
								"nodeType": "YulBlock",
								"src": "14157:147:1",
								"statements": [
									{
										"nativeSrc": "14167:25:1",
										"nodeType": "YulAssignment",
										"src": "14167:25:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "14190:1:1",
													"nodeType": "YulIdentifier",
													"src": "14190:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "14172:17:1",
												"nodeType": "YulIdentifier",
												"src": "14172:17:1"
											},
											"nativeSrc": "14172:20:1",
											"nodeType": "YulFunctionCall",
											"src": "14172:20:1"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "14167:1:1",
												"nodeType": "YulIdentifier",
												"src": "14167:1:1"
											}
										]
									},
									{
										"nativeSrc": "14201:25:1",
										"nodeType": "YulAssignment",
										"src": "14201:25:1",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "14224:1:1",
													"nodeType": "YulIdentifier",
													"src": "14224:1:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "14206:17:1",
												"nodeType": "YulIdentifier",
												"src": "14206:17:1"
											},
											"nativeSrc": "14206:20:1",
											"nodeType": "YulFunctionCall",
											"src": "14206:20:1"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "14201:1:1",
												"nodeType": "YulIdentifier",
												"src": "14201:1:1"
											}
										]
									},
									{
										"nativeSrc": "14235:16:1",
										"nodeType": "YulAssignment",
										"src": "14235:16:1",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "14246:1:1",
													"nodeType": "YulIdentifier",
													"src": "14246:1:1"
												},
												{
													"name": "y",
													"nativeSrc": "14249:1:1",
													"nodeType": "YulIdentifier",
													"src": "14249:1:1"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "14242:3:1",
												"nodeType": "YulIdentifier",
												"src": "14242:3:1"
											},
											"nativeSrc": "14242:9:1",
											"nodeType": "YulFunctionCall",
											"src": "14242:9:1"
										},
										"variableNames": [
											{
												"name": "sum",
												"nativeSrc": "14235:3:1",
												"nodeType": "YulIdentifier",
												"src": "14235:3:1"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "14275:22:1",
											"nodeType": "YulBlock",
											"src": "14275:22:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "14277:16:1",
															"nodeType": "YulIdentifier",
															"src": "14277:16:1"
														},
														"nativeSrc": "14277:18:1",
														"nodeType": "YulFunctionCall",
														"src": "14277:18:1"
													},
													"nativeSrc": "14277:18:1",
													"nodeType": "YulExpressionStatement",
													"src": "14277:18:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "14267:1:1",
													"nodeType": "YulIdentifier",
													"src": "14267:1:1"
												},
												{
													"name": "sum",
													"nativeSrc": "14270:3:1",
													"nodeType": "YulIdentifier",
													"src": "14270:3:1"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "14264:2:1",
												"nodeType": "YulIdentifier",
												"src": "14264:2:1"
											},
											"nativeSrc": "14264:10:1",
											"nodeType": "YulFunctionCall",
											"src": "14264:10:1"
										},
										"nativeSrc": "14261:36:1",
										"nodeType": "YulIf",
										"src": "14261:36:1"
									}
								]
							},
							"name": "checked_add_t_uint256",
							"nativeSrc": "14113:191:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "14144:1:1",
									"nodeType": "YulTypedName",
									"src": "14144:1:1",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "14147:1:1",
									"nodeType": "YulTypedName",
									"src": "14147:1:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "sum",
									"nativeSrc": "14153:3:1",
									"nodeType": "YulTypedName",
									"src": "14153:3:1",
									"type": ""
								}
							],
							"src": "14113:191:1"
						},
						{
							"body": {
								"nativeSrc": "14436:206:1",
								"nodeType": "YulBlock",
								"src": "14436:206:1",
								"statements": [
									{
										"nativeSrc": "14446:26:1",
										"nodeType": "YulAssignment",
										"src": "14446:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "14458:9:1",
													"nodeType": "YulIdentifier",
													"src": "14458:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "14469:2:1",
													"nodeType": "YulLiteral",
													"src": "14469:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "14454:3:1",
												"nodeType": "YulIdentifier",
												"src": "14454:3:1"
											},
											"nativeSrc": "14454:18:1",
											"nodeType": "YulFunctionCall",
											"src": "14454:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "14446:4:1",
												"nodeType": "YulIdentifier",
												"src": "14446:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "14526:6:1",
													"nodeType": "YulIdentifier",
													"src": "14526:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "14539:9:1",
															"nodeType": "YulIdentifier",
															"src": "14539:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "14550:1:1",
															"nodeType": "YulLiteral",
															"src": "14550:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "14535:3:1",
														"nodeType": "YulIdentifier",
														"src": "14535:3:1"
													},
													"nativeSrc": "14535:17:1",
													"nodeType": "YulFunctionCall",
													"src": "14535:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "14482:43:1",
												"nodeType": "YulIdentifier",
												"src": "14482:43:1"
											},
											"nativeSrc": "14482:71:1",
											"nodeType": "YulFunctionCall",
											"src": "14482:71:1"
										},
										"nativeSrc": "14482:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "14482:71:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value1",
													"nativeSrc": "14607:6:1",
													"nodeType": "YulIdentifier",
													"src": "14607:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "14620:9:1",
															"nodeType": "YulIdentifier",
															"src": "14620:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "14631:2:1",
															"nodeType": "YulLiteral",
															"src": "14631:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "14616:3:1",
														"nodeType": "YulIdentifier",
														"src": "14616:3:1"
													},
													"nativeSrc": "14616:18:1",
													"nodeType": "YulFunctionCall",
													"src": "14616:18:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "14563:43:1",
												"nodeType": "YulIdentifier",
												"src": "14563:43:1"
											},
											"nativeSrc": "14563:72:1",
											"nodeType": "YulFunctionCall",
											"src": "14563:72:1"
										},
										"nativeSrc": "14563:72:1",
										"nodeType": "YulExpressionStatement",
										"src": "14563:72:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
							"nativeSrc": "14310:332:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "14400:9:1",
									"nodeType": "YulTypedName",
									"src": "14400:9:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "14412:6:1",
									"nodeType": "YulTypedName",
									"src": "14412:6:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "14420:6:1",
									"nodeType": "YulTypedName",
									"src": "14420:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "14431:4:1",
									"nodeType": "YulTypedName",
									"src": "14431:4:1",
									"type": ""
								}
							],
							"src": "14310:332:1"
						},
						{
							"body": {
								"nativeSrc": "14711:80:1",
								"nodeType": "YulBlock",
								"src": "14711:80:1",
								"statements": [
									{
										"nativeSrc": "14721:22:1",
										"nodeType": "YulAssignment",
										"src": "14721:22:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "14736:6:1",
													"nodeType": "YulIdentifier",
													"src": "14736:6:1"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "14730:5:1",
												"nodeType": "YulIdentifier",
												"src": "14730:5:1"
											},
											"nativeSrc": "14730:13:1",
											"nodeType": "YulFunctionCall",
											"src": "14730:13:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "14721:5:1",
												"nodeType": "YulIdentifier",
												"src": "14721:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "14779:5:1",
													"nodeType": "YulIdentifier",
													"src": "14779:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_uint256",
												"nativeSrc": "14752:26:1",
												"nodeType": "YulIdentifier",
												"src": "14752:26:1"
											},
											"nativeSrc": "14752:33:1",
											"nodeType": "YulFunctionCall",
											"src": "14752:33:1"
										},
										"nativeSrc": "14752:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "14752:33:1"
									}
								]
							},
							"name": "abi_decode_t_uint256_fromMemory",
							"nativeSrc": "14648:143:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "14689:6:1",
									"nodeType": "YulTypedName",
									"src": "14689:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "14697:3:1",
									"nodeType": "YulTypedName",
									"src": "14697:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "14705:5:1",
									"nodeType": "YulTypedName",
									"src": "14705:5:1",
									"type": ""
								}
							],
							"src": "14648:143:1"
						},
						{
							"body": {
								"nativeSrc": "14874:274:1",
								"nodeType": "YulBlock",
								"src": "14874:274:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "14920:83:1",
											"nodeType": "YulBlock",
											"src": "14920:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "14922:77:1",
															"nodeType": "YulIdentifier",
															"src": "14922:77:1"
														},
														"nativeSrc": "14922:79:1",
														"nodeType": "YulFunctionCall",
														"src": "14922:79:1"
													},
													"nativeSrc": "14922:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "14922:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "14895:7:1",
															"nodeType": "YulIdentifier",
															"src": "14895:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "14904:9:1",
															"nodeType": "YulIdentifier",
															"src": "14904:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "14891:3:1",
														"nodeType": "YulIdentifier",
														"src": "14891:3:1"
													},
													"nativeSrc": "14891:23:1",
													"nodeType": "YulFunctionCall",
													"src": "14891:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "14916:2:1",
													"nodeType": "YulLiteral",
													"src": "14916:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "14887:3:1",
												"nodeType": "YulIdentifier",
												"src": "14887:3:1"
											},
											"nativeSrc": "14887:32:1",
											"nodeType": "YulFunctionCall",
											"src": "14887:32:1"
										},
										"nativeSrc": "14884:119:1",
										"nodeType": "YulIf",
										"src": "14884:119:1"
									},
									{
										"nativeSrc": "15013:128:1",
										"nodeType": "YulBlock",
										"src": "15013:128:1",
										"statements": [
											{
												"nativeSrc": "15028:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "15028:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "15042:1:1",
													"nodeType": "YulLiteral",
													"src": "15042:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "15032:6:1",
														"nodeType": "YulTypedName",
														"src": "15032:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "15057:74:1",
												"nodeType": "YulAssignment",
												"src": "15057:74:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "15103:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "15103:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "15114:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15114:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "15099:3:1",
																"nodeType": "YulIdentifier",
																"src": "15099:3:1"
															},
															"nativeSrc": "15099:22:1",
															"nodeType": "YulFunctionCall",
															"src": "15099:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "15123:7:1",
															"nodeType": "YulIdentifier",
															"src": "15123:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256_fromMemory",
														"nativeSrc": "15067:31:1",
														"nodeType": "YulIdentifier",
														"src": "15067:31:1"
													},
													"nativeSrc": "15067:64:1",
													"nodeType": "YulFunctionCall",
													"src": "15067:64:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "15057:6:1",
														"nodeType": "YulIdentifier",
														"src": "15057:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256_fromMemory",
							"nativeSrc": "14797:351:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "14844:9:1",
									"nodeType": "YulTypedName",
									"src": "14844:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "14855:7:1",
									"nodeType": "YulTypedName",
									"src": "14855:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "14867:6:1",
									"nodeType": "YulTypedName",
									"src": "14867:6:1",
									"type": ""
								}
							],
							"src": "14797:351:1"
						},
						{
							"body": {
								"nativeSrc": "15260:71:1",
								"nodeType": "YulBlock",
								"src": "15260:71:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "15282:6:1",
															"nodeType": "YulIdentifier",
															"src": "15282:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "15290:1:1",
															"nodeType": "YulLiteral",
															"src": "15290:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "15278:3:1",
														"nodeType": "YulIdentifier",
														"src": "15278:3:1"
													},
													"nativeSrc": "15278:14:1",
													"nodeType": "YulFunctionCall",
													"src": "15278:14:1"
												},
												{
													"hexValue": "416c6c6f77616e636520746f6b656e20746964616b2063756b7570",
													"kind": "string",
													"nativeSrc": "15294:29:1",
													"nodeType": "YulLiteral",
													"src": "15294:29:1",
													"type": "",
													"value": "Allowance token tidak cukup"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "15271:6:1",
												"nodeType": "YulIdentifier",
												"src": "15271:6:1"
											},
											"nativeSrc": "15271:53:1",
											"nodeType": "YulFunctionCall",
											"src": "15271:53:1"
										},
										"nativeSrc": "15271:53:1",
										"nodeType": "YulExpressionStatement",
										"src": "15271:53:1"
									}
								]
							},
							"name": "store_literal_in_memory_37325eea18700d90d6e215f9e9b752cd62b8a0490ab2d9176862e482d3be78e3",
							"nativeSrc": "15154:177:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "15252:6:1",
									"nodeType": "YulTypedName",
									"src": "15252:6:1",
									"type": ""
								}
							],
							"src": "15154:177:1"
						},
						{
							"body": {
								"nativeSrc": "15483:220:1",
								"nodeType": "YulBlock",
								"src": "15483:220:1",
								"statements": [
									{
										"nativeSrc": "15493:74:1",
										"nodeType": "YulAssignment",
										"src": "15493:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "15559:3:1",
													"nodeType": "YulIdentifier",
													"src": "15559:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "15564:2:1",
													"nodeType": "YulLiteral",
													"src": "15564:2:1",
													"type": "",
													"value": "27"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "15500:58:1",
												"nodeType": "YulIdentifier",
												"src": "15500:58:1"
											},
											"nativeSrc": "15500:67:1",
											"nodeType": "YulFunctionCall",
											"src": "15500:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "15493:3:1",
												"nodeType": "YulIdentifier",
												"src": "15493:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "15665:3:1",
													"nodeType": "YulIdentifier",
													"src": "15665:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_37325eea18700d90d6e215f9e9b752cd62b8a0490ab2d9176862e482d3be78e3",
												"nativeSrc": "15576:88:1",
												"nodeType": "YulIdentifier",
												"src": "15576:88:1"
											},
											"nativeSrc": "15576:93:1",
											"nodeType": "YulFunctionCall",
											"src": "15576:93:1"
										},
										"nativeSrc": "15576:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "15576:93:1"
									},
									{
										"nativeSrc": "15678:19:1",
										"nodeType": "YulAssignment",
										"src": "15678:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "15689:3:1",
													"nodeType": "YulIdentifier",
													"src": "15689:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "15694:2:1",
													"nodeType": "YulLiteral",
													"src": "15694:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "15685:3:1",
												"nodeType": "YulIdentifier",
												"src": "15685:3:1"
											},
											"nativeSrc": "15685:12:1",
											"nodeType": "YulFunctionCall",
											"src": "15685:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "15678:3:1",
												"nodeType": "YulIdentifier",
												"src": "15678:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_37325eea18700d90d6e215f9e9b752cd62b8a0490ab2d9176862e482d3be78e3_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "15337:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "15471:3:1",
									"nodeType": "YulTypedName",
									"src": "15471:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "15479:3:1",
									"nodeType": "YulTypedName",
									"src": "15479:3:1",
									"type": ""
								}
							],
							"src": "15337:366:1"
						},
						{
							"body": {
								"nativeSrc": "15880:248:1",
								"nodeType": "YulBlock",
								"src": "15880:248:1",
								"statements": [
									{
										"nativeSrc": "15890:26:1",
										"nodeType": "YulAssignment",
										"src": "15890:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "15902:9:1",
													"nodeType": "YulIdentifier",
													"src": "15902:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "15913:2:1",
													"nodeType": "YulLiteral",
													"src": "15913:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "15898:3:1",
												"nodeType": "YulIdentifier",
												"src": "15898:3:1"
											},
											"nativeSrc": "15898:18:1",
											"nodeType": "YulFunctionCall",
											"src": "15898:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "15890:4:1",
												"nodeType": "YulIdentifier",
												"src": "15890:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "15937:9:1",
															"nodeType": "YulIdentifier",
															"src": "15937:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "15948:1:1",
															"nodeType": "YulLiteral",
															"src": "15948:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "15933:3:1",
														"nodeType": "YulIdentifier",
														"src": "15933:3:1"
													},
													"nativeSrc": "15933:17:1",
													"nodeType": "YulFunctionCall",
													"src": "15933:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "15956:4:1",
															"nodeType": "YulIdentifier",
															"src": "15956:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "15962:9:1",
															"nodeType": "YulIdentifier",
															"src": "15962:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "15952:3:1",
														"nodeType": "YulIdentifier",
														"src": "15952:3:1"
													},
													"nativeSrc": "15952:20:1",
													"nodeType": "YulFunctionCall",
													"src": "15952:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "15926:6:1",
												"nodeType": "YulIdentifier",
												"src": "15926:6:1"
											},
											"nativeSrc": "15926:47:1",
											"nodeType": "YulFunctionCall",
											"src": "15926:47:1"
										},
										"nativeSrc": "15926:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "15926:47:1"
									},
									{
										"nativeSrc": "15982:139:1",
										"nodeType": "YulAssignment",
										"src": "15982:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "16116:4:1",
													"nodeType": "YulIdentifier",
													"src": "16116:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_37325eea18700d90d6e215f9e9b752cd62b8a0490ab2d9176862e482d3be78e3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15990:124:1",
												"nodeType": "YulIdentifier",
												"src": "15990:124:1"
											},
											"nativeSrc": "15990:131:1",
											"nodeType": "YulFunctionCall",
											"src": "15990:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "15982:4:1",
												"nodeType": "YulIdentifier",
												"src": "15982:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_37325eea18700d90d6e215f9e9b752cd62b8a0490ab2d9176862e482d3be78e3__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "15709:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "15860:9:1",
									"nodeType": "YulTypedName",
									"src": "15860:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "15875:4:1",
									"nodeType": "YulTypedName",
									"src": "15875:4:1",
									"type": ""
								}
							],
							"src": "15709:419:1"
						},
						{
							"body": {
								"nativeSrc": "16288:288:1",
								"nodeType": "YulBlock",
								"src": "16288:288:1",
								"statements": [
									{
										"nativeSrc": "16298:26:1",
										"nodeType": "YulAssignment",
										"src": "16298:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "16310:9:1",
													"nodeType": "YulIdentifier",
													"src": "16310:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "16321:2:1",
													"nodeType": "YulLiteral",
													"src": "16321:2:1",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "16306:3:1",
												"nodeType": "YulIdentifier",
												"src": "16306:3:1"
											},
											"nativeSrc": "16306:18:1",
											"nodeType": "YulFunctionCall",
											"src": "16306:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "16298:4:1",
												"nodeType": "YulIdentifier",
												"src": "16298:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "16378:6:1",
													"nodeType": "YulIdentifier",
													"src": "16378:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "16391:9:1",
															"nodeType": "YulIdentifier",
															"src": "16391:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "16402:1:1",
															"nodeType": "YulLiteral",
															"src": "16402:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "16387:3:1",
														"nodeType": "YulIdentifier",
														"src": "16387:3:1"
													},
													"nativeSrc": "16387:17:1",
													"nodeType": "YulFunctionCall",
													"src": "16387:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "16334:43:1",
												"nodeType": "YulIdentifier",
												"src": "16334:43:1"
											},
											"nativeSrc": "16334:71:1",
											"nodeType": "YulFunctionCall",
											"src": "16334:71:1"
										},
										"nativeSrc": "16334:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "16334:71:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value1",
													"nativeSrc": "16459:6:1",
													"nodeType": "YulIdentifier",
													"src": "16459:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "16472:9:1",
															"nodeType": "YulIdentifier",
															"src": "16472:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "16483:2:1",
															"nodeType": "YulLiteral",
															"src": "16483:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "16468:3:1",
														"nodeType": "YulIdentifier",
														"src": "16468:3:1"
													},
													"nativeSrc": "16468:18:1",
													"nodeType": "YulFunctionCall",
													"src": "16468:18:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "16415:43:1",
												"nodeType": "YulIdentifier",
												"src": "16415:43:1"
											},
											"nativeSrc": "16415:72:1",
											"nodeType": "YulFunctionCall",
											"src": "16415:72:1"
										},
										"nativeSrc": "16415:72:1",
										"nodeType": "YulExpressionStatement",
										"src": "16415:72:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value2",
													"nativeSrc": "16541:6:1",
													"nodeType": "YulIdentifier",
													"src": "16541:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "16554:9:1",
															"nodeType": "YulIdentifier",
															"src": "16554:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "16565:2:1",
															"nodeType": "YulLiteral",
															"src": "16565:2:1",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "16550:3:1",
														"nodeType": "YulIdentifier",
														"src": "16550:3:1"
													},
													"nativeSrc": "16550:18:1",
													"nodeType": "YulFunctionCall",
													"src": "16550:18:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "16497:43:1",
												"nodeType": "YulIdentifier",
												"src": "16497:43:1"
											},
											"nativeSrc": "16497:72:1",
											"nodeType": "YulFunctionCall",
											"src": "16497:72:1"
										},
										"nativeSrc": "16497:72:1",
										"nodeType": "YulExpressionStatement",
										"src": "16497:72:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
							"nativeSrc": "16134:442:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "16244:9:1",
									"nodeType": "YulTypedName",
									"src": "16244:9:1",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "16256:6:1",
									"nodeType": "YulTypedName",
									"src": "16256:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "16264:6:1",
									"nodeType": "YulTypedName",
									"src": "16264:6:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "16272:6:1",
									"nodeType": "YulTypedName",
									"src": "16272:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "16283:4:1",
									"nodeType": "YulTypedName",
									"src": "16283:4:1",
									"type": ""
								}
							],
							"src": "16134:442:1"
						},
						{
							"body": {
								"nativeSrc": "16688:120:1",
								"nodeType": "YulBlock",
								"src": "16688:120:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "16710:6:1",
															"nodeType": "YulIdentifier",
															"src": "16710:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "16718:1:1",
															"nodeType": "YulLiteral",
															"src": "16718:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "16706:3:1",
														"nodeType": "YulIdentifier",
														"src": "16706:3:1"
													},
													"nativeSrc": "16706:14:1",
													"nodeType": "YulFunctionCall",
													"src": "16706:14:1"
												},
												{
													"hexValue": "5472616e7366657220646172692070656e676972696d206b65206b6f6e747261",
													"kind": "string",
													"nativeSrc": "16722:34:1",
													"nodeType": "YulLiteral",
													"src": "16722:34:1",
													"type": "",
													"value": "Transfer dari pengirim ke kontra"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "16699:6:1",
												"nodeType": "YulIdentifier",
												"src": "16699:6:1"
											},
											"nativeSrc": "16699:58:1",
											"nodeType": "YulFunctionCall",
											"src": "16699:58:1"
										},
										"nativeSrc": "16699:58:1",
										"nodeType": "YulExpressionStatement",
										"src": "16699:58:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "16778:6:1",
															"nodeType": "YulIdentifier",
															"src": "16778:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "16786:2:1",
															"nodeType": "YulLiteral",
															"src": "16786:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "16774:3:1",
														"nodeType": "YulIdentifier",
														"src": "16774:3:1"
													},
													"nativeSrc": "16774:15:1",
													"nodeType": "YulFunctionCall",
													"src": "16774:15:1"
												},
												{
													"hexValue": "6b20676167616c",
													"kind": "string",
													"nativeSrc": "16791:9:1",
													"nodeType": "YulLiteral",
													"src": "16791:9:1",
													"type": "",
													"value": "k gagal"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "16767:6:1",
												"nodeType": "YulIdentifier",
												"src": "16767:6:1"
											},
											"nativeSrc": "16767:34:1",
											"nodeType": "YulFunctionCall",
											"src": "16767:34:1"
										},
										"nativeSrc": "16767:34:1",
										"nodeType": "YulExpressionStatement",
										"src": "16767:34:1"
									}
								]
							},
							"name": "store_literal_in_memory_902ee231d0af0be1c620f5541beca83246591b4518a3e21b50a015102ad3aa6c",
							"nativeSrc": "16582:226:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "16680:6:1",
									"nodeType": "YulTypedName",
									"src": "16680:6:1",
									"type": ""
								}
							],
							"src": "16582:226:1"
						},
						{
							"body": {
								"nativeSrc": "16960:220:1",
								"nodeType": "YulBlock",
								"src": "16960:220:1",
								"statements": [
									{
										"nativeSrc": "16970:74:1",
										"nodeType": "YulAssignment",
										"src": "16970:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "17036:3:1",
													"nodeType": "YulIdentifier",
													"src": "17036:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "17041:2:1",
													"nodeType": "YulLiteral",
													"src": "17041:2:1",
													"type": "",
													"value": "39"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "16977:58:1",
												"nodeType": "YulIdentifier",
												"src": "16977:58:1"
											},
											"nativeSrc": "16977:67:1",
											"nodeType": "YulFunctionCall",
											"src": "16977:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "16970:3:1",
												"nodeType": "YulIdentifier",
												"src": "16970:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "17142:3:1",
													"nodeType": "YulIdentifier",
													"src": "17142:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_902ee231d0af0be1c620f5541beca83246591b4518a3e21b50a015102ad3aa6c",
												"nativeSrc": "17053:88:1",
												"nodeType": "YulIdentifier",
												"src": "17053:88:1"
											},
											"nativeSrc": "17053:93:1",
											"nodeType": "YulFunctionCall",
											"src": "17053:93:1"
										},
										"nativeSrc": "17053:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "17053:93:1"
									},
									{
										"nativeSrc": "17155:19:1",
										"nodeType": "YulAssignment",
										"src": "17155:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "17166:3:1",
													"nodeType": "YulIdentifier",
													"src": "17166:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "17171:2:1",
													"nodeType": "YulLiteral",
													"src": "17171:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "17162:3:1",
												"nodeType": "YulIdentifier",
												"src": "17162:3:1"
											},
											"nativeSrc": "17162:12:1",
											"nodeType": "YulFunctionCall",
											"src": "17162:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "17155:3:1",
												"nodeType": "YulIdentifier",
												"src": "17155:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_902ee231d0af0be1c620f5541beca83246591b4518a3e21b50a015102ad3aa6c_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "16814:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "16948:3:1",
									"nodeType": "YulTypedName",
									"src": "16948:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "16956:3:1",
									"nodeType": "YulTypedName",
									"src": "16956:3:1",
									"type": ""
								}
							],
							"src": "16814:366:1"
						},
						{
							"body": {
								"nativeSrc": "17357:248:1",
								"nodeType": "YulBlock",
								"src": "17357:248:1",
								"statements": [
									{
										"nativeSrc": "17367:26:1",
										"nodeType": "YulAssignment",
										"src": "17367:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "17379:9:1",
													"nodeType": "YulIdentifier",
													"src": "17379:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "17390:2:1",
													"nodeType": "YulLiteral",
													"src": "17390:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "17375:3:1",
												"nodeType": "YulIdentifier",
												"src": "17375:3:1"
											},
											"nativeSrc": "17375:18:1",
											"nodeType": "YulFunctionCall",
											"src": "17375:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "17367:4:1",
												"nodeType": "YulIdentifier",
												"src": "17367:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "17414:9:1",
															"nodeType": "YulIdentifier",
															"src": "17414:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "17425:1:1",
															"nodeType": "YulLiteral",
															"src": "17425:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "17410:3:1",
														"nodeType": "YulIdentifier",
														"src": "17410:3:1"
													},
													"nativeSrc": "17410:17:1",
													"nodeType": "YulFunctionCall",
													"src": "17410:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "17433:4:1",
															"nodeType": "YulIdentifier",
															"src": "17433:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "17439:9:1",
															"nodeType": "YulIdentifier",
															"src": "17439:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "17429:3:1",
														"nodeType": "YulIdentifier",
														"src": "17429:3:1"
													},
													"nativeSrc": "17429:20:1",
													"nodeType": "YulFunctionCall",
													"src": "17429:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "17403:6:1",
												"nodeType": "YulIdentifier",
												"src": "17403:6:1"
											},
											"nativeSrc": "17403:47:1",
											"nodeType": "YulFunctionCall",
											"src": "17403:47:1"
										},
										"nativeSrc": "17403:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "17403:47:1"
									},
									{
										"nativeSrc": "17459:139:1",
										"nodeType": "YulAssignment",
										"src": "17459:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "17593:4:1",
													"nodeType": "YulIdentifier",
													"src": "17593:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_902ee231d0af0be1c620f5541beca83246591b4518a3e21b50a015102ad3aa6c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17467:124:1",
												"nodeType": "YulIdentifier",
												"src": "17467:124:1"
											},
											"nativeSrc": "17467:131:1",
											"nodeType": "YulFunctionCall",
											"src": "17467:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "17459:4:1",
												"nodeType": "YulIdentifier",
												"src": "17459:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_902ee231d0af0be1c620f5541beca83246591b4518a3e21b50a015102ad3aa6c__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "17186:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "17337:9:1",
									"nodeType": "YulTypedName",
									"src": "17337:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "17352:4:1",
									"nodeType": "YulTypedName",
									"src": "17352:4:1",
									"type": ""
								}
							],
							"src": "17186:419:1"
						},
						{
							"body": {
								"nativeSrc": "17717:119:1",
								"nodeType": "YulBlock",
								"src": "17717:119:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "17739:6:1",
															"nodeType": "YulIdentifier",
															"src": "17739:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "17747:1:1",
															"nodeType": "YulLiteral",
															"src": "17747:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "17735:3:1",
														"nodeType": "YulIdentifier",
														"src": "17735:3:1"
													},
													"nativeSrc": "17735:14:1",
													"nodeType": "YulFunctionCall",
													"src": "17735:14:1"
												},
												{
													"hexValue": "416c616d61742070656e6572696d6120746964616b20626f6c656820616c616d",
													"kind": "string",
													"nativeSrc": "17751:34:1",
													"nodeType": "YulLiteral",
													"src": "17751:34:1",
													"type": "",
													"value": "Alamat penerima tidak boleh alam"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "17728:6:1",
												"nodeType": "YulIdentifier",
												"src": "17728:6:1"
											},
											"nativeSrc": "17728:58:1",
											"nodeType": "YulFunctionCall",
											"src": "17728:58:1"
										},
										"nativeSrc": "17728:58:1",
										"nodeType": "YulExpressionStatement",
										"src": "17728:58:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "17807:6:1",
															"nodeType": "YulIdentifier",
															"src": "17807:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "17815:2:1",
															"nodeType": "YulLiteral",
															"src": "17815:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "17803:3:1",
														"nodeType": "YulIdentifier",
														"src": "17803:3:1"
													},
													"nativeSrc": "17803:15:1",
													"nodeType": "YulFunctionCall",
													"src": "17803:15:1"
												},
												{
													"hexValue": "6174206e6f6c",
													"kind": "string",
													"nativeSrc": "17820:8:1",
													"nodeType": "YulLiteral",
													"src": "17820:8:1",
													"type": "",
													"value": "at nol"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "17796:6:1",
												"nodeType": "YulIdentifier",
												"src": "17796:6:1"
											},
											"nativeSrc": "17796:33:1",
											"nodeType": "YulFunctionCall",
											"src": "17796:33:1"
										},
										"nativeSrc": "17796:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "17796:33:1"
									}
								]
							},
							"name": "store_literal_in_memory_d455f6787405982f3f0e9fb87195a04c45f352871379deefb1dc966cb46ec915",
							"nativeSrc": "17611:225:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "17709:6:1",
									"nodeType": "YulTypedName",
									"src": "17709:6:1",
									"type": ""
								}
							],
							"src": "17611:225:1"
						},
						{
							"body": {
								"nativeSrc": "17988:220:1",
								"nodeType": "YulBlock",
								"src": "17988:220:1",
								"statements": [
									{
										"nativeSrc": "17998:74:1",
										"nodeType": "YulAssignment",
										"src": "17998:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "18064:3:1",
													"nodeType": "YulIdentifier",
													"src": "18064:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "18069:2:1",
													"nodeType": "YulLiteral",
													"src": "18069:2:1",
													"type": "",
													"value": "38"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "18005:58:1",
												"nodeType": "YulIdentifier",
												"src": "18005:58:1"
											},
											"nativeSrc": "18005:67:1",
											"nodeType": "YulFunctionCall",
											"src": "18005:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "17998:3:1",
												"nodeType": "YulIdentifier",
												"src": "17998:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "18170:3:1",
													"nodeType": "YulIdentifier",
													"src": "18170:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_d455f6787405982f3f0e9fb87195a04c45f352871379deefb1dc966cb46ec915",
												"nativeSrc": "18081:88:1",
												"nodeType": "YulIdentifier",
												"src": "18081:88:1"
											},
											"nativeSrc": "18081:93:1",
											"nodeType": "YulFunctionCall",
											"src": "18081:93:1"
										},
										"nativeSrc": "18081:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "18081:93:1"
									},
									{
										"nativeSrc": "18183:19:1",
										"nodeType": "YulAssignment",
										"src": "18183:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "18194:3:1",
													"nodeType": "YulIdentifier",
													"src": "18194:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "18199:2:1",
													"nodeType": "YulLiteral",
													"src": "18199:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "18190:3:1",
												"nodeType": "YulIdentifier",
												"src": "18190:3:1"
											},
											"nativeSrc": "18190:12:1",
											"nodeType": "YulFunctionCall",
											"src": "18190:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "18183:3:1",
												"nodeType": "YulIdentifier",
												"src": "18183:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_d455f6787405982f3f0e9fb87195a04c45f352871379deefb1dc966cb46ec915_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "17842:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "17976:3:1",
									"nodeType": "YulTypedName",
									"src": "17976:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "17984:3:1",
									"nodeType": "YulTypedName",
									"src": "17984:3:1",
									"type": ""
								}
							],
							"src": "17842:366:1"
						},
						{
							"body": {
								"nativeSrc": "18385:248:1",
								"nodeType": "YulBlock",
								"src": "18385:248:1",
								"statements": [
									{
										"nativeSrc": "18395:26:1",
										"nodeType": "YulAssignment",
										"src": "18395:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "18407:9:1",
													"nodeType": "YulIdentifier",
													"src": "18407:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "18418:2:1",
													"nodeType": "YulLiteral",
													"src": "18418:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "18403:3:1",
												"nodeType": "YulIdentifier",
												"src": "18403:3:1"
											},
											"nativeSrc": "18403:18:1",
											"nodeType": "YulFunctionCall",
											"src": "18403:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "18395:4:1",
												"nodeType": "YulIdentifier",
												"src": "18395:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "18442:9:1",
															"nodeType": "YulIdentifier",
															"src": "18442:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "18453:1:1",
															"nodeType": "YulLiteral",
															"src": "18453:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "18438:3:1",
														"nodeType": "YulIdentifier",
														"src": "18438:3:1"
													},
													"nativeSrc": "18438:17:1",
													"nodeType": "YulFunctionCall",
													"src": "18438:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "18461:4:1",
															"nodeType": "YulIdentifier",
															"src": "18461:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "18467:9:1",
															"nodeType": "YulIdentifier",
															"src": "18467:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "18457:3:1",
														"nodeType": "YulIdentifier",
														"src": "18457:3:1"
													},
													"nativeSrc": "18457:20:1",
													"nodeType": "YulFunctionCall",
													"src": "18457:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "18431:6:1",
												"nodeType": "YulIdentifier",
												"src": "18431:6:1"
											},
											"nativeSrc": "18431:47:1",
											"nodeType": "YulFunctionCall",
											"src": "18431:47:1"
										},
										"nativeSrc": "18431:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "18431:47:1"
									},
									{
										"nativeSrc": "18487:139:1",
										"nodeType": "YulAssignment",
										"src": "18487:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "18621:4:1",
													"nodeType": "YulIdentifier",
													"src": "18621:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_d455f6787405982f3f0e9fb87195a04c45f352871379deefb1dc966cb46ec915_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18495:124:1",
												"nodeType": "YulIdentifier",
												"src": "18495:124:1"
											},
											"nativeSrc": "18495:131:1",
											"nodeType": "YulFunctionCall",
											"src": "18495:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "18487:4:1",
												"nodeType": "YulIdentifier",
												"src": "18487:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_d455f6787405982f3f0e9fb87195a04c45f352871379deefb1dc966cb46ec915__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "18214:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "18365:9:1",
									"nodeType": "YulTypedName",
									"src": "18365:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "18380:4:1",
									"nodeType": "YulTypedName",
									"src": "18380:4:1",
									"type": ""
								}
							],
							"src": "18214:419:1"
						},
						{
							"body": {
								"nativeSrc": "18793:288:1",
								"nodeType": "YulBlock",
								"src": "18793:288:1",
								"statements": [
									{
										"nativeSrc": "18803:26:1",
										"nodeType": "YulAssignment",
										"src": "18803:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "18815:9:1",
													"nodeType": "YulIdentifier",
													"src": "18815:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "18826:2:1",
													"nodeType": "YulLiteral",
													"src": "18826:2:1",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "18811:3:1",
												"nodeType": "YulIdentifier",
												"src": "18811:3:1"
											},
											"nativeSrc": "18811:18:1",
											"nodeType": "YulFunctionCall",
											"src": "18811:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "18803:4:1",
												"nodeType": "YulIdentifier",
												"src": "18803:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "18883:6:1",
													"nodeType": "YulIdentifier",
													"src": "18883:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "18896:9:1",
															"nodeType": "YulIdentifier",
															"src": "18896:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "18907:1:1",
															"nodeType": "YulLiteral",
															"src": "18907:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "18892:3:1",
														"nodeType": "YulIdentifier",
														"src": "18892:3:1"
													},
													"nativeSrc": "18892:17:1",
													"nodeType": "YulFunctionCall",
													"src": "18892:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "18839:43:1",
												"nodeType": "YulIdentifier",
												"src": "18839:43:1"
											},
											"nativeSrc": "18839:71:1",
											"nodeType": "YulFunctionCall",
											"src": "18839:71:1"
										},
										"nativeSrc": "18839:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "18839:71:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value1",
													"nativeSrc": "18964:6:1",
													"nodeType": "YulIdentifier",
													"src": "18964:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "18977:9:1",
															"nodeType": "YulIdentifier",
															"src": "18977:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "18988:2:1",
															"nodeType": "YulLiteral",
															"src": "18988:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "18973:3:1",
														"nodeType": "YulIdentifier",
														"src": "18973:3:1"
													},
													"nativeSrc": "18973:18:1",
													"nodeType": "YulFunctionCall",
													"src": "18973:18:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "18920:43:1",
												"nodeType": "YulIdentifier",
												"src": "18920:43:1"
											},
											"nativeSrc": "18920:72:1",
											"nodeType": "YulFunctionCall",
											"src": "18920:72:1"
										},
										"nativeSrc": "18920:72:1",
										"nodeType": "YulExpressionStatement",
										"src": "18920:72:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value2",
													"nativeSrc": "19046:6:1",
													"nodeType": "YulIdentifier",
													"src": "19046:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "19059:9:1",
															"nodeType": "YulIdentifier",
															"src": "19059:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "19070:2:1",
															"nodeType": "YulLiteral",
															"src": "19070:2:1",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "19055:3:1",
														"nodeType": "YulIdentifier",
														"src": "19055:3:1"
													},
													"nativeSrc": "19055:18:1",
													"nodeType": "YulFunctionCall",
													"src": "19055:18:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "19002:43:1",
												"nodeType": "YulIdentifier",
												"src": "19002:43:1"
											},
											"nativeSrc": "19002:72:1",
											"nodeType": "YulFunctionCall",
											"src": "19002:72:1"
										},
										"nativeSrc": "19002:72:1",
										"nodeType": "YulExpressionStatement",
										"src": "19002:72:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
							"nativeSrc": "18639:442:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "18749:9:1",
									"nodeType": "YulTypedName",
									"src": "18749:9:1",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "18761:6:1",
									"nodeType": "YulTypedName",
									"src": "18761:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "18769:6:1",
									"nodeType": "YulTypedName",
									"src": "18769:6:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "18777:6:1",
									"nodeType": "YulTypedName",
									"src": "18777:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "18788:4:1",
									"nodeType": "YulTypedName",
									"src": "18788:4:1",
									"type": ""
								}
							],
							"src": "18639:442:1"
						},
						{
							"body": {
								"nativeSrc": "19193:130:1",
								"nodeType": "YulBlock",
								"src": "19193:130:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "19215:6:1",
															"nodeType": "YulIdentifier",
															"src": "19215:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "19223:1:1",
															"nodeType": "YulLiteral",
															"src": "19223:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "19211:3:1",
														"nodeType": "YulIdentifier",
														"src": "19211:3:1"
													},
													"nativeSrc": "19211:14:1",
													"nodeType": "YulFunctionCall",
													"src": "19211:14:1"
												},
												{
													"hexValue": "546f74616c20616d6f756e742068617275732073616d612064656e67616e206e",
													"kind": "string",
													"nativeSrc": "19227:34:1",
													"nodeType": "YulLiteral",
													"src": "19227:34:1",
													"type": "",
													"value": "Total amount harus sama dengan n"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "19204:6:1",
												"nodeType": "YulIdentifier",
												"src": "19204:6:1"
											},
											"nativeSrc": "19204:58:1",
											"nodeType": "YulFunctionCall",
											"src": "19204:58:1"
										},
										"nativeSrc": "19204:58:1",
										"nodeType": "YulExpressionStatement",
										"src": "19204:58:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "19283:6:1",
															"nodeType": "YulIdentifier",
															"src": "19283:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "19291:2:1",
															"nodeType": "YulLiteral",
															"src": "19291:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "19279:3:1",
														"nodeType": "YulIdentifier",
														"src": "19279:3:1"
													},
													"nativeSrc": "19279:15:1",
													"nodeType": "YulFunctionCall",
													"src": "19279:15:1"
												},
												{
													"hexValue": "696c61692079616e672064696b6972696d",
													"kind": "string",
													"nativeSrc": "19296:19:1",
													"nodeType": "YulLiteral",
													"src": "19296:19:1",
													"type": "",
													"value": "ilai yang dikirim"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "19272:6:1",
												"nodeType": "YulIdentifier",
												"src": "19272:6:1"
											},
											"nativeSrc": "19272:44:1",
											"nodeType": "YulFunctionCall",
											"src": "19272:44:1"
										},
										"nativeSrc": "19272:44:1",
										"nodeType": "YulExpressionStatement",
										"src": "19272:44:1"
									}
								]
							},
							"name": "store_literal_in_memory_d33486b4551fd8eb94dfa107a54daeacaaea2f39ae8a9d9bdf9d252e9f596d0b",
							"nativeSrc": "19087:236:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "19185:6:1",
									"nodeType": "YulTypedName",
									"src": "19185:6:1",
									"type": ""
								}
							],
							"src": "19087:236:1"
						},
						{
							"body": {
								"nativeSrc": "19475:220:1",
								"nodeType": "YulBlock",
								"src": "19475:220:1",
								"statements": [
									{
										"nativeSrc": "19485:74:1",
										"nodeType": "YulAssignment",
										"src": "19485:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "19551:3:1",
													"nodeType": "YulIdentifier",
													"src": "19551:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "19556:2:1",
													"nodeType": "YulLiteral",
													"src": "19556:2:1",
													"type": "",
													"value": "49"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "19492:58:1",
												"nodeType": "YulIdentifier",
												"src": "19492:58:1"
											},
											"nativeSrc": "19492:67:1",
											"nodeType": "YulFunctionCall",
											"src": "19492:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "19485:3:1",
												"nodeType": "YulIdentifier",
												"src": "19485:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "19657:3:1",
													"nodeType": "YulIdentifier",
													"src": "19657:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_d33486b4551fd8eb94dfa107a54daeacaaea2f39ae8a9d9bdf9d252e9f596d0b",
												"nativeSrc": "19568:88:1",
												"nodeType": "YulIdentifier",
												"src": "19568:88:1"
											},
											"nativeSrc": "19568:93:1",
											"nodeType": "YulFunctionCall",
											"src": "19568:93:1"
										},
										"nativeSrc": "19568:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "19568:93:1"
									},
									{
										"nativeSrc": "19670:19:1",
										"nodeType": "YulAssignment",
										"src": "19670:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "19681:3:1",
													"nodeType": "YulIdentifier",
													"src": "19681:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "19686:2:1",
													"nodeType": "YulLiteral",
													"src": "19686:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "19677:3:1",
												"nodeType": "YulIdentifier",
												"src": "19677:3:1"
											},
											"nativeSrc": "19677:12:1",
											"nodeType": "YulFunctionCall",
											"src": "19677:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "19670:3:1",
												"nodeType": "YulIdentifier",
												"src": "19670:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_d33486b4551fd8eb94dfa107a54daeacaaea2f39ae8a9d9bdf9d252e9f596d0b_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "19329:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "19463:3:1",
									"nodeType": "YulTypedName",
									"src": "19463:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "19471:3:1",
									"nodeType": "YulTypedName",
									"src": "19471:3:1",
									"type": ""
								}
							],
							"src": "19329:366:1"
						},
						{
							"body": {
								"nativeSrc": "19872:248:1",
								"nodeType": "YulBlock",
								"src": "19872:248:1",
								"statements": [
									{
										"nativeSrc": "19882:26:1",
										"nodeType": "YulAssignment",
										"src": "19882:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "19894:9:1",
													"nodeType": "YulIdentifier",
													"src": "19894:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "19905:2:1",
													"nodeType": "YulLiteral",
													"src": "19905:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "19890:3:1",
												"nodeType": "YulIdentifier",
												"src": "19890:3:1"
											},
											"nativeSrc": "19890:18:1",
											"nodeType": "YulFunctionCall",
											"src": "19890:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "19882:4:1",
												"nodeType": "YulIdentifier",
												"src": "19882:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "19929:9:1",
															"nodeType": "YulIdentifier",
															"src": "19929:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "19940:1:1",
															"nodeType": "YulLiteral",
															"src": "19940:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "19925:3:1",
														"nodeType": "YulIdentifier",
														"src": "19925:3:1"
													},
													"nativeSrc": "19925:17:1",
													"nodeType": "YulFunctionCall",
													"src": "19925:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "19948:4:1",
															"nodeType": "YulIdentifier",
															"src": "19948:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "19954:9:1",
															"nodeType": "YulIdentifier",
															"src": "19954:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "19944:3:1",
														"nodeType": "YulIdentifier",
														"src": "19944:3:1"
													},
													"nativeSrc": "19944:20:1",
													"nodeType": "YulFunctionCall",
													"src": "19944:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "19918:6:1",
												"nodeType": "YulIdentifier",
												"src": "19918:6:1"
											},
											"nativeSrc": "19918:47:1",
											"nodeType": "YulFunctionCall",
											"src": "19918:47:1"
										},
										"nativeSrc": "19918:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "19918:47:1"
									},
									{
										"nativeSrc": "19974:139:1",
										"nodeType": "YulAssignment",
										"src": "19974:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "20108:4:1",
													"nodeType": "YulIdentifier",
													"src": "20108:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_d33486b4551fd8eb94dfa107a54daeacaaea2f39ae8a9d9bdf9d252e9f596d0b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19982:124:1",
												"nodeType": "YulIdentifier",
												"src": "19982:124:1"
											},
											"nativeSrc": "19982:131:1",
											"nodeType": "YulFunctionCall",
											"src": "19982:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "19974:4:1",
												"nodeType": "YulIdentifier",
												"src": "19974:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_d33486b4551fd8eb94dfa107a54daeacaaea2f39ae8a9d9bdf9d252e9f596d0b__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "19701:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "19852:9:1",
									"nodeType": "YulTypedName",
									"src": "19852:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "19867:4:1",
									"nodeType": "YulTypedName",
									"src": "19867:4:1",
									"type": ""
								}
							],
							"src": "19701:419:1"
						},
						{
							"body": {
								"nativeSrc": "20232:58:1",
								"nodeType": "YulBlock",
								"src": "20232:58:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "20254:6:1",
															"nodeType": "YulIdentifier",
															"src": "20254:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "20262:1:1",
															"nodeType": "YulLiteral",
															"src": "20262:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "20250:3:1",
														"nodeType": "YulIdentifier",
														"src": "20250:3:1"
													},
													"nativeSrc": "20250:14:1",
													"nodeType": "YulFunctionCall",
													"src": "20250:14:1"
												},
												{
													"hexValue": "5472616e7366657220676167616c",
													"kind": "string",
													"nativeSrc": "20266:16:1",
													"nodeType": "YulLiteral",
													"src": "20266:16:1",
													"type": "",
													"value": "Transfer gagal"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "20243:6:1",
												"nodeType": "YulIdentifier",
												"src": "20243:6:1"
											},
											"nativeSrc": "20243:40:1",
											"nodeType": "YulFunctionCall",
											"src": "20243:40:1"
										},
										"nativeSrc": "20243:40:1",
										"nodeType": "YulExpressionStatement",
										"src": "20243:40:1"
									}
								]
							},
							"name": "store_literal_in_memory_85607cd5db81cda93c99d375bda136faf426bcc483cf8702458057033eeb03ff",
							"nativeSrc": "20126:164:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "20224:6:1",
									"nodeType": "YulTypedName",
									"src": "20224:6:1",
									"type": ""
								}
							],
							"src": "20126:164:1"
						},
						{
							"body": {
								"nativeSrc": "20442:220:1",
								"nodeType": "YulBlock",
								"src": "20442:220:1",
								"statements": [
									{
										"nativeSrc": "20452:74:1",
										"nodeType": "YulAssignment",
										"src": "20452:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "20518:3:1",
													"nodeType": "YulIdentifier",
													"src": "20518:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "20523:2:1",
													"nodeType": "YulLiteral",
													"src": "20523:2:1",
													"type": "",
													"value": "14"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "20459:58:1",
												"nodeType": "YulIdentifier",
												"src": "20459:58:1"
											},
											"nativeSrc": "20459:67:1",
											"nodeType": "YulFunctionCall",
											"src": "20459:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "20452:3:1",
												"nodeType": "YulIdentifier",
												"src": "20452:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "20624:3:1",
													"nodeType": "YulIdentifier",
													"src": "20624:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_85607cd5db81cda93c99d375bda136faf426bcc483cf8702458057033eeb03ff",
												"nativeSrc": "20535:88:1",
												"nodeType": "YulIdentifier",
												"src": "20535:88:1"
											},
											"nativeSrc": "20535:93:1",
											"nodeType": "YulFunctionCall",
											"src": "20535:93:1"
										},
										"nativeSrc": "20535:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "20535:93:1"
									},
									{
										"nativeSrc": "20637:19:1",
										"nodeType": "YulAssignment",
										"src": "20637:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "20648:3:1",
													"nodeType": "YulIdentifier",
													"src": "20648:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "20653:2:1",
													"nodeType": "YulLiteral",
													"src": "20653:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "20644:3:1",
												"nodeType": "YulIdentifier",
												"src": "20644:3:1"
											},
											"nativeSrc": "20644:12:1",
											"nodeType": "YulFunctionCall",
											"src": "20644:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "20637:3:1",
												"nodeType": "YulIdentifier",
												"src": "20637:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_85607cd5db81cda93c99d375bda136faf426bcc483cf8702458057033eeb03ff_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "20296:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "20430:3:1",
									"nodeType": "YulTypedName",
									"src": "20430:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "20438:3:1",
									"nodeType": "YulTypedName",
									"src": "20438:3:1",
									"type": ""
								}
							],
							"src": "20296:366:1"
						},
						{
							"body": {
								"nativeSrc": "20839:248:1",
								"nodeType": "YulBlock",
								"src": "20839:248:1",
								"statements": [
									{
										"nativeSrc": "20849:26:1",
										"nodeType": "YulAssignment",
										"src": "20849:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "20861:9:1",
													"nodeType": "YulIdentifier",
													"src": "20861:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "20872:2:1",
													"nodeType": "YulLiteral",
													"src": "20872:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "20857:3:1",
												"nodeType": "YulIdentifier",
												"src": "20857:3:1"
											},
											"nativeSrc": "20857:18:1",
											"nodeType": "YulFunctionCall",
											"src": "20857:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "20849:4:1",
												"nodeType": "YulIdentifier",
												"src": "20849:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "20896:9:1",
															"nodeType": "YulIdentifier",
															"src": "20896:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "20907:1:1",
															"nodeType": "YulLiteral",
															"src": "20907:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "20892:3:1",
														"nodeType": "YulIdentifier",
														"src": "20892:3:1"
													},
													"nativeSrc": "20892:17:1",
													"nodeType": "YulFunctionCall",
													"src": "20892:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "20915:4:1",
															"nodeType": "YulIdentifier",
															"src": "20915:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "20921:9:1",
															"nodeType": "YulIdentifier",
															"src": "20921:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "20911:3:1",
														"nodeType": "YulIdentifier",
														"src": "20911:3:1"
													},
													"nativeSrc": "20911:20:1",
													"nodeType": "YulFunctionCall",
													"src": "20911:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "20885:6:1",
												"nodeType": "YulIdentifier",
												"src": "20885:6:1"
											},
											"nativeSrc": "20885:47:1",
											"nodeType": "YulFunctionCall",
											"src": "20885:47:1"
										},
										"nativeSrc": "20885:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "20885:47:1"
									},
									{
										"nativeSrc": "20941:139:1",
										"nodeType": "YulAssignment",
										"src": "20941:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "21075:4:1",
													"nodeType": "YulIdentifier",
													"src": "21075:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_85607cd5db81cda93c99d375bda136faf426bcc483cf8702458057033eeb03ff_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20949:124:1",
												"nodeType": "YulIdentifier",
												"src": "20949:124:1"
											},
											"nativeSrc": "20949:131:1",
											"nodeType": "YulFunctionCall",
											"src": "20949:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "20941:4:1",
												"nodeType": "YulIdentifier",
												"src": "20941:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_85607cd5db81cda93c99d375bda136faf426bcc483cf8702458057033eeb03ff__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "20668:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "20819:9:1",
									"nodeType": "YulTypedName",
									"src": "20819:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "20834:4:1",
									"nodeType": "YulTypedName",
									"src": "20834:4:1",
									"type": ""
								}
							],
							"src": "20668:419:1"
						},
						{
							"body": {
								"nativeSrc": "21199:121:1",
								"nodeType": "YulBlock",
								"src": "21199:121:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "21221:6:1",
															"nodeType": "YulIdentifier",
															"src": "21221:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "21229:1:1",
															"nodeType": "YulLiteral",
															"src": "21229:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "21217:3:1",
														"nodeType": "YulIdentifier",
														"src": "21217:3:1"
													},
													"nativeSrc": "21217:14:1",
													"nodeType": "YulFunctionCall",
													"src": "21217:14:1"
												},
												{
													"hexValue": "416c616d6174206f776e6572206261727520746964616b20626f6c656820616c",
													"kind": "string",
													"nativeSrc": "21233:34:1",
													"nodeType": "YulLiteral",
													"src": "21233:34:1",
													"type": "",
													"value": "Alamat owner baru tidak boleh al"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "21210:6:1",
												"nodeType": "YulIdentifier",
												"src": "21210:6:1"
											},
											"nativeSrc": "21210:58:1",
											"nodeType": "YulFunctionCall",
											"src": "21210:58:1"
										},
										"nativeSrc": "21210:58:1",
										"nodeType": "YulExpressionStatement",
										"src": "21210:58:1"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "21289:6:1",
															"nodeType": "YulIdentifier",
															"src": "21289:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "21297:2:1",
															"nodeType": "YulLiteral",
															"src": "21297:2:1",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "21285:3:1",
														"nodeType": "YulIdentifier",
														"src": "21285:3:1"
													},
													"nativeSrc": "21285:15:1",
													"nodeType": "YulFunctionCall",
													"src": "21285:15:1"
												},
												{
													"hexValue": "616d6174206e6f6c",
													"kind": "string",
													"nativeSrc": "21302:10:1",
													"nodeType": "YulLiteral",
													"src": "21302:10:1",
													"type": "",
													"value": "amat nol"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "21278:6:1",
												"nodeType": "YulIdentifier",
												"src": "21278:6:1"
											},
											"nativeSrc": "21278:35:1",
											"nodeType": "YulFunctionCall",
											"src": "21278:35:1"
										},
										"nativeSrc": "21278:35:1",
										"nodeType": "YulExpressionStatement",
										"src": "21278:35:1"
									}
								]
							},
							"name": "store_literal_in_memory_07a8e39bfd3f01ba00934321cb97f4112b2296efb98e2f7a427e74fe0d1d5d96",
							"nativeSrc": "21093:227:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "21191:6:1",
									"nodeType": "YulTypedName",
									"src": "21191:6:1",
									"type": ""
								}
							],
							"src": "21093:227:1"
						},
						{
							"body": {
								"nativeSrc": "21472:220:1",
								"nodeType": "YulBlock",
								"src": "21472:220:1",
								"statements": [
									{
										"nativeSrc": "21482:74:1",
										"nodeType": "YulAssignment",
										"src": "21482:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "21548:3:1",
													"nodeType": "YulIdentifier",
													"src": "21548:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "21553:2:1",
													"nodeType": "YulLiteral",
													"src": "21553:2:1",
													"type": "",
													"value": "40"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "21489:58:1",
												"nodeType": "YulIdentifier",
												"src": "21489:58:1"
											},
											"nativeSrc": "21489:67:1",
											"nodeType": "YulFunctionCall",
											"src": "21489:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "21482:3:1",
												"nodeType": "YulIdentifier",
												"src": "21482:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "21654:3:1",
													"nodeType": "YulIdentifier",
													"src": "21654:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_07a8e39bfd3f01ba00934321cb97f4112b2296efb98e2f7a427e74fe0d1d5d96",
												"nativeSrc": "21565:88:1",
												"nodeType": "YulIdentifier",
												"src": "21565:88:1"
											},
											"nativeSrc": "21565:93:1",
											"nodeType": "YulFunctionCall",
											"src": "21565:93:1"
										},
										"nativeSrc": "21565:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "21565:93:1"
									},
									{
										"nativeSrc": "21667:19:1",
										"nodeType": "YulAssignment",
										"src": "21667:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "21678:3:1",
													"nodeType": "YulIdentifier",
													"src": "21678:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "21683:2:1",
													"nodeType": "YulLiteral",
													"src": "21683:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "21674:3:1",
												"nodeType": "YulIdentifier",
												"src": "21674:3:1"
											},
											"nativeSrc": "21674:12:1",
											"nodeType": "YulFunctionCall",
											"src": "21674:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "21667:3:1",
												"nodeType": "YulIdentifier",
												"src": "21667:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_07a8e39bfd3f01ba00934321cb97f4112b2296efb98e2f7a427e74fe0d1d5d96_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "21326:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "21460:3:1",
									"nodeType": "YulTypedName",
									"src": "21460:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "21468:3:1",
									"nodeType": "YulTypedName",
									"src": "21468:3:1",
									"type": ""
								}
							],
							"src": "21326:366:1"
						},
						{
							"body": {
								"nativeSrc": "21869:248:1",
								"nodeType": "YulBlock",
								"src": "21869:248:1",
								"statements": [
									{
										"nativeSrc": "21879:26:1",
										"nodeType": "YulAssignment",
										"src": "21879:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "21891:9:1",
													"nodeType": "YulIdentifier",
													"src": "21891:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "21902:2:1",
													"nodeType": "YulLiteral",
													"src": "21902:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "21887:3:1",
												"nodeType": "YulIdentifier",
												"src": "21887:3:1"
											},
											"nativeSrc": "21887:18:1",
											"nodeType": "YulFunctionCall",
											"src": "21887:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "21879:4:1",
												"nodeType": "YulIdentifier",
												"src": "21879:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "21926:9:1",
															"nodeType": "YulIdentifier",
															"src": "21926:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "21937:1:1",
															"nodeType": "YulLiteral",
															"src": "21937:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "21922:3:1",
														"nodeType": "YulIdentifier",
														"src": "21922:3:1"
													},
													"nativeSrc": "21922:17:1",
													"nodeType": "YulFunctionCall",
													"src": "21922:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "21945:4:1",
															"nodeType": "YulIdentifier",
															"src": "21945:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "21951:9:1",
															"nodeType": "YulIdentifier",
															"src": "21951:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "21941:3:1",
														"nodeType": "YulIdentifier",
														"src": "21941:3:1"
													},
													"nativeSrc": "21941:20:1",
													"nodeType": "YulFunctionCall",
													"src": "21941:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "21915:6:1",
												"nodeType": "YulIdentifier",
												"src": "21915:6:1"
											},
											"nativeSrc": "21915:47:1",
											"nodeType": "YulFunctionCall",
											"src": "21915:47:1"
										},
										"nativeSrc": "21915:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "21915:47:1"
									},
									{
										"nativeSrc": "21971:139:1",
										"nodeType": "YulAssignment",
										"src": "21971:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "22105:4:1",
													"nodeType": "YulIdentifier",
													"src": "22105:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_07a8e39bfd3f01ba00934321cb97f4112b2296efb98e2f7a427e74fe0d1d5d96_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21979:124:1",
												"nodeType": "YulIdentifier",
												"src": "21979:124:1"
											},
											"nativeSrc": "21979:131:1",
											"nodeType": "YulFunctionCall",
											"src": "21979:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "21971:4:1",
												"nodeType": "YulIdentifier",
												"src": "21971:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_07a8e39bfd3f01ba00934321cb97f4112b2296efb98e2f7a427e74fe0d1d5d96__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "21698:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "21849:9:1",
									"nodeType": "YulTypedName",
									"src": "21849:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "21864:4:1",
									"nodeType": "YulTypedName",
									"src": "21864:4:1",
									"type": ""
								}
							],
							"src": "21698:419:1"
						}
					]
				},
				"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_eabe5c0aa1a8e5cbf9a86c0c91c48538e31c92d93f25d5c83c5c0a4bca360cd6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Hanya owner yang dapat mengakses\")\n\n        mstore(add(memPtr, 32), \" fungsi ini\")\n\n    }\n\n    function abi_encode_t_stringliteral_eabe5c0aa1a8e5cbf9a86c0c91c48538e31c92d93f25d5c83c5c0a4bca360cd6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_eabe5c0aa1a8e5cbf9a86c0c91c48538e31c92d93f25d5c83c5c0a4bca360cd6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eabe5c0aa1a8e5cbf9a86c0c91c48538e31c92d93f25d5c83c5c0a4bca360cd6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eabe5c0aa1a8e5cbf9a86c0c91c48538e31c92d93f25d5c83c5c0a4bca360cd6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_91466b77ad938e250b04d9a53330fb68a78cb4b3933d2285eb8f594692280890(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer native token gagal\")\n\n    }\n\n    function abi_encode_t_stringliteral_91466b77ad938e250b04d9a53330fb68a78cb4b3933d2285eb8f594692280890_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_91466b77ad938e250b04d9a53330fb68a78cb4b3933d2285eb8f594692280890(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_91466b77ad938e250b04d9a53330fb68a78cb4b3933d2285eb8f594692280890__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_91466b77ad938e250b04d9a53330fb68a78cb4b3933d2285eb8f594692280890_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_5ab4f7fd44e4cc20c76b147a0eb5ab50168bbb2e06bd09098b08d7bc42f072ee(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer token gagal\")\n\n    }\n\n    function abi_encode_t_stringliteral_5ab4f7fd44e4cc20c76b147a0eb5ab50168bbb2e06bd09098b08d7bc42f072ee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_5ab4f7fd44e4cc20c76b147a0eb5ab50168bbb2e06bd09098b08d7bc42f072ee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ab4f7fd44e4cc20c76b147a0eb5ab50168bbb2e06bd09098b08d7bc42f072ee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ab4f7fd44e4cc20c76b147a0eb5ab50168bbb2e06bd09098b08d7bc42f072ee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1f106fa176c9775f0dab0bc2b1454a1eca94b668ddb47dadc23fc910e5d0e3a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Panjang array recipients dan amo\")\n\n        mstore(add(memPtr, 32), \"unts harus sama\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f106fa176c9775f0dab0bc2b1454a1eca94b668ddb47dadc23fc910e5d0e3a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_1f106fa176c9775f0dab0bc2b1454a1eca94b668ddb47dadc23fc910e5d0e3a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f106fa176c9775f0dab0bc2b1454a1eca94b668ddb47dadc23fc910e5d0e3a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f106fa176c9775f0dab0bc2b1454a1eca94b668ddb47dadc23fc910e5d0e3a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cd2b1726f1cf41d7595fc8cf7bb692e2254057a04d640b1c9f9466ee685bf532(memPtr) {\n\n        mstore(add(memPtr, 0), \"Maksimal 2000 alamat penerima da\")\n\n        mstore(add(memPtr, 32), \"lam satu batch\")\n\n    }\n\n    function abi_encode_t_stringliteral_cd2b1726f1cf41d7595fc8cf7bb692e2254057a04d640b1c9f9466ee685bf532_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_cd2b1726f1cf41d7595fc8cf7bb692e2254057a04d640b1c9f9466ee685bf532(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cd2b1726f1cf41d7595fc8cf7bb692e2254057a04d640b1c9f9466ee685bf532__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cd2b1726f1cf41d7595fc8cf7bb692e2254057a04d640b1c9f9466ee685bf532_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_37325eea18700d90d6e215f9e9b752cd62b8a0490ab2d9176862e482d3be78e3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Allowance token tidak cukup\")\n\n    }\n\n    function abi_encode_t_stringliteral_37325eea18700d90d6e215f9e9b752cd62b8a0490ab2d9176862e482d3be78e3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_37325eea18700d90d6e215f9e9b752cd62b8a0490ab2d9176862e482d3be78e3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_37325eea18700d90d6e215f9e9b752cd62b8a0490ab2d9176862e482d3be78e3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_37325eea18700d90d6e215f9e9b752cd62b8a0490ab2d9176862e482d3be78e3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_902ee231d0af0be1c620f5541beca83246591b4518a3e21b50a015102ad3aa6c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer dari pengirim ke kontra\")\n\n        mstore(add(memPtr, 32), \"k gagal\")\n\n    }\n\n    function abi_encode_t_stringliteral_902ee231d0af0be1c620f5541beca83246591b4518a3e21b50a015102ad3aa6c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_902ee231d0af0be1c620f5541beca83246591b4518a3e21b50a015102ad3aa6c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_902ee231d0af0be1c620f5541beca83246591b4518a3e21b50a015102ad3aa6c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_902ee231d0af0be1c620f5541beca83246591b4518a3e21b50a015102ad3aa6c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d455f6787405982f3f0e9fb87195a04c45f352871379deefb1dc966cb46ec915(memPtr) {\n\n        mstore(add(memPtr, 0), \"Alamat penerima tidak boleh alam\")\n\n        mstore(add(memPtr, 32), \"at nol\")\n\n    }\n\n    function abi_encode_t_stringliteral_d455f6787405982f3f0e9fb87195a04c45f352871379deefb1dc966cb46ec915_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_d455f6787405982f3f0e9fb87195a04c45f352871379deefb1dc966cb46ec915(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d455f6787405982f3f0e9fb87195a04c45f352871379deefb1dc966cb46ec915__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d455f6787405982f3f0e9fb87195a04c45f352871379deefb1dc966cb46ec915_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_d33486b4551fd8eb94dfa107a54daeacaaea2f39ae8a9d9bdf9d252e9f596d0b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Total amount harus sama dengan n\")\n\n        mstore(add(memPtr, 32), \"ilai yang dikirim\")\n\n    }\n\n    function abi_encode_t_stringliteral_d33486b4551fd8eb94dfa107a54daeacaaea2f39ae8a9d9bdf9d252e9f596d0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_d33486b4551fd8eb94dfa107a54daeacaaea2f39ae8a9d9bdf9d252e9f596d0b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d33486b4551fd8eb94dfa107a54daeacaaea2f39ae8a9d9bdf9d252e9f596d0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d33486b4551fd8eb94dfa107a54daeacaaea2f39ae8a9d9bdf9d252e9f596d0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_85607cd5db81cda93c99d375bda136faf426bcc483cf8702458057033eeb03ff(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer gagal\")\n\n    }\n\n    function abi_encode_t_stringliteral_85607cd5db81cda93c99d375bda136faf426bcc483cf8702458057033eeb03ff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_85607cd5db81cda93c99d375bda136faf426bcc483cf8702458057033eeb03ff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_85607cd5db81cda93c99d375bda136faf426bcc483cf8702458057033eeb03ff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_85607cd5db81cda93c99d375bda136faf426bcc483cf8702458057033eeb03ff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_07a8e39bfd3f01ba00934321cb97f4112b2296efb98e2f7a427e74fe0d1d5d96(memPtr) {\n\n        mstore(add(memPtr, 0), \"Alamat owner baru tidak boleh al\")\n\n        mstore(add(memPtr, 32), \"amat nol\")\n\n    }\n\n    function abi_encode_t_stringliteral_07a8e39bfd3f01ba00934321cb97f4112b2296efb98e2f7a427e74fe0d1d5d96_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_07a8e39bfd3f01ba00934321cb97f4112b2296efb98e2f7a427e74fe0d1d5d96(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_07a8e39bfd3f01ba00934321cb97f4112b2296efb98e2f7a427e74fe0d1d5d96__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_07a8e39bfd3f01ba00934321cb97f4112b2296efb98e2f7a427e74fe0d1d5d96_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "60806040526004361061004d575f3560e01c8063069c9fae1461005857806320651d5d1461008057806388d695b2146100bc5780638da5cb5b146100ec578063f2fde38b1461011657610054565b3661005457005b5f5ffd5b348015610063575f5ffd5b5061007e60048036038101906100799190610e0b565b61013e565b005b34801561008b575f5ffd5b506100a660048036038101906100a19190610eff565b6103b1565b6040516100b39190610faa565b60405180910390f35b6100d660048036038101906100d19190610fc3565b610888565b6040516100e39190610faa565b60405180910390f35b3480156100f7575f5ffd5b50610100610c14565b60405161010d9190611050565b60405180910390f35b348015610121575f5ffd5b5061013c60048036038101906101379190611069565b610c38565b005b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c390611114565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102cd575f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516102449061115f565b5f6040518083038185875af1925050503d805f811461027e576040519150601f19603f3d011682016040523d82523d5f602084013e610283565b606091505b50509050806102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be906111bd565b60405180910390fd5b506103ad565b5f8290508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b815260040161032c9291906111ea565b6020604051808303815f875af1158015610348573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061036c919061123b565b6103ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a2906112b0565b60405180910390fd5b505b5050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610440576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043790611114565b60405180910390fd5b5f85859050905083839050811461048c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104839061133e565b60405180910390fd5b6107d08111156104d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c8906113cc565b60405180910390fd5b5f8790505f5f90505f5f90505b8381101561051a578686828181106104f9576104f86113ea565b5b905060200201358261050b9190611444565b915080806001019150506104de565b50808273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610557929190611477565b602060405180830381865afa158015610572573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061059691906114b2565b10156105d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ce90611527565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161061493929190611545565b6020604051808303815f875af1158015610630573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610654919061123b565b610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068a906115ea565b60405180910390fd5b5f5f90505b8381101561083c575f73ffffffffffffffffffffffffffffffffffffffff168989838181106106ca576106c96113ea565b5b90506020020160208101906106df9190611069565b73ffffffffffffffffffffffffffffffffffffffff1603610735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072c90611678565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8a8a84818110610764576107636113ea565b5b90506020020160208101906107799190611069565b89898581811061078c5761078b6113ea565b5b905060200201356040518363ffffffff1660e01b81526004016107b09291906111ea565b6020604051808303815f875af11580156107cc573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107f0919061123b565b61082f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610826906112b0565b60405180910390fd5b8080600101915050610698565b507ff16e4d5f82c54d462ffe3d21d1d2a968d757649029d89f7253094312837a6e8b83824260405161087093929190611696565b60405180910390a16001935050505095945050505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e90611114565b60405180910390fd5b5f858590509050838390508114610963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095a9061133e565b60405180910390fd5b6107d08111156109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099f906113cc565b60405180910390fd5b5f5f90505f5f90505b828110156109ed578585828181106109cc576109cb6113ea565b5b90506020020135826109de9190611444565b915080806001019150506109b1565b50803414610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a279061173b565b60405180910390fd5b5f5f5f90505b83811015610bc9575f73ffffffffffffffffffffffffffffffffffffffff16898983818110610a6857610a676113ea565b5b9050602002016020810190610a7d9190611069565b73ffffffffffffffffffffffffffffffffffffffff1603610ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aca90611678565b60405180910390fd5b888882818110610ae657610ae56113ea565b5b9050602002016020810190610afb9190611069565b73ffffffffffffffffffffffffffffffffffffffff16878783818110610b2457610b236113ea565b5b90506020020135604051610b379061115f565b5f6040518083038185875af1925050503d805f8114610b71576040519150601f19603f3d011682016040523d82523d5f602084013e610b76565b606091505b50508092505081610bbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb3906117a3565b60405180910390fd5b8080600101915050610a36565b507ff16e4d5f82c54d462ffe3d21d1d2a968d757649029d89f7253094312837a6e8b838342604051610bfd93929190611696565b60405180910390a160019350505050949350505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbd90611114565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2b90611831565b60405180910390fd5b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610da782610d7e565b9050919050565b610db781610d9d565b8114610dc1575f5ffd5b50565b5f81359050610dd281610dae565b92915050565b5f819050919050565b610dea81610dd8565b8114610df4575f5ffd5b50565b5f81359050610e0581610de1565b92915050565b5f5f60408385031215610e2157610e20610d76565b5b5f610e2e85828601610dc4565b9250506020610e3f85828601610df7565b9150509250929050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610e6a57610e69610e49565b5b8235905067ffffffffffffffff811115610e8757610e86610e4d565b5b602083019150836020820283011115610ea357610ea2610e51565b5b9250929050565b5f5f83601f840112610ebf57610ebe610e49565b5b8235905067ffffffffffffffff811115610edc57610edb610e4d565b5b602083019150836020820283011115610ef857610ef7610e51565b5b9250929050565b5f5f5f5f5f60608688031215610f1857610f17610d76565b5b5f610f2588828901610dc4565b955050602086013567ffffffffffffffff811115610f4657610f45610d7a565b5b610f5288828901610e55565b9450945050604086013567ffffffffffffffff811115610f7557610f74610d7a565b5b610f8188828901610eaa565b92509250509295509295909350565b5f8115159050919050565b610fa481610f90565b82525050565b5f602082019050610fbd5f830184610f9b565b92915050565b5f5f5f5f60408587031215610fdb57610fda610d76565b5b5f85013567ffffffffffffffff811115610ff857610ff7610d7a565b5b61100487828801610e55565b9450945050602085013567ffffffffffffffff81111561102757611026610d7a565b5b61103387828801610eaa565b925092505092959194509250565b61104a81610d9d565b82525050565b5f6020820190506110635f830184611041565b92915050565b5f6020828403121561107e5761107d610d76565b5b5f61108b84828501610dc4565b91505092915050565b5f82825260208201905092915050565b7f48616e7961206f776e65722079616e67206461706174206d656e67616b7365735f8201527f2066756e67736920696e69000000000000000000000000000000000000000000602082015250565b5f6110fe602b83611094565b9150611109826110a4565b604082019050919050565b5f6020820190508181035f83015261112b816110f2565b9050919050565b5f81905092915050565b50565b5f61114a5f83611132565b91506111558261113c565b5f82019050919050565b5f6111698261113f565b9150819050919050565b7f5472616e73666572206e617469766520746f6b656e20676167616c00000000005f82015250565b5f6111a7601b83611094565b91506111b282611173565b602082019050919050565b5f6020820190508181035f8301526111d48161119b565b9050919050565b6111e481610dd8565b82525050565b5f6040820190506111fd5f830185611041565b61120a60208301846111db565b9392505050565b61121a81610f90565b8114611224575f5ffd5b50565b5f8151905061123581611211565b92915050565b5f602082840312156112505761124f610d76565b5b5f61125d84828501611227565b91505092915050565b7f5472616e7366657220746f6b656e20676167616c0000000000000000000000005f82015250565b5f61129a601483611094565b91506112a582611266565b602082019050919050565b5f6020820190508181035f8301526112c78161128e565b9050919050565b7f50616e6a616e6720617272617920726563697069656e74732064616e20616d6f5f8201527f756e74732068617275732073616d610000000000000000000000000000000000602082015250565b5f611328602f83611094565b9150611333826112ce565b604082019050919050565b5f6020820190508181035f8301526113558161131c565b9050919050565b7f4d616b73696d616c203230303020616c616d61742070656e6572696d612064615f8201527f6c616d2073617475206261746368000000000000000000000000000000000000602082015250565b5f6113b6602e83611094565b91506113c18261135c565b604082019050919050565b5f6020820190508181035f8301526113e3816113aa565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61144e82610dd8565b915061145983610dd8565b925082820190508082111561147157611470611417565b5b92915050565b5f60408201905061148a5f830185611041565b6114976020830184611041565b9392505050565b5f815190506114ac81610de1565b92915050565b5f602082840312156114c7576114c6610d76565b5b5f6114d48482850161149e565b91505092915050565b7f416c6c6f77616e636520746f6b656e20746964616b2063756b757000000000005f82015250565b5f611511601b83611094565b915061151c826114dd565b602082019050919050565b5f6020820190508181035f83015261153e81611505565b9050919050565b5f6060820190506115585f830186611041565b6115656020830185611041565b61157260408301846111db565b949350505050565b7f5472616e7366657220646172692070656e676972696d206b65206b6f6e7472615f8201527f6b20676167616c00000000000000000000000000000000000000000000000000602082015250565b5f6115d4602783611094565b91506115df8261157a565b604082019050919050565b5f6020820190508181035f830152611601816115c8565b9050919050565b7f416c616d61742070656e6572696d6120746964616b20626f6c656820616c616d5f8201527f6174206e6f6c0000000000000000000000000000000000000000000000000000602082015250565b5f611662602683611094565b915061166d82611608565b604082019050919050565b5f6020820190508181035f83015261168f81611656565b9050919050565b5f6060820190506116a95f8301866111db565b6116b660208301856111db565b6116c360408301846111db565b949350505050565b7f546f74616c20616d6f756e742068617275732073616d612064656e67616e206e5f8201527f696c61692079616e672064696b6972696d000000000000000000000000000000602082015250565b5f611725603183611094565b9150611730826116cb565b604082019050919050565b5f6020820190508181035f83015261175281611719565b9050919050565b7f5472616e7366657220676167616c0000000000000000000000000000000000005f82015250565b5f61178d600e83611094565b915061179882611759565b602082019050919050565b5f6020820190508181035f8301526117ba81611781565b9050919050565b7f416c616d6174206f776e6572206261727520746964616b20626f6c656820616c5f8201527f616d6174206e6f6c000000000000000000000000000000000000000000000000602082015250565b5f61181b602883611094565b9150611826826117c1565b604082019050919050565b5f6020820190508181035f8301526118488161180f565b905091905056fea2646970667358221220bba330a36b942a63e899e406cf58e1b1a44842999d3841ceab946150588eac9864736f6c634300081c0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69C9FAE EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x20651D5D EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x116 JUMPI PUSH2 0x54 JUMP JUMPDEST CALLDATASIZE PUSH2 0x54 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH2 0x13E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0xEFF JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0xFC3 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH2 0xC38 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3 SWAP1 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2CD JUMPI PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x244 SWAP1 PUSH2 0x115F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x27E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x283 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BE SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x3AD JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32C SWAP3 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x348 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x440 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x437 SWAP1 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 DUP6 SWAP1 POP SWAP1 POP DUP4 DUP4 SWAP1 POP DUP2 EQ PUSH2 0x48C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP1 PUSH2 0x133E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D0 DUP2 GT ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP8 SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x4F9 JUMPI PUSH2 0x4F8 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x50B SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x4DE JUMP JUMPDEST POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x557 SWAP3 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x572 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x14B2 JUMP JUMPDEST LT ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CE SWAP1 PUSH2 0x1527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x630 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x654 SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH2 0x693 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68A SWAP1 PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x83C JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 DUP10 DUP4 DUP2 DUP2 LT PUSH2 0x6CA JUMPI PUSH2 0x6C9 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP1 PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP11 DUP11 DUP5 DUP2 DUP2 LT PUSH2 0x764 JUMPI PUSH2 0x763 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x779 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x78C JUMPI PUSH2 0x78B PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B0 SWAP3 SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x826 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x698 JUMP JUMPDEST POP PUSH32 0xF16E4D5F82C54D462FFE3D21D1D2A968D757649029D89F7253094312837A6E8B DUP4 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x870 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP4 POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90E SWAP1 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 DUP6 SWAP1 POP SWAP1 POP DUP4 DUP4 SWAP1 POP DUP2 EQ PUSH2 0x963 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95A SWAP1 PUSH2 0x133E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D0 DUP2 GT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP1 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9ED JUMPI DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0x9CC JUMPI PUSH2 0x9CB PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x9B1 JUMP JUMPDEST POP DUP1 CALLVALUE EQ PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP1 PUSH2 0x173B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBC9 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 DUP10 DUP4 DUP2 DUP2 LT PUSH2 0xA68 JUMPI PUSH2 0xA67 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA7D SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACA SWAP1 PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 DUP9 DUP3 DUP2 DUP2 LT PUSH2 0xAE6 JUMPI PUSH2 0xAE5 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xAFB SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0xB24 JUMPI PUSH2 0xB23 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0xB37 SWAP1 PUSH2 0x115F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB71 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP DUP1 SWAP3 POP POP DUP2 PUSH2 0xBBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB3 SWAP1 PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA36 JUMP JUMPDEST POP PUSH32 0xF16E4D5F82C54D462FFE3D21D1D2A968D757649029D89F7253094312837A6E8B DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xBFD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBD SWAP1 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2B SWAP1 PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDA7 DUP3 PUSH2 0xD7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB7 DUP2 PUSH2 0xD9D JUMP JUMPDEST DUP2 EQ PUSH2 0xDC1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD2 DUP2 PUSH2 0xDAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDEA DUP2 PUSH2 0xDD8 JUMP JUMPDEST DUP2 EQ PUSH2 0xDF4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE05 DUP2 PUSH2 0xDE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE21 JUMPI PUSH2 0xE20 PUSH2 0xD76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE2E DUP6 DUP3 DUP7 ADD PUSH2 0xDC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE3F DUP6 DUP3 DUP7 ADD PUSH2 0xDF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE6A JUMPI PUSH2 0xE69 PUSH2 0xE49 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE87 JUMPI PUSH2 0xE86 PUSH2 0xE4D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xEA3 JUMPI PUSH2 0xEA2 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xE49 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEDC JUMPI PUSH2 0xEDB PUSH2 0xE4D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xEF8 JUMPI PUSH2 0xEF7 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF18 JUMPI PUSH2 0xF17 PUSH2 0xD76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF25 DUP9 DUP3 DUP10 ADD PUSH2 0xDC4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF46 JUMPI PUSH2 0xF45 PUSH2 0xD7A JUMP JUMPDEST JUMPDEST PUSH2 0xF52 DUP9 DUP3 DUP10 ADD PUSH2 0xE55 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF75 JUMPI PUSH2 0xF74 PUSH2 0xD7A JUMP JUMPDEST JUMPDEST PUSH2 0xF81 DUP9 DUP3 DUP10 ADD PUSH2 0xEAA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA4 DUP2 PUSH2 0xF90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFBD PUSH0 DUP4 ADD DUP5 PUSH2 0xF9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFDB JUMPI PUSH2 0xFDA PUSH2 0xD76 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF8 JUMPI PUSH2 0xFF7 PUSH2 0xD7A JUMP JUMPDEST JUMPDEST PUSH2 0x1004 DUP8 DUP3 DUP9 ADD PUSH2 0xE55 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1027 JUMPI PUSH2 0x1026 PUSH2 0xD7A JUMP JUMPDEST JUMPDEST PUSH2 0x1033 DUP8 DUP3 DUP9 ADD PUSH2 0xEAA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x104A DUP2 PUSH2 0xD9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1063 PUSH0 DUP4 ADD DUP5 PUSH2 0x1041 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107E JUMPI PUSH2 0x107D PUSH2 0xD76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x108B DUP5 DUP3 DUP6 ADD PUSH2 0xDC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x48616E7961206F776E65722079616E67206461706174206D656E67616B736573 PUSH0 DUP3 ADD MSTORE PUSH32 0x2066756E67736920696E69000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10FE PUSH1 0x2B DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x1109 DUP3 PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x112B DUP2 PUSH2 0x10F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x114A PUSH0 DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x1155 DUP3 PUSH2 0x113C JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1169 DUP3 PUSH2 0x113F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206E617469766520746F6B656E20676167616C0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11A7 PUSH1 0x1B DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B2 DUP3 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11D4 DUP2 PUSH2 0x119B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E4 DUP2 PUSH2 0xDD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11FD PUSH0 DUP4 ADD DUP6 PUSH2 0x1041 JUMP JUMPDEST PUSH2 0x120A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11DB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x121A DUP2 PUSH2 0xF90 JUMP JUMPDEST DUP2 EQ PUSH2 0x1224 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1235 DUP2 PUSH2 0x1211 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1250 JUMPI PUSH2 0x124F PUSH2 0xD76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x125D DUP5 DUP3 DUP6 ADD PUSH2 0x1227 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657220746F6B656E20676167616C000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x129A PUSH1 0x14 DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x12A5 DUP3 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12C7 DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50616E6A616E6720617272617920726563697069656E74732064616E20616D6F PUSH0 DUP3 ADD MSTORE PUSH32 0x756E74732068617275732073616D610000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1328 PUSH1 0x2F DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x1333 DUP3 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1355 DUP2 PUSH2 0x131C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D616B73696D616C203230303020616C616D61742070656E6572696D61206461 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C616D2073617475206261746368000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13B6 PUSH1 0x2E DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x13C1 DUP3 PUSH2 0x135C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13E3 DUP2 PUSH2 0x13AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x144E DUP3 PUSH2 0xDD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1459 DUP4 PUSH2 0xDD8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1471 JUMPI PUSH2 0x1470 PUSH2 0x1417 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x148A PUSH0 DUP4 ADD DUP6 PUSH2 0x1041 JUMP JUMPDEST PUSH2 0x1497 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1041 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x14AC DUP2 PUSH2 0xDE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C7 JUMPI PUSH2 0x14C6 PUSH2 0xD76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14D4 DUP5 DUP3 DUP6 ADD PUSH2 0x149E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C6C6F77616E636520746F6B656E20746964616B2063756B75700000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1511 PUSH1 0x1B DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x151C DUP3 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x153E DUP2 PUSH2 0x1505 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1558 PUSH0 DUP4 ADD DUP7 PUSH2 0x1041 JUMP JUMPDEST PUSH2 0x1565 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1041 JUMP JUMPDEST PUSH2 0x1572 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11DB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657220646172692070656E676972696D206B65206B6F6E747261 PUSH0 DUP3 ADD MSTORE PUSH32 0x6B20676167616C00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15D4 PUSH1 0x27 DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x15DF DUP3 PUSH2 0x157A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1601 DUP2 PUSH2 0x15C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C616D61742070656E6572696D6120746964616B20626F6C656820616C616D PUSH0 DUP3 ADD MSTORE PUSH32 0x6174206E6F6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1662 PUSH1 0x26 DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x166D DUP3 PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x168F DUP2 PUSH2 0x1656 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16A9 PUSH0 DUP4 ADD DUP7 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0x16B6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11DB JUMP JUMPDEST PUSH2 0x16C3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11DB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x546F74616C20616D6F756E742068617275732073616D612064656E67616E206E PUSH0 DUP3 ADD MSTORE PUSH32 0x696C61692079616E672064696B6972696D000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1725 PUSH1 0x31 DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x1730 DUP3 PUSH2 0x16CB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1752 DUP2 PUSH2 0x1719 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220676167616C000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x178D PUSH1 0xE DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x1798 DUP3 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17BA DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C616D6174206F776E6572206261727520746964616B20626F6C656820616C PUSH0 DUP3 ADD MSTORE PUSH32 0x616D6174206E6F6C000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x181B PUSH1 0x28 DUP4 PUSH2 0x1094 JUMP JUMPDEST SWAP2 POP PUSH2 0x1826 DUP3 PUSH2 0x17C1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1848 DUP2 PUSH2 0x180F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB LOG3 ADDRESS LOG3 PUSH12 0x942A63E899E406CF58E1B1A4 BASEFEE TIMESTAMP SWAP10 SWAP14 CODESIZE COINBASE 0xCE 0xAB SWAP5 PUSH2 0x5058 DUP15 0xAC SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
		"sourceMap": "219:5654:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5301:485;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3255:1785;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1391:1511;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;249:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;909:183;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5301:485;601:5;;;;;;;;;;;587:19;;:10;:19;;;579:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:1:::1;5396:26;;:12;:26;;::::0;5392:387:::1;;5477:12;5495:5;;;;;;;;;;;:10;;5513:6;5495:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5476:48;;;5547:7;5539:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;5424:174;5392:387;;;5655:12;5677;5655:35;;5713:5;:14;;;5728:5;;;;;;;;;;;5735:6;5713:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5705:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;5604:175;5392:387;5301:485:::0;;:::o;3255:1785::-;3392:4;601:5;;;;;;;;;;;587:19;;:10;:19;;;579:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;3409:23:::1;3435:10;;:17;;3409:43;;3571:7;;:14;;3552:15;:33;3544:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;3759:4;3740:15;:23;;3732:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3883:12;3905;3883:35;;3939:19;3961:1;3939:23;;3978:9;3990:1;3978:13;;3973:98;3997:15;3993:1;:19;3973:98;;;4049:7;;4057:1;4049:10;;;;;;;:::i;:::-;;;;;;;;4034:25;;;;;:::i;:::-;;;4014:3;;;;;;;3973:98;;;;4206:11;4160:5;:15;;;4176:10;4196:4;4160:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;4152:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;4330:5;:18;;;4349:10;4369:4;4376:11;4330:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4322:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;4511:9;4523:1;4511:13;;4506:344;4530:15;4526:1;:19;4506:344;;;4640:1;4615:27;;:10;;4626:1;4615:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:27;;::::0;4607:78:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4772:5;:14;;;4787:10;;4798:1;4787:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;4802:7;;4810:1;4802:10;;;;;;;:::i;:::-;;;;;;;;4772:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4764:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;4547:3;;;;;;;4506:344;;;;4930:70;4954:15;4971:11;4984:15;4930:70;;;;;;;;:::i;:::-;;;;;;;;5028:4;5021:11;;;;;3255:1785:::0;;;;;;;:::o;1391:1511::-;1509:4;601:5;;;;;;;;;;;587:19;;:10;:19;;;579:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1526:23:::1;1552:10;;:17;;1526:43;;1688:7;;:14;;1669:15;:33;1661:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;1876:4;1857:15;:23;;1849:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2016:19;2038:1;2016:23;;2055:9;2067:1;2055:13;;2050:98;2074:15;2070:1;:19;2050:98;;;2126:7;;2134:1;2126:10;;;;;;;:::i;:::-;;;;;;;;2111:25;;;;;:::i;:::-;;;2091:3;;;;;;;2050:98;;;;2179:11;2166:9;:24;2158:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;2318:12;2346:9;2358:1;2346:13;;2341:371;2365:15;2361:1;:19;2341:371;;;2475:1;2450:27;;:10;;2461:1;2450:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:27;;::::0;2442:78:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2610:10;;2621:1;2610:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:18;;2636:7;;2644:1;2636:10;;;;;;;:::i;:::-;;;;;;;;2610:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2596:55;;;;;2674:7;2666:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;2382:3;;;;;;;2341:371;;;;2792:70;2816:15;2833:11;2846:15;2792:70;;;;;;;;:::i;:::-;;;;;;;;2890:4;2883:11;;;;;1391:1511:::0;;;;;;:::o;249:20::-;;;;;;;;;;;;;:::o;909:183::-;601:5;;;;;;;;;;;587:19;;:10;:19;;;579:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1010:1:::1;990:22;;:8;:22;;::::0;982:75:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1076:8;1068:5;;:16;;;;;;;;;;;;;;;;;;909:183:::0;:::o;88:117:1:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:117::-;1786:1;1783;1776:12;1800:117;1909:1;1906;1899:12;1923:117;2032:1;2029;2022:12;2063:568;2136:8;2146:6;2196:3;2189:4;2181:6;2177:17;2173:27;2163:122;;2204:79;;:::i;:::-;2163:122;2317:6;2304:20;2294:30;;2347:18;2339:6;2336:30;2333:117;;;2369:79;;:::i;:::-;2333:117;2483:4;2475:6;2471:17;2459:29;;2537:3;2529:4;2521:6;2517:17;2507:8;2503:32;2500:41;2497:128;;;2544:79;;:::i;:::-;2497:128;2063:568;;;;;:::o;2654:::-;2727:8;2737:6;2787:3;2780:4;2772:6;2768:17;2764:27;2754:122;;2795:79;;:::i;:::-;2754:122;2908:6;2895:20;2885:30;;2938:18;2930:6;2927:30;2924:117;;;2960:79;;:::i;:::-;2924:117;3074:4;3066:6;3062:17;3050:29;;3128:3;3120:4;3112:6;3108:17;3098:8;3094:32;3091:41;3088:128;;;3135:79;;:::i;:::-;3088:128;2654:568;;;;;:::o;3228:1079::-;3359:6;3367;3375;3383;3391;3440:2;3428:9;3419:7;3415:23;3411:32;3408:119;;;3446:79;;:::i;:::-;3408:119;3566:1;3591:53;3636:7;3627:6;3616:9;3612:22;3591:53;:::i;:::-;3581:63;;3537:117;3721:2;3710:9;3706:18;3693:32;3752:18;3744:6;3741:30;3738:117;;;3774:79;;:::i;:::-;3738:117;3887:80;3959:7;3950:6;3939:9;3935:22;3887:80;:::i;:::-;3869:98;;;;3664:313;4044:2;4033:9;4029:18;4016:32;4075:18;4067:6;4064:30;4061:117;;;4097:79;;:::i;:::-;4061:117;4210:80;4282:7;4273:6;4262:9;4258:22;4210:80;:::i;:::-;4192:98;;;;3987:313;3228:1079;;;;;;;;:::o;4313:90::-;4347:7;4390:5;4383:13;4376:21;4365:32;;4313:90;;;:::o;4409:109::-;4490:21;4505:5;4490:21;:::i;:::-;4485:3;4478:34;4409:109;;:::o;4524:210::-;4611:4;4649:2;4638:9;4634:18;4626:26;;4662:65;4724:1;4713:9;4709:17;4700:6;4662:65;:::i;:::-;4524:210;;;;:::o;4740:934::-;4862:6;4870;4878;4886;4935:2;4923:9;4914:7;4910:23;4906:32;4903:119;;;4941:79;;:::i;:::-;4903:119;5089:1;5078:9;5074:17;5061:31;5119:18;5111:6;5108:30;5105:117;;;5141:79;;:::i;:::-;5105:117;5254:80;5326:7;5317:6;5306:9;5302:22;5254:80;:::i;:::-;5236:98;;;;5032:312;5411:2;5400:9;5396:18;5383:32;5442:18;5434:6;5431:30;5428:117;;;5464:79;;:::i;:::-;5428:117;5577:80;5649:7;5640:6;5629:9;5625:22;5577:80;:::i;:::-;5559:98;;;;5354:313;4740:934;;;;;;;:::o;5680:118::-;5767:24;5785:5;5767:24;:::i;:::-;5762:3;5755:37;5680:118;;:::o;5804:222::-;5897:4;5935:2;5924:9;5920:18;5912:26;;5948:71;6016:1;6005:9;6001:17;5992:6;5948:71;:::i;:::-;5804:222;;;;:::o;6032:329::-;6091:6;6140:2;6128:9;6119:7;6115:23;6111:32;6108:119;;;6146:79;;:::i;:::-;6108:119;6266:1;6291:53;6336:7;6327:6;6316:9;6312:22;6291:53;:::i;:::-;6281:63;;6237:117;6032:329;;;;:::o;6367:169::-;6451:11;6485:6;6480:3;6473:19;6525:4;6520:3;6516:14;6501:29;;6367:169;;;;:::o;6542:230::-;6682:34;6678:1;6670:6;6666:14;6659:58;6751:13;6746:2;6738:6;6734:15;6727:38;6542:230;:::o;6778:366::-;6920:3;6941:67;7005:2;7000:3;6941:67;:::i;:::-;6934:74;;7017:93;7106:3;7017:93;:::i;:::-;7135:2;7130:3;7126:12;7119:19;;6778:366;;;:::o;7150:419::-;7316:4;7354:2;7343:9;7339:18;7331:26;;7403:9;7397:4;7393:20;7389:1;7378:9;7374:17;7367:47;7431:131;7557:4;7431:131;:::i;:::-;7423:139;;7150:419;;;:::o;7575:147::-;7676:11;7713:3;7698:18;;7575:147;;;;:::o;7728:114::-;;:::o;7848:398::-;8007:3;8028:83;8109:1;8104:3;8028:83;:::i;:::-;8021:90;;8120:93;8209:3;8120:93;:::i;:::-;8238:1;8233:3;8229:11;8222:18;;7848:398;;;:::o;8252:379::-;8436:3;8458:147;8601:3;8458:147;:::i;:::-;8451:154;;8622:3;8615:10;;8252:379;;;:::o;8637:177::-;8777:29;8773:1;8765:6;8761:14;8754:53;8637:177;:::o;8820:366::-;8962:3;8983:67;9047:2;9042:3;8983:67;:::i;:::-;8976:74;;9059:93;9148:3;9059:93;:::i;:::-;9177:2;9172:3;9168:12;9161:19;;8820:366;;;:::o;9192:419::-;9358:4;9396:2;9385:9;9381:18;9373:26;;9445:9;9439:4;9435:20;9431:1;9420:9;9416:17;9409:47;9473:131;9599:4;9473:131;:::i;:::-;9465:139;;9192:419;;;:::o;9617:118::-;9704:24;9722:5;9704:24;:::i;:::-;9699:3;9692:37;9617:118;;:::o;9741:332::-;9862:4;9900:2;9889:9;9885:18;9877:26;;9913:71;9981:1;9970:9;9966:17;9957:6;9913:71;:::i;:::-;9994:72;10062:2;10051:9;10047:18;10038:6;9994:72;:::i;:::-;9741:332;;;;;:::o;10079:116::-;10149:21;10164:5;10149:21;:::i;:::-;10142:5;10139:32;10129:60;;10185:1;10182;10175:12;10129:60;10079:116;:::o;10201:137::-;10255:5;10286:6;10280:13;10271:22;;10302:30;10326:5;10302:30;:::i;:::-;10201:137;;;;:::o;10344:345::-;10411:6;10460:2;10448:9;10439:7;10435:23;10431:32;10428:119;;;10466:79;;:::i;:::-;10428:119;10586:1;10611:61;10664:7;10655:6;10644:9;10640:22;10611:61;:::i;:::-;10601:71;;10557:125;10344:345;;;;:::o;10695:170::-;10835:22;10831:1;10823:6;10819:14;10812:46;10695:170;:::o;10871:366::-;11013:3;11034:67;11098:2;11093:3;11034:67;:::i;:::-;11027:74;;11110:93;11199:3;11110:93;:::i;:::-;11228:2;11223:3;11219:12;11212:19;;10871:366;;;:::o;11243:419::-;11409:4;11447:2;11436:9;11432:18;11424:26;;11496:9;11490:4;11486:20;11482:1;11471:9;11467:17;11460:47;11524:131;11650:4;11524:131;:::i;:::-;11516:139;;11243:419;;;:::o;11668:234::-;11808:34;11804:1;11796:6;11792:14;11785:58;11877:17;11872:2;11864:6;11860:15;11853:42;11668:234;:::o;11908:366::-;12050:3;12071:67;12135:2;12130:3;12071:67;:::i;:::-;12064:74;;12147:93;12236:3;12147:93;:::i;:::-;12265:2;12260:3;12256:12;12249:19;;11908:366;;;:::o;12280:419::-;12446:4;12484:2;12473:9;12469:18;12461:26;;12533:9;12527:4;12523:20;12519:1;12508:9;12504:17;12497:47;12561:131;12687:4;12561:131;:::i;:::-;12553:139;;12280:419;;;:::o;12705:233::-;12845:34;12841:1;12833:6;12829:14;12822:58;12914:16;12909:2;12901:6;12897:15;12890:41;12705:233;:::o;12944:366::-;13086:3;13107:67;13171:2;13166:3;13107:67;:::i;:::-;13100:74;;13183:93;13272:3;13183:93;:::i;:::-;13301:2;13296:3;13292:12;13285:19;;12944:366;;;:::o;13316:419::-;13482:4;13520:2;13509:9;13505:18;13497:26;;13569:9;13563:4;13559:20;13555:1;13544:9;13540:17;13533:47;13597:131;13723:4;13597:131;:::i;:::-;13589:139;;13316:419;;;:::o;13741:180::-;13789:77;13786:1;13779:88;13886:4;13883:1;13876:15;13910:4;13907:1;13900:15;13927:180;13975:77;13972:1;13965:88;14072:4;14069:1;14062:15;14096:4;14093:1;14086:15;14113:191;14153:3;14172:20;14190:1;14172:20;:::i;:::-;14167:25;;14206:20;14224:1;14206:20;:::i;:::-;14201:25;;14249:1;14246;14242:9;14235:16;;14270:3;14267:1;14264:10;14261:36;;;14277:18;;:::i;:::-;14261:36;14113:191;;;;:::o;14310:332::-;14431:4;14469:2;14458:9;14454:18;14446:26;;14482:71;14550:1;14539:9;14535:17;14526:6;14482:71;:::i;:::-;14563:72;14631:2;14620:9;14616:18;14607:6;14563:72;:::i;:::-;14310:332;;;;;:::o;14648:143::-;14705:5;14736:6;14730:13;14721:22;;14752:33;14779:5;14752:33;:::i;:::-;14648:143;;;;:::o;14797:351::-;14867:6;14916:2;14904:9;14895:7;14891:23;14887:32;14884:119;;;14922:79;;:::i;:::-;14884:119;15042:1;15067:64;15123:7;15114:6;15103:9;15099:22;15067:64;:::i;:::-;15057:74;;15013:128;14797:351;;;;:::o;15154:177::-;15294:29;15290:1;15282:6;15278:14;15271:53;15154:177;:::o;15337:366::-;15479:3;15500:67;15564:2;15559:3;15500:67;:::i;:::-;15493:74;;15576:93;15665:3;15576:93;:::i;:::-;15694:2;15689:3;15685:12;15678:19;;15337:366;;;:::o;15709:419::-;15875:4;15913:2;15902:9;15898:18;15890:26;;15962:9;15956:4;15952:20;15948:1;15937:9;15933:17;15926:47;15990:131;16116:4;15990:131;:::i;:::-;15982:139;;15709:419;;;:::o;16134:442::-;16283:4;16321:2;16310:9;16306:18;16298:26;;16334:71;16402:1;16391:9;16387:17;16378:6;16334:71;:::i;:::-;16415:72;16483:2;16472:9;16468:18;16459:6;16415:72;:::i;:::-;16497;16565:2;16554:9;16550:18;16541:6;16497:72;:::i;:::-;16134:442;;;;;;:::o;16582:226::-;16722:34;16718:1;16710:6;16706:14;16699:58;16791:9;16786:2;16778:6;16774:15;16767:34;16582:226;:::o;16814:366::-;16956:3;16977:67;17041:2;17036:3;16977:67;:::i;:::-;16970:74;;17053:93;17142:3;17053:93;:::i;:::-;17171:2;17166:3;17162:12;17155:19;;16814:366;;;:::o;17186:419::-;17352:4;17390:2;17379:9;17375:18;17367:26;;17439:9;17433:4;17429:20;17425:1;17414:9;17410:17;17403:47;17467:131;17593:4;17467:131;:::i;:::-;17459:139;;17186:419;;;:::o;17611:225::-;17751:34;17747:1;17739:6;17735:14;17728:58;17820:8;17815:2;17807:6;17803:15;17796:33;17611:225;:::o;17842:366::-;17984:3;18005:67;18069:2;18064:3;18005:67;:::i;:::-;17998:74;;18081:93;18170:3;18081:93;:::i;:::-;18199:2;18194:3;18190:12;18183:19;;17842:366;;;:::o;18214:419::-;18380:4;18418:2;18407:9;18403:18;18395:26;;18467:9;18461:4;18457:20;18453:1;18442:9;18438:17;18431:47;18495:131;18621:4;18495:131;:::i;:::-;18487:139;;18214:419;;;:::o;18639:442::-;18788:4;18826:2;18815:9;18811:18;18803:26;;18839:71;18907:1;18896:9;18892:17;18883:6;18839:71;:::i;:::-;18920:72;18988:2;18977:9;18973:18;18964:6;18920:72;:::i;:::-;19002;19070:2;19059:9;19055:18;19046:6;19002:72;:::i;:::-;18639:442;;;;;;:::o;19087:236::-;19227:34;19223:1;19215:6;19211:14;19204:58;19296:19;19291:2;19283:6;19279:15;19272:44;19087:236;:::o;19329:366::-;19471:3;19492:67;19556:2;19551:3;19492:67;:::i;:::-;19485:74;;19568:93;19657:3;19568:93;:::i;:::-;19686:2;19681:3;19677:12;19670:19;;19329:366;;;:::o;19701:419::-;19867:4;19905:2;19894:9;19890:18;19882:26;;19954:9;19948:4;19944:20;19940:1;19929:9;19925:17;19918:47;19982:131;20108:4;19982:131;:::i;:::-;19974:139;;19701:419;;;:::o;20126:164::-;20266:16;20262:1;20254:6;20250:14;20243:40;20126:164;:::o;20296:366::-;20438:3;20459:67;20523:2;20518:3;20459:67;:::i;:::-;20452:74;;20535:93;20624:3;20535:93;:::i;:::-;20653:2;20648:3;20644:12;20637:19;;20296:366;;;:::o;20668:419::-;20834:4;20872:2;20861:9;20857:18;20849:26;;20921:9;20915:4;20911:20;20907:1;20896:9;20892:17;20885:47;20949:131;21075:4;20949:131;:::i;:::-;20941:139;;20668:419;;;:::o;21093:227::-;21233:34;21229:1;21221:6;21217:14;21210:58;21302:10;21297:2;21289:6;21285:15;21278:35;21093:227;:::o;21326:366::-;21468:3;21489:67;21553:2;21548:3;21489:67;:::i;:::-;21482:74;;21565:93;21654:3;21565:93;:::i;:::-;21683:2;21678:3;21674:12;21667:19;;21326:366;;;:::o;21698:419::-;21864:4;21902:2;21891:9;21887:18;21879:26;;21951:9;21945:4;21941:20;21937:1;21926:9;21922:17;21915:47;21979:131;22105:4;21979:131;:::i;:::-;21971:139;;21698:419;;;:::o"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract BatchTransfer {\\r\\n  ...\n  PUSH 40\t\t\tcontract BatchTransfer {\\r\\n  ...\n  MSTORE \t\t\tcontract BatchTransfer {\\r\\n  ...\n  CALLVALUE \t\t\tconstructor() {\\r\\n        own...\n  DUP1 \t\t\tconstructor() {\\r\\n        own...\n  ISZERO \t\t\tconstructor() {\\r\\n        own...\n  PUSH [tag] 1\t\t\tconstructor() {\\r\\n        own...\n  JUMPI \t\t\tconstructor() {\\r\\n        own...\n  PUSH 0\t\t\tconstructor() {\\r\\n        own...\n  PUSH 0\t\t\tconstructor() {\\r\\n        own...\n  REVERT \t\t\tconstructor() {\\r\\n        own...\ntag 1\t\t\tconstructor() {\\r\\n        own...\n  JUMPDEST \t\t\tconstructor() {\\r\\n        own...\n  POP \t\t\tconstructor() {\\r\\n        own...\n  CALLER \t\t\tmsg.sender\n  PUSH 0\t\t\towner\n  PUSH 0\t\t\towner\n  PUSH 100\t\t\towner = msg.sender\n  EXP \t\t\towner = msg.sender\n  DUP2 \t\t\towner = msg.sender\n  SLOAD \t\t\towner = msg.sender\n  DUP2 \t\t\towner = msg.sender\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner = msg.sender\n  MUL \t\t\towner = msg.sender\n  NOT \t\t\towner = msg.sender\n  AND \t\t\towner = msg.sender\n  SWAP1 \t\t\towner = msg.sender\n  DUP4 \t\t\towner = msg.sender\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner = msg.sender\n  AND \t\t\towner = msg.sender\n  MUL \t\t\towner = msg.sender\n  OR \t\t\towner = msg.sender\n  SWAP1 \t\t\towner = msg.sender\n  SSTORE \t\t\towner = msg.sender\n  POP \t\t\towner = msg.sender\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract BatchTransfer {\\r\\n  ...\n  DUP1 \t\t\tcontract BatchTransfer {\\r\\n  ...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract BatchTransfer {\\r\\n  ...\n  PUSH 0\t\t\tcontract BatchTransfer {\\r\\n  ...\n  CODECOPY \t\t\tcontract BatchTransfer {\\r\\n  ...\n  PUSH 0\t\t\tcontract BatchTransfer {\\r\\n  ...\n  RETURN \t\t\tcontract BatchTransfer {\\r\\n  ...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH 40\t\t\tcontract BatchTransfer {\\r\\n  ...\n      MSTORE \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH 4\t\t\tcontract BatchTransfer {\\r\\n  ...\n      CALLDATASIZE \t\t\tcontract BatchTransfer {\\r\\n  ...\n      LT \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH [tag] 1\t\t\tcontract BatchTransfer {\\r\\n  ...\n      JUMPI \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH 0\t\t\tcontract BatchTransfer {\\r\\n  ...\n      CALLDATALOAD \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH E0\t\t\tcontract BatchTransfer {\\r\\n  ...\n      SHR \t\t\tcontract BatchTransfer {\\r\\n  ...\n      DUP1 \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH 69C9FAE\t\t\tcontract BatchTransfer {\\r\\n  ...\n      EQ \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH [tag] 3\t\t\tcontract BatchTransfer {\\r\\n  ...\n      JUMPI \t\t\tcontract BatchTransfer {\\r\\n  ...\n      DUP1 \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH 20651D5D\t\t\tcontract BatchTransfer {\\r\\n  ...\n      EQ \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH [tag] 4\t\t\tcontract BatchTransfer {\\r\\n  ...\n      JUMPI \t\t\tcontract BatchTransfer {\\r\\n  ...\n      DUP1 \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH 88D695B2\t\t\tcontract BatchTransfer {\\r\\n  ...\n      EQ \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH [tag] 5\t\t\tcontract BatchTransfer {\\r\\n  ...\n      JUMPI \t\t\tcontract BatchTransfer {\\r\\n  ...\n      DUP1 \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH 8DA5CB5B\t\t\tcontract BatchTransfer {\\r\\n  ...\n      EQ \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH [tag] 6\t\t\tcontract BatchTransfer {\\r\\n  ...\n      JUMPI \t\t\tcontract BatchTransfer {\\r\\n  ...\n      DUP1 \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH F2FDE38B\t\t\tcontract BatchTransfer {\\r\\n  ...\n      EQ \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH [tag] 7\t\t\tcontract BatchTransfer {\\r\\n  ...\n      JUMPI \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH [tag] 2\t\t\tcontract BatchTransfer {\\r\\n  ...\n      JUMP \t\t\tcontract BatchTransfer {\\r\\n  ...\n    tag 1\t\t\tcontract BatchTransfer {\\r\\n  ...\n      JUMPDEST \t\t\tcontract BatchTransfer {\\r\\n  ...\n      CALLDATASIZE \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH [tag] 2\t\t\tcontract BatchTransfer {\\r\\n  ...\n      JUMPI \t\t\tcontract BatchTransfer {\\r\\n  ...\n      STOP \t\t\tcontract BatchTransfer {\\r\\n  ...\n    tag 2\t\t\tcontract BatchTransfer {\\r\\n  ...\n      JUMPDEST \t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH 0\t\t\tcontract BatchTransfer {\\r\\n  ...\n      PUSH 0\t\t\tcontract BatchTransfer {\\r\\n  ...\n      REVERT \t\t\tcontract BatchTransfer {\\r\\n  ...\n    tag 3\t\t\tfunction recoverTokens(address...\n      JUMPDEST \t\t\tfunction recoverTokens(address...\n      CALLVALUE \t\t\tfunction recoverTokens(address...\n      DUP1 \t\t\tfunction recoverTokens(address...\n      ISZERO \t\t\tfunction recoverTokens(address...\n      PUSH [tag] 10\t\t\tfunction recoverTokens(address...\n      JUMPI \t\t\tfunction recoverTokens(address...\n      PUSH 0\t\t\tfunction recoverTokens(address...\n      PUSH 0\t\t\tfunction recoverTokens(address...\n      REVERT \t\t\tfunction recoverTokens(address...\n    tag 10\t\t\tfunction recoverTokens(address...\n      JUMPDEST \t\t\tfunction recoverTokens(address...\n      POP \t\t\tfunction recoverTokens(address...\n      PUSH [tag] 11\t\t\tfunction recoverTokens(address...\n      PUSH 4\t\t\tfunction recoverTokens(address...\n      DUP1 \t\t\tfunction recoverTokens(address...\n      CALLDATASIZE \t\t\tfunction recoverTokens(address...\n      SUB \t\t\tfunction recoverTokens(address...\n      DUP2 \t\t\tfunction recoverTokens(address...\n      ADD \t\t\tfunction recoverTokens(address...\n      SWAP1 \t\t\tfunction recoverTokens(address...\n      PUSH [tag] 12\t\t\tfunction recoverTokens(address...\n      SWAP2 \t\t\tfunction recoverTokens(address...\n      SWAP1 \t\t\tfunction recoverTokens(address...\n      PUSH [tag] 13\t\t\tfunction recoverTokens(address...\n      JUMP \t\t\tfunction recoverTokens(address...\n    tag 12\t\t\tfunction recoverTokens(address...\n      JUMPDEST \t\t\tfunction recoverTokens(address...\n      PUSH [tag] 14\t\t\tfunction recoverTokens(address...\n      JUMP \t\t\tfunction recoverTokens(address...\n    tag 11\t\t\tfunction recoverTokens(address...\n      JUMPDEST \t\t\tfunction recoverTokens(address...\n      STOP \t\t\tfunction recoverTokens(address...\n    tag 4\t\t\tfunction batchTransferToken(ad...\n      JUMPDEST \t\t\tfunction batchTransferToken(ad...\n      CALLVALUE \t\t\tfunction batchTransferToken(ad...\n      DUP1 \t\t\tfunction batchTransferToken(ad...\n      ISZERO \t\t\tfunction batchTransferToken(ad...\n      PUSH [tag] 15\t\t\tfunction batchTransferToken(ad...\n      JUMPI \t\t\tfunction batchTransferToken(ad...\n      PUSH 0\t\t\tfunction batchTransferToken(ad...\n      PUSH 0\t\t\tfunction batchTransferToken(ad...\n      REVERT \t\t\tfunction batchTransferToken(ad...\n    tag 15\t\t\tfunction batchTransferToken(ad...\n      JUMPDEST \t\t\tfunction batchTransferToken(ad...\n      POP \t\t\tfunction batchTransferToken(ad...\n      PUSH [tag] 16\t\t\tfunction batchTransferToken(ad...\n      PUSH 4\t\t\tfunction batchTransferToken(ad...\n      DUP1 \t\t\tfunction batchTransferToken(ad...\n      CALLDATASIZE \t\t\tfunction batchTransferToken(ad...\n      SUB \t\t\tfunction batchTransferToken(ad...\n      DUP2 \t\t\tfunction batchTransferToken(ad...\n      ADD \t\t\tfunction batchTransferToken(ad...\n      SWAP1 \t\t\tfunction batchTransferToken(ad...\n      PUSH [tag] 17\t\t\tfunction batchTransferToken(ad...\n      SWAP2 \t\t\tfunction batchTransferToken(ad...\n      SWAP1 \t\t\tfunction batchTransferToken(ad...\n      PUSH [tag] 18\t\t\tfunction batchTransferToken(ad...\n      JUMP \t\t\tfunction batchTransferToken(ad...\n    tag 17\t\t\tfunction batchTransferToken(ad...\n      JUMPDEST \t\t\tfunction batchTransferToken(ad...\n      PUSH [tag] 19\t\t\tfunction batchTransferToken(ad...\n      JUMP \t\t\tfunction batchTransferToken(ad...\n    tag 16\t\t\tfunction batchTransferToken(ad...\n      JUMPDEST \t\t\tfunction batchTransferToken(ad...\n      PUSH 40\t\t\tfunction batchTransferToken(ad...\n      MLOAD \t\t\tfunction batchTransferToken(ad...\n      PUSH [tag] 20\t\t\tfunction batchTransferToken(ad...\n      SWAP2 \t\t\tfunction batchTransferToken(ad...\n      SWAP1 \t\t\tfunction batchTransferToken(ad...\n      PUSH [tag] 21\t\t\tfunction batchTransferToken(ad...\n      JUMP \t\t\tfunction batchTransferToken(ad...\n    tag 20\t\t\tfunction batchTransferToken(ad...\n      JUMPDEST \t\t\tfunction batchTransferToken(ad...\n      PUSH 40\t\t\tfunction batchTransferToken(ad...\n      MLOAD \t\t\tfunction batchTransferToken(ad...\n      DUP1 \t\t\tfunction batchTransferToken(ad...\n      SWAP2 \t\t\tfunction batchTransferToken(ad...\n      SUB \t\t\tfunction batchTransferToken(ad...\n      SWAP1 \t\t\tfunction batchTransferToken(ad...\n      RETURN \t\t\tfunction batchTransferToken(ad...\n    tag 5\t\t\tfunction batchTransfer(address...\n      JUMPDEST \t\t\tfunction batchTransfer(address...\n      PUSH [tag] 22\t\t\tfunction batchTransfer(address...\n      PUSH 4\t\t\tfunction batchTransfer(address...\n      DUP1 \t\t\tfunction batchTransfer(address...\n      CALLDATASIZE \t\t\tfunction batchTransfer(address...\n      SUB \t\t\tfunction batchTransfer(address...\n      DUP2 \t\t\tfunction batchTransfer(address...\n      ADD \t\t\tfunction batchTransfer(address...\n      SWAP1 \t\t\tfunction batchTransfer(address...\n      PUSH [tag] 23\t\t\tfunction batchTransfer(address...\n      SWAP2 \t\t\tfunction batchTransfer(address...\n      SWAP1 \t\t\tfunction batchTransfer(address...\n      PUSH [tag] 24\t\t\tfunction batchTransfer(address...\n      JUMP \t\t\tfunction batchTransfer(address...\n    tag 23\t\t\tfunction batchTransfer(address...\n      JUMPDEST \t\t\tfunction batchTransfer(address...\n      PUSH [tag] 25\t\t\tfunction batchTransfer(address...\n      JUMP \t\t\tfunction batchTransfer(address...\n    tag 22\t\t\tfunction batchTransfer(address...\n      JUMPDEST \t\t\tfunction batchTransfer(address...\n      PUSH 40\t\t\tfunction batchTransfer(address...\n      MLOAD \t\t\tfunction batchTransfer(address...\n      PUSH [tag] 26\t\t\tfunction batchTransfer(address...\n      SWAP2 \t\t\tfunction batchTransfer(address...\n      SWAP1 \t\t\tfunction batchTransfer(address...\n      PUSH [tag] 21\t\t\tfunction batchTransfer(address...\n      JUMP \t\t\tfunction batchTransfer(address...\n    tag 26\t\t\tfunction batchTransfer(address...\n      JUMPDEST \t\t\tfunction batchTransfer(address...\n      PUSH 40\t\t\tfunction batchTransfer(address...\n      MLOAD \t\t\tfunction batchTransfer(address...\n      DUP1 \t\t\tfunction batchTransfer(address...\n      SWAP2 \t\t\tfunction batchTransfer(address...\n      SUB \t\t\tfunction batchTransfer(address...\n      SWAP1 \t\t\tfunction batchTransfer(address...\n      RETURN \t\t\tfunction batchTransfer(address...\n    tag 6\t\t\taddress public owner\n      JUMPDEST \t\t\taddress public owner\n      CALLVALUE \t\t\taddress public owner\n      DUP1 \t\t\taddress public owner\n      ISZERO \t\t\taddress public owner\n      PUSH [tag] 27\t\t\taddress public owner\n      JUMPI \t\t\taddress public owner\n      PUSH 0\t\t\taddress public owner\n      PUSH 0\t\t\taddress public owner\n      REVERT \t\t\taddress public owner\n    tag 27\t\t\taddress public owner\n      JUMPDEST \t\t\taddress public owner\n      POP \t\t\taddress public owner\n      PUSH [tag] 28\t\t\taddress public owner\n      PUSH [tag] 29\t\t\taddress public owner\n      JUMP \t\t\taddress public owner\n    tag 28\t\t\taddress public owner\n      JUMPDEST \t\t\taddress public owner\n      PUSH 40\t\t\taddress public owner\n      MLOAD \t\t\taddress public owner\n      PUSH [tag] 30\t\t\taddress public owner\n      SWAP2 \t\t\taddress public owner\n      SWAP1 \t\t\taddress public owner\n      PUSH [tag] 31\t\t\taddress public owner\n      JUMP \t\t\taddress public owner\n    tag 30\t\t\taddress public owner\n      JUMPDEST \t\t\taddress public owner\n      PUSH 40\t\t\taddress public owner\n      MLOAD \t\t\taddress public owner\n      DUP1 \t\t\taddress public owner\n      SWAP2 \t\t\taddress public owner\n      SUB \t\t\taddress public owner\n      SWAP1 \t\t\taddress public owner\n      RETURN \t\t\taddress public owner\n    tag 7\t\t\tfunction transferOwnership(add...\n      JUMPDEST \t\t\tfunction transferOwnership(add...\n      CALLVALUE \t\t\tfunction transferOwnership(add...\n      DUP1 \t\t\tfunction transferOwnership(add...\n      ISZERO \t\t\tfunction transferOwnership(add...\n      PUSH [tag] 32\t\t\tfunction transferOwnership(add...\n      JUMPI \t\t\tfunction transferOwnership(add...\n      PUSH 0\t\t\tfunction transferOwnership(add...\n      PUSH 0\t\t\tfunction transferOwnership(add...\n      REVERT \t\t\tfunction transferOwnership(add...\n    tag 32\t\t\tfunction transferOwnership(add...\n      JUMPDEST \t\t\tfunction transferOwnership(add...\n      POP \t\t\tfunction transferOwnership(add...\n      PUSH [tag] 33\t\t\tfunction transferOwnership(add...\n      PUSH 4\t\t\tfunction transferOwnership(add...\n      DUP1 \t\t\tfunction transferOwnership(add...\n      CALLDATASIZE \t\t\tfunction transferOwnership(add...\n      SUB \t\t\tfunction transferOwnership(add...\n      DUP2 \t\t\tfunction transferOwnership(add...\n      ADD \t\t\tfunction transferOwnership(add...\n      SWAP1 \t\t\tfunction transferOwnership(add...\n      PUSH [tag] 34\t\t\tfunction transferOwnership(add...\n      SWAP2 \t\t\tfunction transferOwnership(add...\n      SWAP1 \t\t\tfunction transferOwnership(add...\n      PUSH [tag] 35\t\t\tfunction transferOwnership(add...\n      JUMP \t\t\tfunction transferOwnership(add...\n    tag 34\t\t\tfunction transferOwnership(add...\n      JUMPDEST \t\t\tfunction transferOwnership(add...\n      PUSH [tag] 36\t\t\tfunction transferOwnership(add...\n      JUMP \t\t\tfunction transferOwnership(add...\n    tag 33\t\t\tfunction transferOwnership(add...\n      JUMPDEST \t\t\tfunction transferOwnership(add...\n      STOP \t\t\tfunction transferOwnership(add...\n    tag 14\t\t\tfunction recoverTokens(address...\n      JUMPDEST \t\t\tfunction recoverTokens(address...\n      PUSH 0\t\t\towner\n      PUSH 0\t\t\towner\n      SWAP1 \t\t\towner\n      SLOAD \t\t\towner\n      SWAP1 \t\t\towner\n      PUSH 100\t\t\towner\n      EXP \t\t\towner\n      SWAP1 \t\t\towner\n      DIV \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner\n      AND \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tmsg.sender == owner\n      AND \t\t\tmsg.sender == owner\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tmsg.sender == owner\n      AND \t\t\tmsg.sender == owner\n      EQ \t\t\tmsg.sender == owner\n      PUSH [tag] 38\t\t\trequire(msg.sender == owner, \"...\n      JUMPI \t\t\trequire(msg.sender == owner, \"...\n      PUSH 40\t\t\trequire(msg.sender == owner, \"...\n      MLOAD \t\t\trequire(msg.sender == owner, \"...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(msg.sender == owner, \"...\n      DUP2 \t\t\trequire(msg.sender == owner, \"...\n      MSTORE \t\t\trequire(msg.sender == owner, \"...\n      PUSH 4\t\t\trequire(msg.sender == owner, \"...\n      ADD \t\t\trequire(msg.sender == owner, \"...\n      PUSH [tag] 39\t\t\trequire(msg.sender == owner, \"...\n      SWAP1 \t\t\trequire(msg.sender == owner, \"...\n      PUSH [tag] 40\t\t\trequire(msg.sender == owner, \"...\n      JUMP \t\t\trequire(msg.sender == owner, \"...\n    tag 39\t\t\trequire(msg.sender == owner, \"...\n      JUMPDEST \t\t\trequire(msg.sender == owner, \"...\n      PUSH 40\t\t\trequire(msg.sender == owner, \"...\n      MLOAD \t\t\trequire(msg.sender == owner, \"...\n      DUP1 \t\t\trequire(msg.sender == owner, \"...\n      SWAP2 \t\t\trequire(msg.sender == owner, \"...\n      SUB \t\t\trequire(msg.sender == owner, \"...\n      SWAP1 \t\t\trequire(msg.sender == owner, \"...\n      REVERT \t\t\trequire(msg.sender == owner, \"...\n    tag 38\t\t\trequire(msg.sender == owner, \"...\n      JUMPDEST \t\t\trequire(msg.sender == owner, \"...\n      PUSH 0\t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ttokenAddress == address(0)\n      AND \t\t\ttokenAddress == address(0)\n      DUP3 \t\t\ttokenAddress\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ttokenAddress == address(0)\n      AND \t\t\ttokenAddress == address(0)\n      SUB \t\t\ttokenAddress == address(0)\n      PUSH [tag] 42\t\t\tif (tokenAddress == address(0)...\n      JUMPI \t\t\tif (tokenAddress == address(0)...\n      PUSH 0\t\t\tbool success\n      PUSH 0\t\t\towner\n      PUSH 0\t\t\towner\n      SWAP1 \t\t\towner\n      SLOAD \t\t\towner\n      SWAP1 \t\t\towner\n      PUSH 100\t\t\towner\n      EXP \t\t\towner\n      SWAP1 \t\t\towner\n      DIV \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner\n      AND \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner.call\n      AND \t\t\towner.call\n      DUP3 \t\t\tamount\n      PUSH 40\t\t\towner.call{value: amount}(\"\")\n      MLOAD \t\t\towner.call{value: amount}(\"\")\n      PUSH [tag] 43\t\t\towner.call{value: amount}(\"\")\n      SWAP1 \t\t\towner.call{value: amount}(\"\")\n      PUSH [tag] 44\t\t\towner.call{value: amount}(\"\")\n      JUMP \t\t\towner.call{value: amount}(\"\")\n    tag 43\t\t\towner.call{value: amount}(\"\")\n      JUMPDEST \t\t\towner.call{value: amount}(\"\")\n      PUSH 0\t\t\towner.call{value: amount}(\"\")\n      PUSH 40\t\t\towner.call{value: amount}(\"\")\n      MLOAD \t\t\towner.call{value: amount}(\"\")\n      DUP1 \t\t\towner.call{value: amount}(\"\")\n      DUP4 \t\t\towner.call{value: amount}(\"\")\n      SUB \t\t\towner.call{value: amount}(\"\")\n      DUP2 \t\t\towner.call{value: amount}(\"\")\n      DUP6 \t\t\towner.call{value: amount}(\"\")\n      DUP8 \t\t\towner.call{value: amount}(\"\")\n      GAS \t\t\towner.call{value: amount}(\"\")\n      CALL \t\t\towner.call{value: amount}(\"\")\n      SWAP3 \t\t\towner.call{value: amount}(\"\")\n      POP \t\t\towner.call{value: amount}(\"\")\n      POP \t\t\towner.call{value: amount}(\"\")\n      POP \t\t\towner.call{value: amount}(\"\")\n      RETURNDATASIZE \t\t\towner.call{value: amount}(\"\")\n      DUP1 \t\t\towner.call{value: amount}(\"\")\n      PUSH 0\t\t\towner.call{value: amount}(\"\")\n      DUP2 \t\t\towner.call{value: amount}(\"\")\n      EQ \t\t\towner.call{value: amount}(\"\")\n      PUSH [tag] 47\t\t\towner.call{value: amount}(\"\")\n      JUMPI \t\t\towner.call{value: amount}(\"\")\n      PUSH 40\t\t\towner.call{value: amount}(\"\")\n      MLOAD \t\t\towner.call{value: amount}(\"\")\n      SWAP2 \t\t\towner.call{value: amount}(\"\")\n      POP \t\t\towner.call{value: amount}(\"\")\n      PUSH 1F\t\t\towner.call{value: amount}(\"\")\n      NOT \t\t\towner.call{value: amount}(\"\")\n      PUSH 3F\t\t\towner.call{value: amount}(\"\")\n      RETURNDATASIZE \t\t\towner.call{value: amount}(\"\")\n      ADD \t\t\towner.call{value: amount}(\"\")\n      AND \t\t\towner.call{value: amount}(\"\")\n      DUP3 \t\t\towner.call{value: amount}(\"\")\n      ADD \t\t\towner.call{value: amount}(\"\")\n      PUSH 40\t\t\towner.call{value: amount}(\"\")\n      MSTORE \t\t\towner.call{value: amount}(\"\")\n      RETURNDATASIZE \t\t\towner.call{value: amount}(\"\")\n      DUP3 \t\t\towner.call{value: amount}(\"\")\n      MSTORE \t\t\towner.call{value: amount}(\"\")\n      RETURNDATASIZE \t\t\towner.call{value: amount}(\"\")\n      PUSH 0\t\t\towner.call{value: amount}(\"\")\n      PUSH 20\t\t\towner.call{value: amount}(\"\")\n      DUP5 \t\t\towner.call{value: amount}(\"\")\n      ADD \t\t\towner.call{value: amount}(\"\")\n      RETURNDATACOPY \t\t\towner.call{value: amount}(\"\")\n      PUSH [tag] 46\t\t\towner.call{value: amount}(\"\")\n      JUMP \t\t\towner.call{value: amount}(\"\")\n    tag 47\t\t\towner.call{value: amount}(\"\")\n      JUMPDEST \t\t\towner.call{value: amount}(\"\")\n      PUSH 60\t\t\towner.call{value: amount}(\"\")\n      SWAP2 \t\t\towner.call{value: amount}(\"\")\n      POP \t\t\towner.call{value: amount}(\"\")\n    tag 46\t\t\towner.call{value: amount}(\"\")\n      JUMPDEST \t\t\towner.call{value: amount}(\"\")\n      POP \t\t\towner.call{value: amount}(\"\")\n      POP \t\t\t(bool success, ) = owner.call{...\n      SWAP1 \t\t\t(bool success, ) = owner.call{...\n      POP \t\t\t(bool success, ) = owner.call{...\n      DUP1 \t\t\tsuccess\n      PUSH [tag] 48\t\t\trequire(success, \"Transfer nat...\n      JUMPI \t\t\trequire(success, \"Transfer nat...\n      PUSH 40\t\t\trequire(success, \"Transfer nat...\n      MLOAD \t\t\trequire(success, \"Transfer nat...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(success, \"Transfer nat...\n      DUP2 \t\t\trequire(success, \"Transfer nat...\n      MSTORE \t\t\trequire(success, \"Transfer nat...\n      PUSH 4\t\t\trequire(success, \"Transfer nat...\n      ADD \t\t\trequire(success, \"Transfer nat...\n      PUSH [tag] 49\t\t\trequire(success, \"Transfer nat...\n      SWAP1 \t\t\trequire(success, \"Transfer nat...\n      PUSH [tag] 50\t\t\trequire(success, \"Transfer nat...\n      JUMP \t\t\trequire(success, \"Transfer nat...\n    tag 49\t\t\trequire(success, \"Transfer nat...\n      JUMPDEST \t\t\trequire(success, \"Transfer nat...\n      PUSH 40\t\t\trequire(success, \"Transfer nat...\n      MLOAD \t\t\trequire(success, \"Transfer nat...\n      DUP1 \t\t\trequire(success, \"Transfer nat...\n      SWAP2 \t\t\trequire(success, \"Transfer nat...\n      SUB \t\t\trequire(success, \"Transfer nat...\n      SWAP1 \t\t\trequire(success, \"Transfer nat...\n      REVERT \t\t\trequire(success, \"Transfer nat...\n    tag 48\t\t\trequire(success, \"Transfer nat...\n      JUMPDEST \t\t\trequire(success, \"Transfer nat...\n      POP \t\t\t{\\r\\n            // Recover na...\n      PUSH [tag] 51\t\t\tif (tokenAddress == address(0)...\n      JUMP \t\t\tif (tokenAddress == address(0)...\n    tag 42\t\t\tif (tokenAddress == address(0)...\n      JUMPDEST \t\t\tif (tokenAddress == address(0)...\n      PUSH 0\t\t\tIERC20 token\n      DUP3 \t\t\ttokenAddress\n      SWAP1 \t\t\tIERC20 token = IERC20(tokenAdd...\n      POP \t\t\tIERC20 token = IERC20(tokenAdd...\n      DUP1 \t\t\ttoken\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ttoken.transfer\n      AND \t\t\ttoken.transfer\n      PUSH A9059CBB\t\t\ttoken.transfer\n      PUSH 0\t\t\towner\n      PUSH 0\t\t\towner\n      SWAP1 \t\t\towner\n      SLOAD \t\t\towner\n      SWAP1 \t\t\towner\n      PUSH 100\t\t\towner\n      EXP \t\t\towner\n      SWAP1 \t\t\towner\n      DIV \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner\n      AND \t\t\towner\n      DUP5 \t\t\tamount\n      PUSH 40\t\t\ttoken.transfer(owner, amount)\n      MLOAD \t\t\ttoken.transfer(owner, amount)\n      DUP4 \t\t\ttoken.transfer(owner, amount)\n      PUSH FFFFFFFF\t\t\ttoken.transfer(owner, amount)\n      AND \t\t\ttoken.transfer(owner, amount)\n      PUSH E0\t\t\ttoken.transfer(owner, amount)\n      SHL \t\t\ttoken.transfer(owner, amount)\n      DUP2 \t\t\ttoken.transfer(owner, amount)\n      MSTORE \t\t\ttoken.transfer(owner, amount)\n      PUSH 4\t\t\ttoken.transfer(owner, amount)\n      ADD \t\t\ttoken.transfer(owner, amount)\n      PUSH [tag] 52\t\t\ttoken.transfer(owner, amount)\n      SWAP3 \t\t\ttoken.transfer(owner, amount)\n      SWAP2 \t\t\ttoken.transfer(owner, amount)\n      SWAP1 \t\t\ttoken.transfer(owner, amount)\n      PUSH [tag] 53\t\t\ttoken.transfer(owner, amount)\n      JUMP \t\t\ttoken.transfer(owner, amount)\n    tag 52\t\t\ttoken.transfer(owner, amount)\n      JUMPDEST \t\t\ttoken.transfer(owner, amount)\n      PUSH 20\t\t\ttoken.transfer(owner, amount)\n      PUSH 40\t\t\ttoken.transfer(owner, amount)\n      MLOAD \t\t\ttoken.transfer(owner, amount)\n      DUP1 \t\t\ttoken.transfer(owner, amount)\n      DUP4 \t\t\ttoken.transfer(owner, amount)\n      SUB \t\t\ttoken.transfer(owner, amount)\n      DUP2 \t\t\ttoken.transfer(owner, amount)\n      PUSH 0\t\t\ttoken.transfer(owner, amount)\n      DUP8 \t\t\ttoken.transfer(owner, amount)\n      GAS \t\t\ttoken.transfer(owner, amount)\n      CALL \t\t\ttoken.transfer(owner, amount)\n      ISZERO \t\t\ttoken.transfer(owner, amount)\n      DUP1 \t\t\ttoken.transfer(owner, amount)\n      ISZERO \t\t\ttoken.transfer(owner, amount)\n      PUSH [tag] 55\t\t\ttoken.transfer(owner, amount)\n      JUMPI \t\t\ttoken.transfer(owner, amount)\n      RETURNDATASIZE \t\t\ttoken.transfer(owner, amount)\n      PUSH 0\t\t\ttoken.transfer(owner, amount)\n      PUSH 0\t\t\ttoken.transfer(owner, amount)\n      RETURNDATACOPY \t\t\ttoken.transfer(owner, amount)\n      RETURNDATASIZE \t\t\ttoken.transfer(owner, amount)\n      PUSH 0\t\t\ttoken.transfer(owner, amount)\n      REVERT \t\t\ttoken.transfer(owner, amount)\n    tag 55\t\t\ttoken.transfer(owner, amount)\n      JUMPDEST \t\t\ttoken.transfer(owner, amount)\n      POP \t\t\ttoken.transfer(owner, amount)\n      POP \t\t\ttoken.transfer(owner, amount)\n      POP \t\t\ttoken.transfer(owner, amount)\n      POP \t\t\ttoken.transfer(owner, amount)\n      PUSH 40\t\t\ttoken.transfer(owner, amount)\n      MLOAD \t\t\ttoken.transfer(owner, amount)\n      RETURNDATASIZE \t\t\ttoken.transfer(owner, amount)\n      PUSH 1F\t\t\ttoken.transfer(owner, amount)\n      NOT \t\t\ttoken.transfer(owner, amount)\n      PUSH 1F\t\t\ttoken.transfer(owner, amount)\n      DUP3 \t\t\ttoken.transfer(owner, amount)\n      ADD \t\t\ttoken.transfer(owner, amount)\n      AND \t\t\ttoken.transfer(owner, amount)\n      DUP3 \t\t\ttoken.transfer(owner, amount)\n      ADD \t\t\ttoken.transfer(owner, amount)\n      DUP1 \t\t\ttoken.transfer(owner, amount)\n      PUSH 40\t\t\ttoken.transfer(owner, amount)\n      MSTORE \t\t\ttoken.transfer(owner, amount)\n      POP \t\t\ttoken.transfer(owner, amount)\n      DUP2 \t\t\ttoken.transfer(owner, amount)\n      ADD \t\t\ttoken.transfer(owner, amount)\n      SWAP1 \t\t\ttoken.transfer(owner, amount)\n      PUSH [tag] 56\t\t\ttoken.transfer(owner, amount)\n      SWAP2 \t\t\ttoken.transfer(owner, amount)\n      SWAP1 \t\t\ttoken.transfer(owner, amount)\n      PUSH [tag] 57\t\t\ttoken.transfer(owner, amount)\n      JUMP \t\t\ttoken.transfer(owner, amount)\n    tag 56\t\t\ttoken.transfer(owner, amount)\n      JUMPDEST \t\t\ttoken.transfer(owner, amount)\n      PUSH [tag] 58\t\t\trequire(token.transfer(owner, ...\n      JUMPI \t\t\trequire(token.transfer(owner, ...\n      PUSH 40\t\t\trequire(token.transfer(owner, ...\n      MLOAD \t\t\trequire(token.transfer(owner, ...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(token.transfer(owner, ...\n      DUP2 \t\t\trequire(token.transfer(owner, ...\n      MSTORE \t\t\trequire(token.transfer(owner, ...\n      PUSH 4\t\t\trequire(token.transfer(owner, ...\n      ADD \t\t\trequire(token.transfer(owner, ...\n      PUSH [tag] 59\t\t\trequire(token.transfer(owner, ...\n      SWAP1 \t\t\trequire(token.transfer(owner, ...\n      PUSH [tag] 60\t\t\trequire(token.transfer(owner, ...\n      JUMP \t\t\trequire(token.transfer(owner, ...\n    tag 59\t\t\trequire(token.transfer(owner, ...\n      JUMPDEST \t\t\trequire(token.transfer(owner, ...\n      PUSH 40\t\t\trequire(token.transfer(owner, ...\n      MLOAD \t\t\trequire(token.transfer(owner, ...\n      DUP1 \t\t\trequire(token.transfer(owner, ...\n      SWAP2 \t\t\trequire(token.transfer(owner, ...\n      SUB \t\t\trequire(token.transfer(owner, ...\n      SWAP1 \t\t\trequire(token.transfer(owner, ...\n      REVERT \t\t\trequire(token.transfer(owner, ...\n    tag 58\t\t\trequire(token.transfer(owner, ...\n      JUMPDEST \t\t\trequire(token.transfer(owner, ...\n      POP \t\t\t{\\r\\n            // Recover ER...\n    tag 51\t\t\tif (tokenAddress == address(0)...\n      JUMPDEST \t\t\tif (tokenAddress == address(0)...\n      POP \t\t\tfunction recoverTokens(address...\n      POP \t\t\tfunction recoverTokens(address...\n      JUMP \t\t\tfunction recoverTokens(address...\n    tag 19\t\t\tfunction batchTransferToken(ad...\n      JUMPDEST \t\t\tfunction batchTransferToken(ad...\n      PUSH 0\t\t\tbool\n      PUSH 0\t\t\towner\n      PUSH 0\t\t\towner\n      SWAP1 \t\t\towner\n      SLOAD \t\t\towner\n      SWAP1 \t\t\towner\n      PUSH 100\t\t\towner\n      EXP \t\t\towner\n      SWAP1 \t\t\towner\n      DIV \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner\n      AND \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tmsg.sender == owner\n      AND \t\t\tmsg.sender == owner\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tmsg.sender == owner\n      AND \t\t\tmsg.sender == owner\n      EQ \t\t\tmsg.sender == owner\n      PUSH [tag] 62\t\t\trequire(msg.sender == owner, \"...\n      JUMPI \t\t\trequire(msg.sender == owner, \"...\n      PUSH 40\t\t\trequire(msg.sender == owner, \"...\n      MLOAD \t\t\trequire(msg.sender == owner, \"...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(msg.sender == owner, \"...\n      DUP2 \t\t\trequire(msg.sender == owner, \"...\n      MSTORE \t\t\trequire(msg.sender == owner, \"...\n      PUSH 4\t\t\trequire(msg.sender == owner, \"...\n      ADD \t\t\trequire(msg.sender == owner, \"...\n      PUSH [tag] 63\t\t\trequire(msg.sender == owner, \"...\n      SWAP1 \t\t\trequire(msg.sender == owner, \"...\n      PUSH [tag] 40\t\t\trequire(msg.sender == owner, \"...\n      JUMP \t\t\trequire(msg.sender == owner, \"...\n    tag 63\t\t\trequire(msg.sender == owner, \"...\n      JUMPDEST \t\t\trequire(msg.sender == owner, \"...\n      PUSH 40\t\t\trequire(msg.sender == owner, \"...\n      MLOAD \t\t\trequire(msg.sender == owner, \"...\n      DUP1 \t\t\trequire(msg.sender == owner, \"...\n      SWAP2 \t\t\trequire(msg.sender == owner, \"...\n      SUB \t\t\trequire(msg.sender == owner, \"...\n      SWAP1 \t\t\trequire(msg.sender == owner, \"...\n      REVERT \t\t\trequire(msg.sender == owner, \"...\n    tag 62\t\t\trequire(msg.sender == owner, \"...\n      JUMPDEST \t\t\trequire(msg.sender == owner, \"...\n      PUSH 0\t\t\tuint256 totalRecipients\n      DUP6 \t\t\trecipients\n      DUP6 \t\t\trecipients\n      SWAP1 \t\t\trecipients.length\n      POP \t\t\trecipients.length\n      SWAP1 \t\t\tuint256 totalRecipients = reci...\n      POP \t\t\tuint256 totalRecipients = reci...\n      DUP4 \t\t\tamounts\n      DUP4 \t\t\tamounts\n      SWAP1 \t\t\tamounts.length\n      POP \t\t\tamounts.length\n      DUP2 \t\t\ttotalRecipients\n      EQ \t\t\ttotalRecipients == amounts.len...\n      PUSH [tag] 65\t\t\trequire(totalRecipients == amo...\n      JUMPI \t\t\trequire(totalRecipients == amo...\n      PUSH 40\t\t\trequire(totalRecipients == amo...\n      MLOAD \t\t\trequire(totalRecipients == amo...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(totalRecipients == amo...\n      DUP2 \t\t\trequire(totalRecipients == amo...\n      MSTORE \t\t\trequire(totalRecipients == amo...\n      PUSH 4\t\t\trequire(totalRecipients == amo...\n      ADD \t\t\trequire(totalRecipients == amo...\n      PUSH [tag] 66\t\t\trequire(totalRecipients == amo...\n      SWAP1 \t\t\trequire(totalRecipients == amo...\n      PUSH [tag] 67\t\t\trequire(totalRecipients == amo...\n      JUMP \t\t\trequire(totalRecipients == amo...\n    tag 66\t\t\trequire(totalRecipients == amo...\n      JUMPDEST \t\t\trequire(totalRecipients == amo...\n      PUSH 40\t\t\trequire(totalRecipients == amo...\n      MLOAD \t\t\trequire(totalRecipients == amo...\n      DUP1 \t\t\trequire(totalRecipients == amo...\n      SWAP2 \t\t\trequire(totalRecipients == amo...\n      SUB \t\t\trequire(totalRecipients == amo...\n      SWAP1 \t\t\trequire(totalRecipients == amo...\n      REVERT \t\t\trequire(totalRecipients == amo...\n    tag 65\t\t\trequire(totalRecipients == amo...\n      JUMPDEST \t\t\trequire(totalRecipients == amo...\n      PUSH 7D0\t\t\t2000\n      DUP2 \t\t\ttotalRecipients\n      GT \t\t\ttotalRecipients <= 2000\n      ISZERO \t\t\ttotalRecipients <= 2000\n      PUSH [tag] 68\t\t\trequire(totalRecipients <= 200...\n      JUMPI \t\t\trequire(totalRecipients <= 200...\n      PUSH 40\t\t\trequire(totalRecipients <= 200...\n      MLOAD \t\t\trequire(totalRecipients <= 200...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(totalRecipients <= 200...\n      DUP2 \t\t\trequire(totalRecipients <= 200...\n      MSTORE \t\t\trequire(totalRecipients <= 200...\n      PUSH 4\t\t\trequire(totalRecipients <= 200...\n      ADD \t\t\trequire(totalRecipients <= 200...\n      PUSH [tag] 69\t\t\trequire(totalRecipients <= 200...\n      SWAP1 \t\t\trequire(totalRecipients <= 200...\n      PUSH [tag] 70\t\t\trequire(totalRecipients <= 200...\n      JUMP \t\t\trequire(totalRecipients <= 200...\n    tag 69\t\t\trequire(totalRecipients <= 200...\n      JUMPDEST \t\t\trequire(totalRecipients <= 200...\n      PUSH 40\t\t\trequire(totalRecipients <= 200...\n      MLOAD \t\t\trequire(totalRecipients <= 200...\n      DUP1 \t\t\trequire(totalRecipients <= 200...\n      SWAP2 \t\t\trequire(totalRecipients <= 200...\n      SUB \t\t\trequire(totalRecipients <= 200...\n      SWAP1 \t\t\trequire(totalRecipients <= 200...\n      REVERT \t\t\trequire(totalRecipients <= 200...\n    tag 68\t\t\trequire(totalRecipients <= 200...\n      JUMPDEST \t\t\trequire(totalRecipients <= 200...\n      PUSH 0\t\t\tIERC20 token\n      DUP8 \t\t\ttokenAddress\n      SWAP1 \t\t\tIERC20 token = IERC20(tokenAdd...\n      POP \t\t\tIERC20 token = IERC20(tokenAdd...\n      PUSH 0\t\t\tuint256 totalAmount\n      PUSH 0\t\t\t0\n      SWAP1 \t\t\tuint256 totalAmount = 0\n      POP \t\t\tuint256 totalAmount = 0\n      PUSH 0\t\t\tuint256 i\n      PUSH 0\t\t\t0\n      SWAP1 \t\t\tuint256 i = 0\n      POP \t\t\tuint256 i = 0\n    tag 71\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMPDEST \t\t\tfor (uint256 i = 0; i < totalR...\n      DUP4 \t\t\ttotalRecipients\n      DUP2 \t\t\ti\n      LT \t\t\ti < totalRecipients\n      ISZERO \t\t\tfor (uint256 i = 0; i < totalR...\n      PUSH [tag] 72\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMPI \t\t\tfor (uint256 i = 0; i < totalR...\n      DUP7 \t\t\tamounts\n      DUP7 \t\t\tamounts\n      DUP3 \t\t\ti\n      DUP2 \t\t\tamounts[i]\n      DUP2 \t\t\tamounts[i]\n      LT \t\t\tamounts[i]\n      PUSH [tag] 74\t\t\tamounts[i]\n      JUMPI \t\t\tamounts[i]\n      PUSH [tag] 75\t\t\tamounts[i]\n      PUSH [tag] 76\t\t\tamounts[i]\n      JUMP \t\t\tamounts[i]\n    tag 75\t\t\tamounts[i]\n      JUMPDEST \t\t\tamounts[i]\n    tag 74\t\t\tamounts[i]\n      JUMPDEST \t\t\tamounts[i]\n      SWAP1 \t\t\tamounts[i]\n      POP \t\t\tamounts[i]\n      PUSH 20\t\t\tamounts[i]\n      MUL \t\t\tamounts[i]\n      ADD \t\t\tamounts[i]\n      CALLDATALOAD \t\t\tamounts[i]\n      DUP3 \t\t\ttotalAmount += amounts[i]\n      PUSH [tag] 77\t\t\ttotalAmount += amounts[i]\n      SWAP2 \t\t\ttotalAmount += amounts[i]\n      SWAP1 \t\t\ttotalAmount += amounts[i]\n      PUSH [tag] 78\t\t\ttotalAmount += amounts[i]\n      JUMP \t\t\ttotalAmount += amounts[i]\n    tag 77\t\t\ttotalAmount += amounts[i]\n      JUMPDEST \t\t\ttotalAmount += amounts[i]\n      SWAP2 \t\t\ttotalAmount += amounts[i]\n      POP \t\t\ttotalAmount += amounts[i]\n      DUP1 \t\t\ti++\n      DUP1 \t\t\ti++\n      PUSH 1\t\t\ti++\n      ADD \t\t\ti++\n      SWAP2 \t\t\ti++\n      POP \t\t\ti++\n      POP \t\t\ti++\n      PUSH [tag] 71\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMP \t\t\tfor (uint256 i = 0; i < totalR...\n    tag 72\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMPDEST \t\t\tfor (uint256 i = 0; i < totalR...\n      POP \t\t\tfor (uint256 i = 0; i < totalR...\n      DUP1 \t\t\ttotalAmount\n      DUP3 \t\t\ttoken\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ttoken.allowance\n      AND \t\t\ttoken.allowance\n      PUSH DD62ED3E\t\t\ttoken.allowance\n      CALLER \t\t\tmsg.sender\n      ADDRESS \t\t\tthis\n      PUSH 40\t\t\ttoken.allowance(msg.sender, ad...\n      MLOAD \t\t\ttoken.allowance(msg.sender, ad...\n      DUP4 \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH FFFFFFFF\t\t\ttoken.allowance(msg.sender, ad...\n      AND \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH E0\t\t\ttoken.allowance(msg.sender, ad...\n      SHL \t\t\ttoken.allowance(msg.sender, ad...\n      DUP2 \t\t\ttoken.allowance(msg.sender, ad...\n      MSTORE \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH 4\t\t\ttoken.allowance(msg.sender, ad...\n      ADD \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH [tag] 79\t\t\ttoken.allowance(msg.sender, ad...\n      SWAP3 \t\t\ttoken.allowance(msg.sender, ad...\n      SWAP2 \t\t\ttoken.allowance(msg.sender, ad...\n      SWAP1 \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH [tag] 80\t\t\ttoken.allowance(msg.sender, ad...\n      JUMP \t\t\ttoken.allowance(msg.sender, ad...\n    tag 79\t\t\ttoken.allowance(msg.sender, ad...\n      JUMPDEST \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH 20\t\t\ttoken.allowance(msg.sender, ad...\n      PUSH 40\t\t\ttoken.allowance(msg.sender, ad...\n      MLOAD \t\t\ttoken.allowance(msg.sender, ad...\n      DUP1 \t\t\ttoken.allowance(msg.sender, ad...\n      DUP4 \t\t\ttoken.allowance(msg.sender, ad...\n      SUB \t\t\ttoken.allowance(msg.sender, ad...\n      DUP2 \t\t\ttoken.allowance(msg.sender, ad...\n      DUP7 \t\t\ttoken.allowance(msg.sender, ad...\n      GAS \t\t\ttoken.allowance(msg.sender, ad...\n      STATICCALL \t\t\ttoken.allowance(msg.sender, ad...\n      ISZERO \t\t\ttoken.allowance(msg.sender, ad...\n      DUP1 \t\t\ttoken.allowance(msg.sender, ad...\n      ISZERO \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH [tag] 82\t\t\ttoken.allowance(msg.sender, ad...\n      JUMPI \t\t\ttoken.allowance(msg.sender, ad...\n      RETURNDATASIZE \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH 0\t\t\ttoken.allowance(msg.sender, ad...\n      PUSH 0\t\t\ttoken.allowance(msg.sender, ad...\n      RETURNDATACOPY \t\t\ttoken.allowance(msg.sender, ad...\n      RETURNDATASIZE \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH 0\t\t\ttoken.allowance(msg.sender, ad...\n      REVERT \t\t\ttoken.allowance(msg.sender, ad...\n    tag 82\t\t\ttoken.allowance(msg.sender, ad...\n      JUMPDEST \t\t\ttoken.allowance(msg.sender, ad...\n      POP \t\t\ttoken.allowance(msg.sender, ad...\n      POP \t\t\ttoken.allowance(msg.sender, ad...\n      POP \t\t\ttoken.allowance(msg.sender, ad...\n      POP \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH 40\t\t\ttoken.allowance(msg.sender, ad...\n      MLOAD \t\t\ttoken.allowance(msg.sender, ad...\n      RETURNDATASIZE \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH 1F\t\t\ttoken.allowance(msg.sender, ad...\n      NOT \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH 1F\t\t\ttoken.allowance(msg.sender, ad...\n      DUP3 \t\t\ttoken.allowance(msg.sender, ad...\n      ADD \t\t\ttoken.allowance(msg.sender, ad...\n      AND \t\t\ttoken.allowance(msg.sender, ad...\n      DUP3 \t\t\ttoken.allowance(msg.sender, ad...\n      ADD \t\t\ttoken.allowance(msg.sender, ad...\n      DUP1 \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH 40\t\t\ttoken.allowance(msg.sender, ad...\n      MSTORE \t\t\ttoken.allowance(msg.sender, ad...\n      POP \t\t\ttoken.allowance(msg.sender, ad...\n      DUP2 \t\t\ttoken.allowance(msg.sender, ad...\n      ADD \t\t\ttoken.allowance(msg.sender, ad...\n      SWAP1 \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH [tag] 83\t\t\ttoken.allowance(msg.sender, ad...\n      SWAP2 \t\t\ttoken.allowance(msg.sender, ad...\n      SWAP1 \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH [tag] 84\t\t\ttoken.allowance(msg.sender, ad...\n      JUMP \t\t\ttoken.allowance(msg.sender, ad...\n    tag 83\t\t\ttoken.allowance(msg.sender, ad...\n      JUMPDEST \t\t\ttoken.allowance(msg.sender, ad...\n      LT \t\t\ttoken.allowance(msg.sender, ad...\n      ISZERO \t\t\ttoken.allowance(msg.sender, ad...\n      PUSH [tag] 85\t\t\trequire(token.allowance(msg.se...\n      JUMPI \t\t\trequire(token.allowance(msg.se...\n      PUSH 40\t\t\trequire(token.allowance(msg.se...\n      MLOAD \t\t\trequire(token.allowance(msg.se...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(token.allowance(msg.se...\n      DUP2 \t\t\trequire(token.allowance(msg.se...\n      MSTORE \t\t\trequire(token.allowance(msg.se...\n      PUSH 4\t\t\trequire(token.allowance(msg.se...\n      ADD \t\t\trequire(token.allowance(msg.se...\n      PUSH [tag] 86\t\t\trequire(token.allowance(msg.se...\n      SWAP1 \t\t\trequire(token.allowance(msg.se...\n      PUSH [tag] 87\t\t\trequire(token.allowance(msg.se...\n      JUMP \t\t\trequire(token.allowance(msg.se...\n    tag 86\t\t\trequire(token.allowance(msg.se...\n      JUMPDEST \t\t\trequire(token.allowance(msg.se...\n      PUSH 40\t\t\trequire(token.allowance(msg.se...\n      MLOAD \t\t\trequire(token.allowance(msg.se...\n      DUP1 \t\t\trequire(token.allowance(msg.se...\n      SWAP2 \t\t\trequire(token.allowance(msg.se...\n      SUB \t\t\trequire(token.allowance(msg.se...\n      SWAP1 \t\t\trequire(token.allowance(msg.se...\n      REVERT \t\t\trequire(token.allowance(msg.se...\n    tag 85\t\t\trequire(token.allowance(msg.se...\n      JUMPDEST \t\t\trequire(token.allowance(msg.se...\n      DUP2 \t\t\ttoken\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ttoken.transferFrom\n      AND \t\t\ttoken.transferFrom\n      PUSH 23B872DD\t\t\ttoken.transferFrom\n      CALLER \t\t\tmsg.sender\n      ADDRESS \t\t\tthis\n      DUP5 \t\t\ttotalAmount\n      PUSH 40\t\t\ttoken.transferFrom(msg.sender,...\n      MLOAD \t\t\ttoken.transferFrom(msg.sender,...\n      DUP5 \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH FFFFFFFF\t\t\ttoken.transferFrom(msg.sender,...\n      AND \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH E0\t\t\ttoken.transferFrom(msg.sender,...\n      SHL \t\t\ttoken.transferFrom(msg.sender,...\n      DUP2 \t\t\ttoken.transferFrom(msg.sender,...\n      MSTORE \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH 4\t\t\ttoken.transferFrom(msg.sender,...\n      ADD \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH [tag] 88\t\t\ttoken.transferFrom(msg.sender,...\n      SWAP4 \t\t\ttoken.transferFrom(msg.sender,...\n      SWAP3 \t\t\ttoken.transferFrom(msg.sender,...\n      SWAP2 \t\t\ttoken.transferFrom(msg.sender,...\n      SWAP1 \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH [tag] 89\t\t\ttoken.transferFrom(msg.sender,...\n      JUMP \t\t\ttoken.transferFrom(msg.sender,...\n    tag 88\t\t\ttoken.transferFrom(msg.sender,...\n      JUMPDEST \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH 20\t\t\ttoken.transferFrom(msg.sender,...\n      PUSH 40\t\t\ttoken.transferFrom(msg.sender,...\n      MLOAD \t\t\ttoken.transferFrom(msg.sender,...\n      DUP1 \t\t\ttoken.transferFrom(msg.sender,...\n      DUP4 \t\t\ttoken.transferFrom(msg.sender,...\n      SUB \t\t\ttoken.transferFrom(msg.sender,...\n      DUP2 \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH 0\t\t\ttoken.transferFrom(msg.sender,...\n      DUP8 \t\t\ttoken.transferFrom(msg.sender,...\n      GAS \t\t\ttoken.transferFrom(msg.sender,...\n      CALL \t\t\ttoken.transferFrom(msg.sender,...\n      ISZERO \t\t\ttoken.transferFrom(msg.sender,...\n      DUP1 \t\t\ttoken.transferFrom(msg.sender,...\n      ISZERO \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH [tag] 91\t\t\ttoken.transferFrom(msg.sender,...\n      JUMPI \t\t\ttoken.transferFrom(msg.sender,...\n      RETURNDATASIZE \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH 0\t\t\ttoken.transferFrom(msg.sender,...\n      PUSH 0\t\t\ttoken.transferFrom(msg.sender,...\n      RETURNDATACOPY \t\t\ttoken.transferFrom(msg.sender,...\n      RETURNDATASIZE \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH 0\t\t\ttoken.transferFrom(msg.sender,...\n      REVERT \t\t\ttoken.transferFrom(msg.sender,...\n    tag 91\t\t\ttoken.transferFrom(msg.sender,...\n      JUMPDEST \t\t\ttoken.transferFrom(msg.sender,...\n      POP \t\t\ttoken.transferFrom(msg.sender,...\n      POP \t\t\ttoken.transferFrom(msg.sender,...\n      POP \t\t\ttoken.transferFrom(msg.sender,...\n      POP \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH 40\t\t\ttoken.transferFrom(msg.sender,...\n      MLOAD \t\t\ttoken.transferFrom(msg.sender,...\n      RETURNDATASIZE \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH 1F\t\t\ttoken.transferFrom(msg.sender,...\n      NOT \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH 1F\t\t\ttoken.transferFrom(msg.sender,...\n      DUP3 \t\t\ttoken.transferFrom(msg.sender,...\n      ADD \t\t\ttoken.transferFrom(msg.sender,...\n      AND \t\t\ttoken.transferFrom(msg.sender,...\n      DUP3 \t\t\ttoken.transferFrom(msg.sender,...\n      ADD \t\t\ttoken.transferFrom(msg.sender,...\n      DUP1 \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH 40\t\t\ttoken.transferFrom(msg.sender,...\n      MSTORE \t\t\ttoken.transferFrom(msg.sender,...\n      POP \t\t\ttoken.transferFrom(msg.sender,...\n      DUP2 \t\t\ttoken.transferFrom(msg.sender,...\n      ADD \t\t\ttoken.transferFrom(msg.sender,...\n      SWAP1 \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH [tag] 92\t\t\ttoken.transferFrom(msg.sender,...\n      SWAP2 \t\t\ttoken.transferFrom(msg.sender,...\n      SWAP1 \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH [tag] 57\t\t\ttoken.transferFrom(msg.sender,...\n      JUMP \t\t\ttoken.transferFrom(msg.sender,...\n    tag 92\t\t\ttoken.transferFrom(msg.sender,...\n      JUMPDEST \t\t\ttoken.transferFrom(msg.sender,...\n      PUSH [tag] 93\t\t\trequire(token.transferFrom(msg...\n      JUMPI \t\t\trequire(token.transferFrom(msg...\n      PUSH 40\t\t\trequire(token.transferFrom(msg...\n      MLOAD \t\t\trequire(token.transferFrom(msg...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(token.transferFrom(msg...\n      DUP2 \t\t\trequire(token.transferFrom(msg...\n      MSTORE \t\t\trequire(token.transferFrom(msg...\n      PUSH 4\t\t\trequire(token.transferFrom(msg...\n      ADD \t\t\trequire(token.transferFrom(msg...\n      PUSH [tag] 94\t\t\trequire(token.transferFrom(msg...\n      SWAP1 \t\t\trequire(token.transferFrom(msg...\n      PUSH [tag] 95\t\t\trequire(token.transferFrom(msg...\n      JUMP \t\t\trequire(token.transferFrom(msg...\n    tag 94\t\t\trequire(token.transferFrom(msg...\n      JUMPDEST \t\t\trequire(token.transferFrom(msg...\n      PUSH 40\t\t\trequire(token.transferFrom(msg...\n      MLOAD \t\t\trequire(token.transferFrom(msg...\n      DUP1 \t\t\trequire(token.transferFrom(msg...\n      SWAP2 \t\t\trequire(token.transferFrom(msg...\n      SUB \t\t\trequire(token.transferFrom(msg...\n      SWAP1 \t\t\trequire(token.transferFrom(msg...\n      REVERT \t\t\trequire(token.transferFrom(msg...\n    tag 93\t\t\trequire(token.transferFrom(msg...\n      JUMPDEST \t\t\trequire(token.transferFrom(msg...\n      PUSH 0\t\t\tuint256 i\n      PUSH 0\t\t\t0\n      SWAP1 \t\t\tuint256 i = 0\n      POP \t\t\tuint256 i = 0\n    tag 96\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMPDEST \t\t\tfor (uint256 i = 0; i < totalR...\n      DUP4 \t\t\ttotalRecipients\n      DUP2 \t\t\ti\n      LT \t\t\ti < totalRecipients\n      ISZERO \t\t\tfor (uint256 i = 0; i < totalR...\n      PUSH [tag] 97\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMPI \t\t\tfor (uint256 i = 0; i < totalR...\n      PUSH 0\t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\trecipients[i] != address(0)\n      AND \t\t\trecipients[i] != address(0)\n      DUP10 \t\t\trecipients\n      DUP10 \t\t\trecipients\n      DUP4 \t\t\ti\n      DUP2 \t\t\trecipients[i]\n      DUP2 \t\t\trecipients[i]\n      LT \t\t\trecipients[i]\n      PUSH [tag] 99\t\t\trecipients[i]\n      JUMPI \t\t\trecipients[i]\n      PUSH [tag] 100\t\t\trecipients[i]\n      PUSH [tag] 76\t\t\trecipients[i]\n      JUMP \t\t\trecipients[i]\n    tag 100\t\t\trecipients[i]\n      JUMPDEST \t\t\trecipients[i]\n    tag 99\t\t\trecipients[i]\n      JUMPDEST \t\t\trecipients[i]\n      SWAP1 \t\t\trecipients[i]\n      POP \t\t\trecipients[i]\n      PUSH 20\t\t\trecipients[i]\n      MUL \t\t\trecipients[i]\n      ADD \t\t\trecipients[i]\n      PUSH 20\t\t\trecipients[i]\n      DUP2 \t\t\trecipients[i]\n      ADD \t\t\trecipients[i]\n      SWAP1 \t\t\trecipients[i]\n      PUSH [tag] 101\t\t\trecipients[i]\n      SWAP2 \t\t\trecipients[i]\n      SWAP1 \t\t\trecipients[i]\n      PUSH [tag] 35\t\t\trecipients[i]\n      JUMP \t\t\trecipients[i]\n    tag 101\t\t\trecipients[i]\n      JUMPDEST \t\t\trecipients[i]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\trecipients[i] != address(0)\n      AND \t\t\trecipients[i] != address(0)\n      SUB \t\t\trecipients[i] != address(0)\n      PUSH [tag] 102\t\t\trequire(recipients[i] != addre...\n      JUMPI \t\t\trequire(recipients[i] != addre...\n      PUSH 40\t\t\trequire(recipients[i] != addre...\n      MLOAD \t\t\trequire(recipients[i] != addre...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(recipients[i] != addre...\n      DUP2 \t\t\trequire(recipients[i] != addre...\n      MSTORE \t\t\trequire(recipients[i] != addre...\n      PUSH 4\t\t\trequire(recipients[i] != addre...\n      ADD \t\t\trequire(recipients[i] != addre...\n      PUSH [tag] 103\t\t\trequire(recipients[i] != addre...\n      SWAP1 \t\t\trequire(recipients[i] != addre...\n      PUSH [tag] 104\t\t\trequire(recipients[i] != addre...\n      JUMP \t\t\trequire(recipients[i] != addre...\n    tag 103\t\t\trequire(recipients[i] != addre...\n      JUMPDEST \t\t\trequire(recipients[i] != addre...\n      PUSH 40\t\t\trequire(recipients[i] != addre...\n      MLOAD \t\t\trequire(recipients[i] != addre...\n      DUP1 \t\t\trequire(recipients[i] != addre...\n      SWAP2 \t\t\trequire(recipients[i] != addre...\n      SUB \t\t\trequire(recipients[i] != addre...\n      SWAP1 \t\t\trequire(recipients[i] != addre...\n      REVERT \t\t\trequire(recipients[i] != addre...\n    tag 102\t\t\trequire(recipients[i] != addre...\n      JUMPDEST \t\t\trequire(recipients[i] != addre...\n      DUP3 \t\t\ttoken\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\ttoken.transfer\n      AND \t\t\ttoken.transfer\n      PUSH A9059CBB\t\t\ttoken.transfer\n      DUP11 \t\t\trecipients\n      DUP11 \t\t\trecipients\n      DUP5 \t\t\ti\n      DUP2 \t\t\trecipients[i]\n      DUP2 \t\t\trecipients[i]\n      LT \t\t\trecipients[i]\n      PUSH [tag] 105\t\t\trecipients[i]\n      JUMPI \t\t\trecipients[i]\n      PUSH [tag] 106\t\t\trecipients[i]\n      PUSH [tag] 76\t\t\trecipients[i]\n      JUMP \t\t\trecipients[i]\n    tag 106\t\t\trecipients[i]\n      JUMPDEST \t\t\trecipients[i]\n    tag 105\t\t\trecipients[i]\n      JUMPDEST \t\t\trecipients[i]\n      SWAP1 \t\t\trecipients[i]\n      POP \t\t\trecipients[i]\n      PUSH 20\t\t\trecipients[i]\n      MUL \t\t\trecipients[i]\n      ADD \t\t\trecipients[i]\n      PUSH 20\t\t\trecipients[i]\n      DUP2 \t\t\trecipients[i]\n      ADD \t\t\trecipients[i]\n      SWAP1 \t\t\trecipients[i]\n      PUSH [tag] 107\t\t\trecipients[i]\n      SWAP2 \t\t\trecipients[i]\n      SWAP1 \t\t\trecipients[i]\n      PUSH [tag] 35\t\t\trecipients[i]\n      JUMP \t\t\trecipients[i]\n    tag 107\t\t\trecipients[i]\n      JUMPDEST \t\t\trecipients[i]\n      DUP10 \t\t\tamounts\n      DUP10 \t\t\tamounts\n      DUP6 \t\t\ti\n      DUP2 \t\t\tamounts[i]\n      DUP2 \t\t\tamounts[i]\n      LT \t\t\tamounts[i]\n      PUSH [tag] 108\t\t\tamounts[i]\n      JUMPI \t\t\tamounts[i]\n      PUSH [tag] 109\t\t\tamounts[i]\n      PUSH [tag] 76\t\t\tamounts[i]\n      JUMP \t\t\tamounts[i]\n    tag 109\t\t\tamounts[i]\n      JUMPDEST \t\t\tamounts[i]\n    tag 108\t\t\tamounts[i]\n      JUMPDEST \t\t\tamounts[i]\n      SWAP1 \t\t\tamounts[i]\n      POP \t\t\tamounts[i]\n      PUSH 20\t\t\tamounts[i]\n      MUL \t\t\tamounts[i]\n      ADD \t\t\tamounts[i]\n      CALLDATALOAD \t\t\tamounts[i]\n      PUSH 40\t\t\ttoken.transfer(recipients[i], ...\n      MLOAD \t\t\ttoken.transfer(recipients[i], ...\n      DUP4 \t\t\ttoken.transfer(recipients[i], ...\n      PUSH FFFFFFFF\t\t\ttoken.transfer(recipients[i], ...\n      AND \t\t\ttoken.transfer(recipients[i], ...\n      PUSH E0\t\t\ttoken.transfer(recipients[i], ...\n      SHL \t\t\ttoken.transfer(recipients[i], ...\n      DUP2 \t\t\ttoken.transfer(recipients[i], ...\n      MSTORE \t\t\ttoken.transfer(recipients[i], ...\n      PUSH 4\t\t\ttoken.transfer(recipients[i], ...\n      ADD \t\t\ttoken.transfer(recipients[i], ...\n      PUSH [tag] 110\t\t\ttoken.transfer(recipients[i], ...\n      SWAP3 \t\t\ttoken.transfer(recipients[i], ...\n      SWAP2 \t\t\ttoken.transfer(recipients[i], ...\n      SWAP1 \t\t\ttoken.transfer(recipients[i], ...\n      PUSH [tag] 53\t\t\ttoken.transfer(recipients[i], ...\n      JUMP \t\t\ttoken.transfer(recipients[i], ...\n    tag 110\t\t\ttoken.transfer(recipients[i], ...\n      JUMPDEST \t\t\ttoken.transfer(recipients[i], ...\n      PUSH 20\t\t\ttoken.transfer(recipients[i], ...\n      PUSH 40\t\t\ttoken.transfer(recipients[i], ...\n      MLOAD \t\t\ttoken.transfer(recipients[i], ...\n      DUP1 \t\t\ttoken.transfer(recipients[i], ...\n      DUP4 \t\t\ttoken.transfer(recipients[i], ...\n      SUB \t\t\ttoken.transfer(recipients[i], ...\n      DUP2 \t\t\ttoken.transfer(recipients[i], ...\n      PUSH 0\t\t\ttoken.transfer(recipients[i], ...\n      DUP8 \t\t\ttoken.transfer(recipients[i], ...\n      GAS \t\t\ttoken.transfer(recipients[i], ...\n      CALL \t\t\ttoken.transfer(recipients[i], ...\n      ISZERO \t\t\ttoken.transfer(recipients[i], ...\n      DUP1 \t\t\ttoken.transfer(recipients[i], ...\n      ISZERO \t\t\ttoken.transfer(recipients[i], ...\n      PUSH [tag] 112\t\t\ttoken.transfer(recipients[i], ...\n      JUMPI \t\t\ttoken.transfer(recipients[i], ...\n      RETURNDATASIZE \t\t\ttoken.transfer(recipients[i], ...\n      PUSH 0\t\t\ttoken.transfer(recipients[i], ...\n      PUSH 0\t\t\ttoken.transfer(recipients[i], ...\n      RETURNDATACOPY \t\t\ttoken.transfer(recipients[i], ...\n      RETURNDATASIZE \t\t\ttoken.transfer(recipients[i], ...\n      PUSH 0\t\t\ttoken.transfer(recipients[i], ...\n      REVERT \t\t\ttoken.transfer(recipients[i], ...\n    tag 112\t\t\ttoken.transfer(recipients[i], ...\n      JUMPDEST \t\t\ttoken.transfer(recipients[i], ...\n      POP \t\t\ttoken.transfer(recipients[i], ...\n      POP \t\t\ttoken.transfer(recipients[i], ...\n      POP \t\t\ttoken.transfer(recipients[i], ...\n      POP \t\t\ttoken.transfer(recipients[i], ...\n      PUSH 40\t\t\ttoken.transfer(recipients[i], ...\n      MLOAD \t\t\ttoken.transfer(recipients[i], ...\n      RETURNDATASIZE \t\t\ttoken.transfer(recipients[i], ...\n      PUSH 1F\t\t\ttoken.transfer(recipients[i], ...\n      NOT \t\t\ttoken.transfer(recipients[i], ...\n      PUSH 1F\t\t\ttoken.transfer(recipients[i], ...\n      DUP3 \t\t\ttoken.transfer(recipients[i], ...\n      ADD \t\t\ttoken.transfer(recipients[i], ...\n      AND \t\t\ttoken.transfer(recipients[i], ...\n      DUP3 \t\t\ttoken.transfer(recipients[i], ...\n      ADD \t\t\ttoken.transfer(recipients[i], ...\n      DUP1 \t\t\ttoken.transfer(recipients[i], ...\n      PUSH 40\t\t\ttoken.transfer(recipients[i], ...\n      MSTORE \t\t\ttoken.transfer(recipients[i], ...\n      POP \t\t\ttoken.transfer(recipients[i], ...\n      DUP2 \t\t\ttoken.transfer(recipients[i], ...\n      ADD \t\t\ttoken.transfer(recipients[i], ...\n      SWAP1 \t\t\ttoken.transfer(recipients[i], ...\n      PUSH [tag] 113\t\t\ttoken.transfer(recipients[i], ...\n      SWAP2 \t\t\ttoken.transfer(recipients[i], ...\n      SWAP1 \t\t\ttoken.transfer(recipients[i], ...\n      PUSH [tag] 57\t\t\ttoken.transfer(recipients[i], ...\n      JUMP \t\t\ttoken.transfer(recipients[i], ...\n    tag 113\t\t\ttoken.transfer(recipients[i], ...\n      JUMPDEST \t\t\ttoken.transfer(recipients[i], ...\n      PUSH [tag] 114\t\t\trequire(token.transfer(recipie...\n      JUMPI \t\t\trequire(token.transfer(recipie...\n      PUSH 40\t\t\trequire(token.transfer(recipie...\n      MLOAD \t\t\trequire(token.transfer(recipie...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(token.transfer(recipie...\n      DUP2 \t\t\trequire(token.transfer(recipie...\n      MSTORE \t\t\trequire(token.transfer(recipie...\n      PUSH 4\t\t\trequire(token.transfer(recipie...\n      ADD \t\t\trequire(token.transfer(recipie...\n      PUSH [tag] 115\t\t\trequire(token.transfer(recipie...\n      SWAP1 \t\t\trequire(token.transfer(recipie...\n      PUSH [tag] 60\t\t\trequire(token.transfer(recipie...\n      JUMP \t\t\trequire(token.transfer(recipie...\n    tag 115\t\t\trequire(token.transfer(recipie...\n      JUMPDEST \t\t\trequire(token.transfer(recipie...\n      PUSH 40\t\t\trequire(token.transfer(recipie...\n      MLOAD \t\t\trequire(token.transfer(recipie...\n      DUP1 \t\t\trequire(token.transfer(recipie...\n      SWAP2 \t\t\trequire(token.transfer(recipie...\n      SUB \t\t\trequire(token.transfer(recipie...\n      SWAP1 \t\t\trequire(token.transfer(recipie...\n      REVERT \t\t\trequire(token.transfer(recipie...\n    tag 114\t\t\trequire(token.transfer(recipie...\n      JUMPDEST \t\t\trequire(token.transfer(recipie...\n      DUP1 \t\t\ti++\n      DUP1 \t\t\ti++\n      PUSH 1\t\t\ti++\n      ADD \t\t\ti++\n      SWAP2 \t\t\ti++\n      POP \t\t\ti++\n      POP \t\t\ti++\n      PUSH [tag] 96\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMP \t\t\tfor (uint256 i = 0; i < totalR...\n    tag 97\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMPDEST \t\t\tfor (uint256 i = 0; i < totalR...\n      POP \t\t\tfor (uint256 i = 0; i < totalR...\n      PUSH F16E4D5F82C54D462FFE3D21D1D2A968D757649029D89F7253094312837A6E8B\t\t\tBatchTransferSuccessful(totalR...\n      DUP4 \t\t\ttotalRecipients\n      DUP3 \t\t\ttotalAmount\n      TIMESTAMP \t\t\tblock.timestamp\n      PUSH 40\t\t\tBatchTransferSuccessful(totalR...\n      MLOAD \t\t\tBatchTransferSuccessful(totalR...\n      PUSH [tag] 116\t\t\tBatchTransferSuccessful(totalR...\n      SWAP4 \t\t\tBatchTransferSuccessful(totalR...\n      SWAP3 \t\t\tBatchTransferSuccessful(totalR...\n      SWAP2 \t\t\tBatchTransferSuccessful(totalR...\n      SWAP1 \t\t\tBatchTransferSuccessful(totalR...\n      PUSH [tag] 117\t\t\tBatchTransferSuccessful(totalR...\n      JUMP \t\t\tBatchTransferSuccessful(totalR...\n    tag 116\t\t\tBatchTransferSuccessful(totalR...\n      JUMPDEST \t\t\tBatchTransferSuccessful(totalR...\n      PUSH 40\t\t\tBatchTransferSuccessful(totalR...\n      MLOAD \t\t\tBatchTransferSuccessful(totalR...\n      DUP1 \t\t\tBatchTransferSuccessful(totalR...\n      SWAP2 \t\t\tBatchTransferSuccessful(totalR...\n      SUB \t\t\tBatchTransferSuccessful(totalR...\n      SWAP1 \t\t\tBatchTransferSuccessful(totalR...\n      LOG1 \t\t\tBatchTransferSuccessful(totalR...\n      PUSH 1\t\t\ttrue\n      SWAP4 \t\t\treturn true\n      POP \t\t\treturn true\n      POP \t\t\treturn true\n      POP \t\t\treturn true\n      POP \t\t\treturn true\n      SWAP6 \t\t\tfunction batchTransferToken(ad...\n      SWAP5 \t\t\tfunction batchTransferToken(ad...\n      POP \t\t\tfunction batchTransferToken(ad...\n      POP \t\t\tfunction batchTransferToken(ad...\n      POP \t\t\tfunction batchTransferToken(ad...\n      POP \t\t\tfunction batchTransferToken(ad...\n      POP \t\t\tfunction batchTransferToken(ad...\n      JUMP \t\t\tfunction batchTransferToken(ad...\n    tag 25\t\t\tfunction batchTransfer(address...\n      JUMPDEST \t\t\tfunction batchTransfer(address...\n      PUSH 0\t\t\tbool\n      PUSH 0\t\t\towner\n      PUSH 0\t\t\towner\n      SWAP1 \t\t\towner\n      SLOAD \t\t\towner\n      SWAP1 \t\t\towner\n      PUSH 100\t\t\towner\n      EXP \t\t\towner\n      SWAP1 \t\t\towner\n      DIV \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner\n      AND \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tmsg.sender == owner\n      AND \t\t\tmsg.sender == owner\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tmsg.sender == owner\n      AND \t\t\tmsg.sender == owner\n      EQ \t\t\tmsg.sender == owner\n      PUSH [tag] 119\t\t\trequire(msg.sender == owner, \"...\n      JUMPI \t\t\trequire(msg.sender == owner, \"...\n      PUSH 40\t\t\trequire(msg.sender == owner, \"...\n      MLOAD \t\t\trequire(msg.sender == owner, \"...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(msg.sender == owner, \"...\n      DUP2 \t\t\trequire(msg.sender == owner, \"...\n      MSTORE \t\t\trequire(msg.sender == owner, \"...\n      PUSH 4\t\t\trequire(msg.sender == owner, \"...\n      ADD \t\t\trequire(msg.sender == owner, \"...\n      PUSH [tag] 120\t\t\trequire(msg.sender == owner, \"...\n      SWAP1 \t\t\trequire(msg.sender == owner, \"...\n      PUSH [tag] 40\t\t\trequire(msg.sender == owner, \"...\n      JUMP \t\t\trequire(msg.sender == owner, \"...\n    tag 120\t\t\trequire(msg.sender == owner, \"...\n      JUMPDEST \t\t\trequire(msg.sender == owner, \"...\n      PUSH 40\t\t\trequire(msg.sender == owner, \"...\n      MLOAD \t\t\trequire(msg.sender == owner, \"...\n      DUP1 \t\t\trequire(msg.sender == owner, \"...\n      SWAP2 \t\t\trequire(msg.sender == owner, \"...\n      SUB \t\t\trequire(msg.sender == owner, \"...\n      SWAP1 \t\t\trequire(msg.sender == owner, \"...\n      REVERT \t\t\trequire(msg.sender == owner, \"...\n    tag 119\t\t\trequire(msg.sender == owner, \"...\n      JUMPDEST \t\t\trequire(msg.sender == owner, \"...\n      PUSH 0\t\t\tuint256 totalRecipients\n      DUP6 \t\t\trecipients\n      DUP6 \t\t\trecipients\n      SWAP1 \t\t\trecipients.length\n      POP \t\t\trecipients.length\n      SWAP1 \t\t\tuint256 totalRecipients = reci...\n      POP \t\t\tuint256 totalRecipients = reci...\n      DUP4 \t\t\tamounts\n      DUP4 \t\t\tamounts\n      SWAP1 \t\t\tamounts.length\n      POP \t\t\tamounts.length\n      DUP2 \t\t\ttotalRecipients\n      EQ \t\t\ttotalRecipients == amounts.len...\n      PUSH [tag] 122\t\t\trequire(totalRecipients == amo...\n      JUMPI \t\t\trequire(totalRecipients == amo...\n      PUSH 40\t\t\trequire(totalRecipients == amo...\n      MLOAD \t\t\trequire(totalRecipients == amo...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(totalRecipients == amo...\n      DUP2 \t\t\trequire(totalRecipients == amo...\n      MSTORE \t\t\trequire(totalRecipients == amo...\n      PUSH 4\t\t\trequire(totalRecipients == amo...\n      ADD \t\t\trequire(totalRecipients == amo...\n      PUSH [tag] 123\t\t\trequire(totalRecipients == amo...\n      SWAP1 \t\t\trequire(totalRecipients == amo...\n      PUSH [tag] 67\t\t\trequire(totalRecipients == amo...\n      JUMP \t\t\trequire(totalRecipients == amo...\n    tag 123\t\t\trequire(totalRecipients == amo...\n      JUMPDEST \t\t\trequire(totalRecipients == amo...\n      PUSH 40\t\t\trequire(totalRecipients == amo...\n      MLOAD \t\t\trequire(totalRecipients == amo...\n      DUP1 \t\t\trequire(totalRecipients == amo...\n      SWAP2 \t\t\trequire(totalRecipients == amo...\n      SUB \t\t\trequire(totalRecipients == amo...\n      SWAP1 \t\t\trequire(totalRecipients == amo...\n      REVERT \t\t\trequire(totalRecipients == amo...\n    tag 122\t\t\trequire(totalRecipients == amo...\n      JUMPDEST \t\t\trequire(totalRecipients == amo...\n      PUSH 7D0\t\t\t2000\n      DUP2 \t\t\ttotalRecipients\n      GT \t\t\ttotalRecipients <= 2000\n      ISZERO \t\t\ttotalRecipients <= 2000\n      PUSH [tag] 124\t\t\trequire(totalRecipients <= 200...\n      JUMPI \t\t\trequire(totalRecipients <= 200...\n      PUSH 40\t\t\trequire(totalRecipients <= 200...\n      MLOAD \t\t\trequire(totalRecipients <= 200...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(totalRecipients <= 200...\n      DUP2 \t\t\trequire(totalRecipients <= 200...\n      MSTORE \t\t\trequire(totalRecipients <= 200...\n      PUSH 4\t\t\trequire(totalRecipients <= 200...\n      ADD \t\t\trequire(totalRecipients <= 200...\n      PUSH [tag] 125\t\t\trequire(totalRecipients <= 200...\n      SWAP1 \t\t\trequire(totalRecipients <= 200...\n      PUSH [tag] 70\t\t\trequire(totalRecipients <= 200...\n      JUMP \t\t\trequire(totalRecipients <= 200...\n    tag 125\t\t\trequire(totalRecipients <= 200...\n      JUMPDEST \t\t\trequire(totalRecipients <= 200...\n      PUSH 40\t\t\trequire(totalRecipients <= 200...\n      MLOAD \t\t\trequire(totalRecipients <= 200...\n      DUP1 \t\t\trequire(totalRecipients <= 200...\n      SWAP2 \t\t\trequire(totalRecipients <= 200...\n      SUB \t\t\trequire(totalRecipients <= 200...\n      SWAP1 \t\t\trequire(totalRecipients <= 200...\n      REVERT \t\t\trequire(totalRecipients <= 200...\n    tag 124\t\t\trequire(totalRecipients <= 200...\n      JUMPDEST \t\t\trequire(totalRecipients <= 200...\n      PUSH 0\t\t\tuint256 totalAmount\n      PUSH 0\t\t\t0\n      SWAP1 \t\t\tuint256 totalAmount = 0\n      POP \t\t\tuint256 totalAmount = 0\n      PUSH 0\t\t\tuint256 i\n      PUSH 0\t\t\t0\n      SWAP1 \t\t\tuint256 i = 0\n      POP \t\t\tuint256 i = 0\n    tag 126\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMPDEST \t\t\tfor (uint256 i = 0; i < totalR...\n      DUP3 \t\t\ttotalRecipients\n      DUP2 \t\t\ti\n      LT \t\t\ti < totalRecipients\n      ISZERO \t\t\tfor (uint256 i = 0; i < totalR...\n      PUSH [tag] 127\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMPI \t\t\tfor (uint256 i = 0; i < totalR...\n      DUP6 \t\t\tamounts\n      DUP6 \t\t\tamounts\n      DUP3 \t\t\ti\n      DUP2 \t\t\tamounts[i]\n      DUP2 \t\t\tamounts[i]\n      LT \t\t\tamounts[i]\n      PUSH [tag] 129\t\t\tamounts[i]\n      JUMPI \t\t\tamounts[i]\n      PUSH [tag] 130\t\t\tamounts[i]\n      PUSH [tag] 76\t\t\tamounts[i]\n      JUMP \t\t\tamounts[i]\n    tag 130\t\t\tamounts[i]\n      JUMPDEST \t\t\tamounts[i]\n    tag 129\t\t\tamounts[i]\n      JUMPDEST \t\t\tamounts[i]\n      SWAP1 \t\t\tamounts[i]\n      POP \t\t\tamounts[i]\n      PUSH 20\t\t\tamounts[i]\n      MUL \t\t\tamounts[i]\n      ADD \t\t\tamounts[i]\n      CALLDATALOAD \t\t\tamounts[i]\n      DUP3 \t\t\ttotalAmount += amounts[i]\n      PUSH [tag] 131\t\t\ttotalAmount += amounts[i]\n      SWAP2 \t\t\ttotalAmount += amounts[i]\n      SWAP1 \t\t\ttotalAmount += amounts[i]\n      PUSH [tag] 78\t\t\ttotalAmount += amounts[i]\n      JUMP \t\t\ttotalAmount += amounts[i]\n    tag 131\t\t\ttotalAmount += amounts[i]\n      JUMPDEST \t\t\ttotalAmount += amounts[i]\n      SWAP2 \t\t\ttotalAmount += amounts[i]\n      POP \t\t\ttotalAmount += amounts[i]\n      DUP1 \t\t\ti++\n      DUP1 \t\t\ti++\n      PUSH 1\t\t\ti++\n      ADD \t\t\ti++\n      SWAP2 \t\t\ti++\n      POP \t\t\ti++\n      POP \t\t\ti++\n      PUSH [tag] 126\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMP \t\t\tfor (uint256 i = 0; i < totalR...\n    tag 127\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMPDEST \t\t\tfor (uint256 i = 0; i < totalR...\n      POP \t\t\tfor (uint256 i = 0; i < totalR...\n      DUP1 \t\t\ttotalAmount\n      CALLVALUE \t\t\tmsg.value\n      EQ \t\t\tmsg.value == totalAmount\n      PUSH [tag] 132\t\t\trequire(msg.value == totalAmou...\n      JUMPI \t\t\trequire(msg.value == totalAmou...\n      PUSH 40\t\t\trequire(msg.value == totalAmou...\n      MLOAD \t\t\trequire(msg.value == totalAmou...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(msg.value == totalAmou...\n      DUP2 \t\t\trequire(msg.value == totalAmou...\n      MSTORE \t\t\trequire(msg.value == totalAmou...\n      PUSH 4\t\t\trequire(msg.value == totalAmou...\n      ADD \t\t\trequire(msg.value == totalAmou...\n      PUSH [tag] 133\t\t\trequire(msg.value == totalAmou...\n      SWAP1 \t\t\trequire(msg.value == totalAmou...\n      PUSH [tag] 134\t\t\trequire(msg.value == totalAmou...\n      JUMP \t\t\trequire(msg.value == totalAmou...\n    tag 133\t\t\trequire(msg.value == totalAmou...\n      JUMPDEST \t\t\trequire(msg.value == totalAmou...\n      PUSH 40\t\t\trequire(msg.value == totalAmou...\n      MLOAD \t\t\trequire(msg.value == totalAmou...\n      DUP1 \t\t\trequire(msg.value == totalAmou...\n      SWAP2 \t\t\trequire(msg.value == totalAmou...\n      SUB \t\t\trequire(msg.value == totalAmou...\n      SWAP1 \t\t\trequire(msg.value == totalAmou...\n      REVERT \t\t\trequire(msg.value == totalAmou...\n    tag 132\t\t\trequire(msg.value == totalAmou...\n      JUMPDEST \t\t\trequire(msg.value == totalAmou...\n      PUSH 0\t\t\tbool success\n      PUSH 0\t\t\tuint256 i\n      PUSH 0\t\t\t0\n      SWAP1 \t\t\tuint256 i = 0\n      POP \t\t\tuint256 i = 0\n    tag 135\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMPDEST \t\t\tfor (uint256 i = 0; i < totalR...\n      DUP4 \t\t\ttotalRecipients\n      DUP2 \t\t\ti\n      LT \t\t\ti < totalRecipients\n      ISZERO \t\t\tfor (uint256 i = 0; i < totalR...\n      PUSH [tag] 136\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMPI \t\t\tfor (uint256 i = 0; i < totalR...\n      PUSH 0\t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\trecipients[i] != address(0)\n      AND \t\t\trecipients[i] != address(0)\n      DUP10 \t\t\trecipients\n      DUP10 \t\t\trecipients\n      DUP4 \t\t\ti\n      DUP2 \t\t\trecipients[i]\n      DUP2 \t\t\trecipients[i]\n      LT \t\t\trecipients[i]\n      PUSH [tag] 138\t\t\trecipients[i]\n      JUMPI \t\t\trecipients[i]\n      PUSH [tag] 139\t\t\trecipients[i]\n      PUSH [tag] 76\t\t\trecipients[i]\n      JUMP \t\t\trecipients[i]\n    tag 139\t\t\trecipients[i]\n      JUMPDEST \t\t\trecipients[i]\n    tag 138\t\t\trecipients[i]\n      JUMPDEST \t\t\trecipients[i]\n      SWAP1 \t\t\trecipients[i]\n      POP \t\t\trecipients[i]\n      PUSH 20\t\t\trecipients[i]\n      MUL \t\t\trecipients[i]\n      ADD \t\t\trecipients[i]\n      PUSH 20\t\t\trecipients[i]\n      DUP2 \t\t\trecipients[i]\n      ADD \t\t\trecipients[i]\n      SWAP1 \t\t\trecipients[i]\n      PUSH [tag] 140\t\t\trecipients[i]\n      SWAP2 \t\t\trecipients[i]\n      SWAP1 \t\t\trecipients[i]\n      PUSH [tag] 35\t\t\trecipients[i]\n      JUMP \t\t\trecipients[i]\n    tag 140\t\t\trecipients[i]\n      JUMPDEST \t\t\trecipients[i]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\trecipients[i] != address(0)\n      AND \t\t\trecipients[i] != address(0)\n      SUB \t\t\trecipients[i] != address(0)\n      PUSH [tag] 141\t\t\trequire(recipients[i] != addre...\n      JUMPI \t\t\trequire(recipients[i] != addre...\n      PUSH 40\t\t\trequire(recipients[i] != addre...\n      MLOAD \t\t\trequire(recipients[i] != addre...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(recipients[i] != addre...\n      DUP2 \t\t\trequire(recipients[i] != addre...\n      MSTORE \t\t\trequire(recipients[i] != addre...\n      PUSH 4\t\t\trequire(recipients[i] != addre...\n      ADD \t\t\trequire(recipients[i] != addre...\n      PUSH [tag] 142\t\t\trequire(recipients[i] != addre...\n      SWAP1 \t\t\trequire(recipients[i] != addre...\n      PUSH [tag] 104\t\t\trequire(recipients[i] != addre...\n      JUMP \t\t\trequire(recipients[i] != addre...\n    tag 142\t\t\trequire(recipients[i] != addre...\n      JUMPDEST \t\t\trequire(recipients[i] != addre...\n      PUSH 40\t\t\trequire(recipients[i] != addre...\n      MLOAD \t\t\trequire(recipients[i] != addre...\n      DUP1 \t\t\trequire(recipients[i] != addre...\n      SWAP2 \t\t\trequire(recipients[i] != addre...\n      SUB \t\t\trequire(recipients[i] != addre...\n      SWAP1 \t\t\trequire(recipients[i] != addre...\n      REVERT \t\t\trequire(recipients[i] != addre...\n    tag 141\t\t\trequire(recipients[i] != addre...\n      JUMPDEST \t\t\trequire(recipients[i] != addre...\n      DUP9 \t\t\trecipients\n      DUP9 \t\t\trecipients\n      DUP3 \t\t\ti\n      DUP2 \t\t\trecipients[i]\n      DUP2 \t\t\trecipients[i]\n      LT \t\t\trecipients[i]\n      PUSH [tag] 143\t\t\trecipients[i]\n      JUMPI \t\t\trecipients[i]\n      PUSH [tag] 144\t\t\trecipients[i]\n      PUSH [tag] 76\t\t\trecipients[i]\n      JUMP \t\t\trecipients[i]\n    tag 144\t\t\trecipients[i]\n      JUMPDEST \t\t\trecipients[i]\n    tag 143\t\t\trecipients[i]\n      JUMPDEST \t\t\trecipients[i]\n      SWAP1 \t\t\trecipients[i]\n      POP \t\t\trecipients[i]\n      PUSH 20\t\t\trecipients[i]\n      MUL \t\t\trecipients[i]\n      ADD \t\t\trecipients[i]\n      PUSH 20\t\t\trecipients[i]\n      DUP2 \t\t\trecipients[i]\n      ADD \t\t\trecipients[i]\n      SWAP1 \t\t\trecipients[i]\n      PUSH [tag] 145\t\t\trecipients[i]\n      SWAP2 \t\t\trecipients[i]\n      SWAP1 \t\t\trecipients[i]\n      PUSH [tag] 35\t\t\trecipients[i]\n      JUMP \t\t\trecipients[i]\n    tag 145\t\t\trecipients[i]\n      JUMPDEST \t\t\trecipients[i]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\trecipients[i].call\n      AND \t\t\trecipients[i].call\n      DUP8 \t\t\tamounts\n      DUP8 \t\t\tamounts\n      DUP4 \t\t\ti\n      DUP2 \t\t\tamounts[i]\n      DUP2 \t\t\tamounts[i]\n      LT \t\t\tamounts[i]\n      PUSH [tag] 146\t\t\tamounts[i]\n      JUMPI \t\t\tamounts[i]\n      PUSH [tag] 147\t\t\tamounts[i]\n      PUSH [tag] 76\t\t\tamounts[i]\n      JUMP \t\t\tamounts[i]\n    tag 147\t\t\tamounts[i]\n      JUMPDEST \t\t\tamounts[i]\n    tag 146\t\t\tamounts[i]\n      JUMPDEST \t\t\tamounts[i]\n      SWAP1 \t\t\tamounts[i]\n      POP \t\t\tamounts[i]\n      PUSH 20\t\t\tamounts[i]\n      MUL \t\t\tamounts[i]\n      ADD \t\t\tamounts[i]\n      CALLDATALOAD \t\t\tamounts[i]\n      PUSH 40\t\t\trecipients[i].call{value: amou...\n      MLOAD \t\t\trecipients[i].call{value: amou...\n      PUSH [tag] 148\t\t\trecipients[i].call{value: amou...\n      SWAP1 \t\t\trecipients[i].call{value: amou...\n      PUSH [tag] 44\t\t\trecipients[i].call{value: amou...\n      JUMP \t\t\trecipients[i].call{value: amou...\n    tag 148\t\t\trecipients[i].call{value: amou...\n      JUMPDEST \t\t\trecipients[i].call{value: amou...\n      PUSH 0\t\t\trecipients[i].call{value: amou...\n      PUSH 40\t\t\trecipients[i].call{value: amou...\n      MLOAD \t\t\trecipients[i].call{value: amou...\n      DUP1 \t\t\trecipients[i].call{value: amou...\n      DUP4 \t\t\trecipients[i].call{value: amou...\n      SUB \t\t\trecipients[i].call{value: amou...\n      DUP2 \t\t\trecipients[i].call{value: amou...\n      DUP6 \t\t\trecipients[i].call{value: amou...\n      DUP8 \t\t\trecipients[i].call{value: amou...\n      GAS \t\t\trecipients[i].call{value: amou...\n      CALL \t\t\trecipients[i].call{value: amou...\n      SWAP3 \t\t\trecipients[i].call{value: amou...\n      POP \t\t\trecipients[i].call{value: amou...\n      POP \t\t\trecipients[i].call{value: amou...\n      POP \t\t\trecipients[i].call{value: amou...\n      RETURNDATASIZE \t\t\trecipients[i].call{value: amou...\n      DUP1 \t\t\trecipients[i].call{value: amou...\n      PUSH 0\t\t\trecipients[i].call{value: amou...\n      DUP2 \t\t\trecipients[i].call{value: amou...\n      EQ \t\t\trecipients[i].call{value: amou...\n      PUSH [tag] 151\t\t\trecipients[i].call{value: amou...\n      JUMPI \t\t\trecipients[i].call{value: amou...\n      PUSH 40\t\t\trecipients[i].call{value: amou...\n      MLOAD \t\t\trecipients[i].call{value: amou...\n      SWAP2 \t\t\trecipients[i].call{value: amou...\n      POP \t\t\trecipients[i].call{value: amou...\n      PUSH 1F\t\t\trecipients[i].call{value: amou...\n      NOT \t\t\trecipients[i].call{value: amou...\n      PUSH 3F\t\t\trecipients[i].call{value: amou...\n      RETURNDATASIZE \t\t\trecipients[i].call{value: amou...\n      ADD \t\t\trecipients[i].call{value: amou...\n      AND \t\t\trecipients[i].call{value: amou...\n      DUP3 \t\t\trecipients[i].call{value: amou...\n      ADD \t\t\trecipients[i].call{value: amou...\n      PUSH 40\t\t\trecipients[i].call{value: amou...\n      MSTORE \t\t\trecipients[i].call{value: amou...\n      RETURNDATASIZE \t\t\trecipients[i].call{value: amou...\n      DUP3 \t\t\trecipients[i].call{value: amou...\n      MSTORE \t\t\trecipients[i].call{value: amou...\n      RETURNDATASIZE \t\t\trecipients[i].call{value: amou...\n      PUSH 0\t\t\trecipients[i].call{value: amou...\n      PUSH 20\t\t\trecipients[i].call{value: amou...\n      DUP5 \t\t\trecipients[i].call{value: amou...\n      ADD \t\t\trecipients[i].call{value: amou...\n      RETURNDATACOPY \t\t\trecipients[i].call{value: amou...\n      PUSH [tag] 150\t\t\trecipients[i].call{value: amou...\n      JUMP \t\t\trecipients[i].call{value: amou...\n    tag 151\t\t\trecipients[i].call{value: amou...\n      JUMPDEST \t\t\trecipients[i].call{value: amou...\n      PUSH 60\t\t\trecipients[i].call{value: amou...\n      SWAP2 \t\t\trecipients[i].call{value: amou...\n      POP \t\t\trecipients[i].call{value: amou...\n    tag 150\t\t\trecipients[i].call{value: amou...\n      JUMPDEST \t\t\trecipients[i].call{value: amou...\n      POP \t\t\trecipients[i].call{value: amou...\n      POP \t\t\t(success, ) = recipients[i].ca...\n      DUP1 \t\t\t(success, ) = recipients[i].ca...\n      SWAP3 \t\t\t(success, ) = recipients[i].ca...\n      POP \t\t\t(success, ) = recipients[i].ca...\n      POP \t\t\t(success, ) = recipients[i].ca...\n      DUP2 \t\t\tsuccess\n      PUSH [tag] 152\t\t\trequire(success, \"Transfer gag...\n      JUMPI \t\t\trequire(success, \"Transfer gag...\n      PUSH 40\t\t\trequire(success, \"Transfer gag...\n      MLOAD \t\t\trequire(success, \"Transfer gag...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(success, \"Transfer gag...\n      DUP2 \t\t\trequire(success, \"Transfer gag...\n      MSTORE \t\t\trequire(success, \"Transfer gag...\n      PUSH 4\t\t\trequire(success, \"Transfer gag...\n      ADD \t\t\trequire(success, \"Transfer gag...\n      PUSH [tag] 153\t\t\trequire(success, \"Transfer gag...\n      SWAP1 \t\t\trequire(success, \"Transfer gag...\n      PUSH [tag] 154\t\t\trequire(success, \"Transfer gag...\n      JUMP \t\t\trequire(success, \"Transfer gag...\n    tag 153\t\t\trequire(success, \"Transfer gag...\n      JUMPDEST \t\t\trequire(success, \"Transfer gag...\n      PUSH 40\t\t\trequire(success, \"Transfer gag...\n      MLOAD \t\t\trequire(success, \"Transfer gag...\n      DUP1 \t\t\trequire(success, \"Transfer gag...\n      SWAP2 \t\t\trequire(success, \"Transfer gag...\n      SUB \t\t\trequire(success, \"Transfer gag...\n      SWAP1 \t\t\trequire(success, \"Transfer gag...\n      REVERT \t\t\trequire(success, \"Transfer gag...\n    tag 152\t\t\trequire(success, \"Transfer gag...\n      JUMPDEST \t\t\trequire(success, \"Transfer gag...\n      DUP1 \t\t\ti++\n      DUP1 \t\t\ti++\n      PUSH 1\t\t\ti++\n      ADD \t\t\ti++\n      SWAP2 \t\t\ti++\n      POP \t\t\ti++\n      POP \t\t\ti++\n      PUSH [tag] 135\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMP \t\t\tfor (uint256 i = 0; i < totalR...\n    tag 136\t\t\tfor (uint256 i = 0; i < totalR...\n      JUMPDEST \t\t\tfor (uint256 i = 0; i < totalR...\n      POP \t\t\tfor (uint256 i = 0; i < totalR...\n      PUSH F16E4D5F82C54D462FFE3D21D1D2A968D757649029D89F7253094312837A6E8B\t\t\tBatchTransferSuccessful(totalR...\n      DUP4 \t\t\ttotalRecipients\n      DUP4 \t\t\ttotalAmount\n      TIMESTAMP \t\t\tblock.timestamp\n      PUSH 40\t\t\tBatchTransferSuccessful(totalR...\n      MLOAD \t\t\tBatchTransferSuccessful(totalR...\n      PUSH [tag] 155\t\t\tBatchTransferSuccessful(totalR...\n      SWAP4 \t\t\tBatchTransferSuccessful(totalR...\n      SWAP3 \t\t\tBatchTransferSuccessful(totalR...\n      SWAP2 \t\t\tBatchTransferSuccessful(totalR...\n      SWAP1 \t\t\tBatchTransferSuccessful(totalR...\n      PUSH [tag] 117\t\t\tBatchTransferSuccessful(totalR...\n      JUMP \t\t\tBatchTransferSuccessful(totalR...\n    tag 155\t\t\tBatchTransferSuccessful(totalR...\n      JUMPDEST \t\t\tBatchTransferSuccessful(totalR...\n      PUSH 40\t\t\tBatchTransferSuccessful(totalR...\n      MLOAD \t\t\tBatchTransferSuccessful(totalR...\n      DUP1 \t\t\tBatchTransferSuccessful(totalR...\n      SWAP2 \t\t\tBatchTransferSuccessful(totalR...\n      SUB \t\t\tBatchTransferSuccessful(totalR...\n      SWAP1 \t\t\tBatchTransferSuccessful(totalR...\n      LOG1 \t\t\tBatchTransferSuccessful(totalR...\n      PUSH 1\t\t\ttrue\n      SWAP4 \t\t\treturn true\n      POP \t\t\treturn true\n      POP \t\t\treturn true\n      POP \t\t\treturn true\n      POP \t\t\treturn true\n      SWAP5 \t\t\tfunction batchTransfer(address...\n      SWAP4 \t\t\tfunction batchTransfer(address...\n      POP \t\t\tfunction batchTransfer(address...\n      POP \t\t\tfunction batchTransfer(address...\n      POP \t\t\tfunction batchTransfer(address...\n      POP \t\t\tfunction batchTransfer(address...\n      JUMP \t\t\tfunction batchTransfer(address...\n    tag 29\t\t\taddress public owner\n      JUMPDEST \t\t\taddress public owner\n      PUSH 0\t\t\taddress public owner\n      PUSH 0\t\t\taddress public owner\n      SWAP1 \t\t\taddress public owner\n      SLOAD \t\t\taddress public owner\n      SWAP1 \t\t\taddress public owner\n      PUSH 100\t\t\taddress public owner\n      EXP \t\t\taddress public owner\n      SWAP1 \t\t\taddress public owner\n      DIV \t\t\taddress public owner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\taddress public owner\n      AND \t\t\taddress public owner\n      DUP2 \t\t\taddress public owner\n      JUMP \t\t\taddress public owner\n    tag 36\t\t\tfunction transferOwnership(add...\n      JUMPDEST \t\t\tfunction transferOwnership(add...\n      PUSH 0\t\t\towner\n      PUSH 0\t\t\towner\n      SWAP1 \t\t\towner\n      SLOAD \t\t\towner\n      SWAP1 \t\t\towner\n      PUSH 100\t\t\towner\n      EXP \t\t\towner\n      SWAP1 \t\t\towner\n      DIV \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner\n      AND \t\t\towner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tmsg.sender == owner\n      AND \t\t\tmsg.sender == owner\n      CALLER \t\t\tmsg.sender\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tmsg.sender == owner\n      AND \t\t\tmsg.sender == owner\n      EQ \t\t\tmsg.sender == owner\n      PUSH [tag] 157\t\t\trequire(msg.sender == owner, \"...\n      JUMPI \t\t\trequire(msg.sender == owner, \"...\n      PUSH 40\t\t\trequire(msg.sender == owner, \"...\n      MLOAD \t\t\trequire(msg.sender == owner, \"...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(msg.sender == owner, \"...\n      DUP2 \t\t\trequire(msg.sender == owner, \"...\n      MSTORE \t\t\trequire(msg.sender == owner, \"...\n      PUSH 4\t\t\trequire(msg.sender == owner, \"...\n      ADD \t\t\trequire(msg.sender == owner, \"...\n      PUSH [tag] 158\t\t\trequire(msg.sender == owner, \"...\n      SWAP1 \t\t\trequire(msg.sender == owner, \"...\n      PUSH [tag] 40\t\t\trequire(msg.sender == owner, \"...\n      JUMP \t\t\trequire(msg.sender == owner, \"...\n    tag 158\t\t\trequire(msg.sender == owner, \"...\n      JUMPDEST \t\t\trequire(msg.sender == owner, \"...\n      PUSH 40\t\t\trequire(msg.sender == owner, \"...\n      MLOAD \t\t\trequire(msg.sender == owner, \"...\n      DUP1 \t\t\trequire(msg.sender == owner, \"...\n      SWAP2 \t\t\trequire(msg.sender == owner, \"...\n      SUB \t\t\trequire(msg.sender == owner, \"...\n      SWAP1 \t\t\trequire(msg.sender == owner, \"...\n      REVERT \t\t\trequire(msg.sender == owner, \"...\n    tag 157\t\t\trequire(msg.sender == owner, \"...\n      JUMPDEST \t\t\trequire(msg.sender == owner, \"...\n      PUSH 0\t\t\t0\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tnewOwner != address(0)\n      AND \t\t\tnewOwner != address(0)\n      DUP2 \t\t\tnewOwner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tnewOwner != address(0)\n      AND \t\t\tnewOwner != address(0)\n      SUB \t\t\tnewOwner != address(0)\n      PUSH [tag] 160\t\t\trequire(newOwner != address(0)...\n      JUMPI \t\t\trequire(newOwner != address(0)...\n      PUSH 40\t\t\trequire(newOwner != address(0)...\n      MLOAD \t\t\trequire(newOwner != address(0)...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(newOwner != address(0)...\n      DUP2 \t\t\trequire(newOwner != address(0)...\n      MSTORE \t\t\trequire(newOwner != address(0)...\n      PUSH 4\t\t\trequire(newOwner != address(0)...\n      ADD \t\t\trequire(newOwner != address(0)...\n      PUSH [tag] 161\t\t\trequire(newOwner != address(0)...\n      SWAP1 \t\t\trequire(newOwner != address(0)...\n      PUSH [tag] 162\t\t\trequire(newOwner != address(0)...\n      JUMP \t\t\trequire(newOwner != address(0)...\n    tag 161\t\t\trequire(newOwner != address(0)...\n      JUMPDEST \t\t\trequire(newOwner != address(0)...\n      PUSH 40\t\t\trequire(newOwner != address(0)...\n      MLOAD \t\t\trequire(newOwner != address(0)...\n      DUP1 \t\t\trequire(newOwner != address(0)...\n      SWAP2 \t\t\trequire(newOwner != address(0)...\n      SUB \t\t\trequire(newOwner != address(0)...\n      SWAP1 \t\t\trequire(newOwner != address(0)...\n      REVERT \t\t\trequire(newOwner != address(0)...\n    tag 160\t\t\trequire(newOwner != address(0)...\n      JUMPDEST \t\t\trequire(newOwner != address(0)...\n      DUP1 \t\t\tnewOwner\n      PUSH 0\t\t\towner\n      PUSH 0\t\t\towner\n      PUSH 100\t\t\towner = newOwner\n      EXP \t\t\towner = newOwner\n      DUP2 \t\t\towner = newOwner\n      SLOAD \t\t\towner = newOwner\n      DUP2 \t\t\towner = newOwner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner = newOwner\n      MUL \t\t\towner = newOwner\n      NOT \t\t\towner = newOwner\n      AND \t\t\towner = newOwner\n      SWAP1 \t\t\towner = newOwner\n      DUP4 \t\t\towner = newOwner\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\towner = newOwner\n      AND \t\t\towner = newOwner\n      MUL \t\t\towner = newOwner\n      OR \t\t\towner = newOwner\n      SWAP1 \t\t\towner = newOwner\n      SSTORE \t\t\towner = newOwner\n      POP \t\t\towner = newOwner\n      POP \t\t\tfunction transferOwnership(add...\n      JUMP \t\t\tfunction transferOwnership(add...\n    tag 164\t\t\tr\\r\\n * @dev Smart contract un...\n      JUMPDEST \t\t\tr\\r\\n * @dev Smart contract un...\n      PUSH 0\t\t\tn\n      PUSH 0\t\t\tn\n      REVERT \t\t\tuk jaringan \n    tag 165\t\t\tz\\r\\n */\\r\\ncontract BatchTran...\n      JUMPDEST \t\t\tz\\r\\n */\\r\\ncontract BatchTran...\n      PUSH 0\t\t\tb\n      PUSH 0\t\t\tl\n      REVERT \t\t\ttiap kali ba\n    tag 166\t\t\t berhasil dilakukan\\r\\n    eve...\n      JUMPDEST \t\t\t berhasil dilakukan\\r\\n    eve...\n      PUSH 0\t\t\transfer\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t, uint256 totalAmount, uint256...\n      DUP3 \t\t\tdress\n      AND \t\t\talAddresses, uint256 totalAmou...\n      SWAP1 \t\t\tuint256 totalAddresses, uint25...\n      POP \t\t\tuint256 totalAddresses, uint25...\n      SWAP2 \t\t\t berhasil dilakukan\\r\\n    eve...\n      SWAP1 \t\t\t berhasil dilakukan\\r\\n    eve...\n      POP \t\t\t berhasil dilakukan\\r\\n    eve...\n      JUMP \t\t\t berhasil dilakukan\\r\\n    eve...\n    tag 167\t\t\t/ Modifier untuk memastikan ha...\n      JUMPDEST \t\t\t/ Modifier untuk memastikan ha...\n      PUSH 0\t\t\ter yang\n      PUSH [tag] 218\t\t\t tertentu\\r\\n    modifier \n      DUP3 \t\t\tifier\n      PUSH [tag] 166\t\t\t tertentu\\r\\n    modifier \n      JUMP \t\t\t tertentu\\r\\n    modifier \n    tag 218\t\t\t tertentu\\r\\n    modifier \n      JUMPDEST \t\t\t tertentu\\r\\n    modifier \n      SWAP1 \t\t\tkses fungsi tertentu\\r\\n    mo...\n      POP \t\t\tkses fungsi tertentu\\r\\n    mo...\n      SWAP2 \t\t\t/ Modifier untuk memastikan ha...\n      SWAP1 \t\t\t/ Modifier untuk memastikan ha...\n      POP \t\t\t/ Modifier untuk memastikan ha...\n      JUMP \t\t\t/ Modifier untuk memastikan ha...\n    tag 168\t\t\t{\\r\\n        require(msg.sende...\n      JUMPDEST \t\t\t{\\r\\n        require(msg.sende...\n      PUSH [tag] 220\t\t\t fungsi ini\");\\r\\n        \n      DUP2 \t\t\t     \n      PUSH [tag] 167\t\t\t fungsi ini\");\\r\\n        \n      JUMP \t\t\t fungsi ini\");\\r\\n        \n    tag 220\t\t\t fungsi ini\");\\r\\n        \n      JUMPDEST \t\t\t fungsi ini\");\\r\\n        \n      DUP2 \t\t\tngaks\n      EQ \t\t\t mengakses fungsi ini\");\\r\\n  ...\n      PUSH [tag] 221\t\t\tyang dapat mengakses fungsi in...\n      JUMPI \t\t\tyang dapat mengakses fungsi in...\n      PUSH 0\t\t\t\\r\n      PUSH 0\t\t\t \n      REVERT \t\t\t   }\\r\\n    \\r\\n\n    tag 221\t\t\tyang dapat mengakses fungsi in...\n      JUMPDEST \t\t\tyang dapat mengakses fungsi in...\n      POP \t\t\t{\\r\\n        require(msg.sende...\n      JUMP \t\t\t{\\r\\n        require(msg.sende...\n    tag 169\t\t\tctor untuk menetapkan owner ko...\n      JUMPDEST \t\t\tctor untuk menetapkan owner ko...\n      PUSH 0\t\t\tructo\n      DUP2 \t\t\t;\\r\\n   \n      CALLDATALOAD \t\t\t = msg.sender;\\r\\n    \n      SWAP1 \t\t\t    owner = msg.sender;\\r\\n   ...\n      POP \t\t\t    owner = msg.sender;\\r\\n   ...\n      PUSH [tag] 223\t\t\t    /**\\r\\n     * @dev Fungsi ...\n      DUP2 \t\t\t untu\n      PUSH [tag] 168\t\t\t    /**\\r\\n     * @dev Fungsi ...\n      JUMP \t\t\t    /**\\r\\n     * @dev Fungsi ...\n    tag 223\t\t\t    /**\\r\\n     * @dev Fungsi ...\n      JUMPDEST \t\t\t    /**\\r\\n     * @dev Fungsi ...\n      SWAP3 \t\t\tctor untuk menetapkan owner ko...\n      SWAP2 \t\t\tctor untuk menetapkan owner ko...\n      POP \t\t\tctor untuk menetapkan owner ko...\n      POP \t\t\tctor untuk menetapkan owner ko...\n      JUMP \t\t\tctor untuk menetapkan owner ko...\n    tag 170\t\t\tner kontrak\\r\\n     * @param n...\n      JUMPDEST \t\t\tner kontrak\\r\\n     * @param n...\n      PUSH 0\t\t\tlamat o\n      DUP2 \t\t\t  fun\n      SWAP1 \t\t\t     */\\r\\n    fun\n      POP \t\t\t     */\\r\\n    fun\n      SWAP2 \t\t\tner kontrak\\r\\n     * @param n...\n      SWAP1 \t\t\tner kontrak\\r\\n     * @param n...\n      POP \t\t\tner kontrak\\r\\n     * @param n...\n      JUMP \t\t\tner kontrak\\r\\n     * @param n...\n    tag 171\t\t\terOwnership(address newOwner) ...\n      JUMPDEST \t\t\terOwnership(address newOwner) ...\n      PUSH [tag] 226\t\t\tr != address(0), \"Alamat\n      DUP2 \t\t\tAlama\n      PUSH [tag] 170\t\t\tr != address(0), \"Alamat\n      JUMP \t\t\tr != address(0), \"Alamat\n    tag 226\t\t\tr != address(0), \"Alamat\n      JUMPDEST \t\t\tr != address(0), \"Alamat\n      DUP2 \t\t\tnewOw\n      EQ \t\t\tre(newOwner != address(0), \"Al...\n      PUSH [tag] 227\t\t\t     require(newOwner != addre...\n      JUMPI \t\t\t     require(newOwner != addre...\n      PUSH 0\t\t\ta\n      PUSH 0\t\t\tt\n      REVERT \t\t\tr baru tidak\n    tag 227\t\t\t     require(newOwner != addre...\n      JUMPDEST \t\t\t     require(newOwner != addre...\n      POP \t\t\terOwnership(address newOwner) ...\n      JUMP \t\t\terOwnership(address newOwner) ...\n    tag 172\t\t\tnol\");\\r\\n        owner = newO...\n      JUMPDEST \t\t\tnol\");\\r\\n        owner = newO...\n      PUSH 0\t\t\t\\r\\n   \n      DUP2 \t\t\tngirim\n      CALLDATALOAD \t\t\tngsi untuk mengirim \n      SWAP1 \t\t\t* @dev Fungsi untuk mengirim \n      POP \t\t\t* @dev Fungsi untuk mengirim \n      PUSH [tag] 229\t\t\tken ke banyak alamat sekaligus...\n      DUP2 \t\t\tgus\\r\\n\n      PUSH [tag] 171\t\t\tken ke banyak alamat sekaligus...\n      JUMP \t\t\tken ke banyak alamat sekaligus...\n    tag 229\t\t\tken ke banyak alamat sekaligus...\n      JUMPDEST \t\t\tken ke banyak alamat sekaligus...\n      SWAP3 \t\t\tnol\");\\r\\n        owner = newO...\n      SWAP2 \t\t\tnol\");\\r\\n        owner = newO...\n      POP \t\t\tnol\");\\r\\n        owner = newO...\n      POP \t\t\tnol\");\\r\\n        owner = newO...\n      JUMP \t\t\tnol\");\\r\\n        owner = newO...\n    tag 13\t\t\t recipients Array alamat pener...\n      JUMPDEST \t\t\t recipients Array alamat pener...\n      PUSH 0\t\t\th yang\n      PUSH 0\t\t\tikirim\n      PUSH 40\t\t\tst\n      DUP4 \t\t\t  * @retu\n      DUP6 \t\t\trima\\r\\n \n      SUB \t\t\tpenerima\\r\\n     * @retur\n      SLT \t\t\ting penerima\\r\\n     * @return...\n      ISZERO \t\t\tmasing penerima\\r\\n     * @ret...\n      PUSH [tag] 231\t\t\tmasing penerima\\r\\n     * @ret...\n      JUMPI \t\t\tmasing penerima\\r\\n     * @ret...\n      PUSH [tag] 232\t\t\t Boolean yang menunjukkan kebe...\n      PUSH [tag] 164\t\t\t Boolean yang menunjukkan kebe...\n      JUMP \t\t\t Boolean yang menunjukkan kebe...\n    tag 232\t\t\t Boolean yang menunjukkan kebe...\n      JUMPDEST \t\t\t Boolean yang menunjukkan kebe...\n    tag 231\t\t\tmasing penerima\\r\\n     * @ret...\n      JUMPDEST \t\t\tmasing penerima\\r\\n     * @ret...\n      PUSH 0\t\t\tt\n      PUSH [tag] 233\t\t\texternal payable onlyOwner ret...\n      DUP6 \t\t\t       \n      DUP3 \t\t\tbool) \n      DUP7 \t\t\tr returns\n      ADD \t\t\tOwner returns (bool) {\n      PUSH [tag] 169\t\t\texternal payable onlyOwner ret...\n      JUMP \t\t\texternal payable onlyOwner ret...\n    tag 233\t\t\texternal payable onlyOwner ret...\n      JUMPDEST \t\t\texternal payable onlyOwner ret...\n      SWAP3 \t\t\t amounts) external payable onl...\n      POP \t\t\t amounts) external payable onl...\n      POP \t\t\tss[] calldata recipients, uint...\n      PUSH 20\t\t\t  \n      PUSH [tag] 234\t\t\tsi bahwa panjang array recipie...\n      DUP6 \t\t\t sama\\r\\n\n      DUP3 \t\t\tn amou\n      DUP7 \t\t\tcipients \n      ADD \t\t\ty recipients dan amoun\n      PUSH [tag] 172\t\t\tsi bahwa panjang array recipie...\n      JUMP \t\t\tsi bahwa panjang array recipie...\n    tag 234\t\t\tsi bahwa panjang array recipie...\n      JUMPDEST \t\t\tsi bahwa panjang array recipie...\n      SWAP2 \t\t\t/ Verifikasi bahwa panjang arr...\n      POP \t\t\t/ Verifikasi bahwa panjang arr...\n      POP \t\t\tnts = recipients.length;\\r\\n  ...\n      SWAP3 \t\t\t recipients Array alamat pener...\n      POP \t\t\t recipients Array alamat pener...\n      SWAP3 \t\t\t recipients Array alamat pener...\n      SWAP1 \t\t\t recipients Array alamat pener...\n      POP \t\t\t recipients Array alamat pener...\n      JUMP \t\t\t recipients Array alamat pener...\n    tag 173\t\t\tipients == amounts.length, \"Pa...\n      JUMPDEST \t\t\tipients == amounts.length, \"Pa...\n      PUSH 0\t\t\ts\n      PUSH 0\t\t\ti\n      REVERT \t\t\t/ Verifikasi\n    tag 174\t\t\tmum alamat penerima untuk efis...\n      JUMPDEST \t\t\tmum alamat penerima untuk efis...\n      PUSH 0\t\t\ti\n      PUSH 0\t\t\tn\n      REVERT \t\t\tamat penerim\n    tag 175\t\t\t batch\");\\r\\n        \\r\\n     ...\n      JUMPDEST \t\t\t batch\");\\r\\n        \\r\\n     ...\n      PUSH 0\t\t\tu\n      PUSH 0\t\t\tA\n      REVERT \t\t\t6 totalAmoun\n    tag 176\t\t\ti = 0; i < totalRecipients; i+...\n      JUMPDEST \t\t\ti = 0; i < totalRecipients; i+...\n      PUSH 0\t\t\t;\\r\\n     \n      PUSH 0\t\t\t }\\r\\n  \n      DUP4 \t\t\tal \n      PUSH 1F\t\t\tt, \"\n      DUP5 \t\t\ttalAmo\n      ADD \t\t\t= totalAmount, \"T\n      SLT \t\t\tue == totalAmount, \"Total a\n      PUSH [tag] 239\t\t\tre(msg.value == totalAmount, \"...\n      JUMPI \t\t\tre(msg.value == totalAmount, \"...\n      PUSH [tag] 240\t\t\tt harus sama dengan nilai yang...\n      PUSH [tag] 173\t\t\tt harus sama dengan nilai yang...\n      JUMP \t\t\tt harus sama dengan nilai yang...\n    tag 240\t\t\tt harus sama dengan nilai yang...\n      JUMPDEST \t\t\tt harus sama dengan nilai yang...\n    tag 239\t\t\tre(msg.value == totalAmount, \"...\n      JUMPDEST \t\t\tre(msg.value == totalAmount, \"...\n      DUP3 \t\t\t bool \n      CALLDATALOAD \t\t\tamat\\r\\n        bool s\n      SWAP1 \t\t\t-masing alamat\\r\\n        bool...\n      POP \t\t\t-masing alamat\\r\\n        bool...\n      PUSH FFFFFFFFFFFFFFFF\t\t\tint256 i = 0; i < \n      DUP2 \t\t\t  for \n      GT \t\t\t     for (uint256 i = 0; i < t\n      ISZERO \t\t\t        for (uint256 i = 0; i ...\n      PUSH [tag] 241\t\t\t        for (uint256 i = 0; i ...\n      JUMPI \t\t\t        for (uint256 i = 0; i ...\n      PUSH [tag] 242\t\t\tlRecipients; i++) {\\r\\n       ...\n      PUSH [tag] 174\t\t\tlRecipients; i++) {\\r\\n       ...\n      JUMP \t\t\tlRecipients; i++) {\\r\\n       ...\n    tag 242\t\t\tlRecipients; i++) {\\r\\n       ...\n      JUMPDEST \t\t\tlRecipients; i++) {\\r\\n       ...\n    tag 241\t\t\t        for (uint256 i = 0; i ...\n      JUMPDEST \t\t\t        for (uint256 i = 0; i ...\n      PUSH 20\t\t\tmat \n      DUP4 \t\t\t0), \"A\n      ADD \t\t\tess(0), \"Alamat p\n      SWAP2 \t\t\ts[i] != address(0), \"Alamat p\n      POP \t\t\ts[i] != address(0), \"Alamat p\n      DUP4 \t\t\t   \n      PUSH 20\t\t\t    \n      DUP3 \t\t\t\\r\\n    \n      MUL \t\t\tl\");\\r\\n           \n      DUP4 \t\t\t alamat \n      ADD \t\t\toleh alamat nol\");\\r\\n        ...\n      GT \t\t\tk boleh alamat nol\");\\r\\n     ...\n      ISZERO \t\t\tidak boleh alamat nol\");\\r\\n  ...\n      PUSH [tag] 243\t\t\tidak boleh alamat nol\");\\r\\n  ...\n      JUMPI \t\t\tidak boleh alamat nol\");\\r\\n  ...\n      PUSH [tag] 244\t\t\t     // Kirim token ke alamat ...\n      PUSH [tag] 175\t\t\t     // Kirim token ke alamat ...\n      JUMP \t\t\t     // Kirim token ke alamat ...\n    tag 244\t\t\t     // Kirim token ke alamat ...\n      JUMPDEST \t\t\t     // Kirim token ke alamat ...\n    tag 243\t\t\tidak boleh alamat nol\");\\r\\n  ...\n      JUMPDEST \t\t\tidak boleh alamat nol\");\\r\\n  ...\n      SWAP3 \t\t\ti = 0; i < totalRecipients; i+...\n      POP \t\t\ti = 0; i < totalRecipients; i+...\n      SWAP3 \t\t\ti = 0; i < totalRecipients; i+...\n      SWAP1 \t\t\ti = 0; i < totalRecipients; i+...\n      POP \t\t\ti = 0; i < totalRecipients; i+...\n      JUMP \t\t\ti = 0; i < totalRecipients; i+...\n    tag 177\t\t\t            require(success, \"...\n      JUMPDEST \t\t\t            require(success, \"...\n      PUSH 0\t\t\t     // \n      PUSH 0\t\t\tit eve\n      DUP4 \t\t\temi\n      PUSH 1F\t\t\t    \n      DUP5 \t\t\thasil\\r\n      ADD \t\t\t berhasil\\r\\n      \n      SLT \t\t\tsfer berhasil\\r\\n        emit\n      PUSH [tag] 246\t\t\tsemua transfer berhasil\\r\\n   ...\n      JUMPI \t\t\tsemua transfer berhasil\\r\\n   ...\n      PUSH [tag] 247\t\t\tchTransferSuccessful(totalReci...\n      PUSH [tag] 173\t\t\tchTransferSuccessful(totalReci...\n      JUMP \t\t\tchTransferSuccessful(totalReci...\n    tag 247\t\t\tchTransferSuccessful(totalReci...\n      JUMPDEST \t\t\tchTransferSuccessful(totalReci...\n    tag 246\t\t\tsemua transfer berhasil\\r\\n   ...\n      JUMPDEST \t\t\tsemua transfer berhasil\\r\\n   ...\n      DUP3 \t\t\t\\r\\n    \n      CALLDATALOAD \t\t\t\\r\\n    }\\r\\n    \\r\\n    /\n      SWAP1 \t\t\tturn true;\\r\\n    }\\r\\n    \\r\\...\n      POP \t\t\tturn true;\\r\\n    }\\r\\n    \\r\\...\n      PUSH FFFFFFFFFFFFFFFF\t\t\tuntuk mengirim tok\n      DUP2 \t\t\t Fungs\n      GT \t\t\tdev Fungsi untuk mengirim toke\n      ISZERO \t\t\t* @dev Fungsi untuk mengirim t...\n      PUSH [tag] 248\t\t\t* @dev Fungsi untuk mengirim t...\n      JUMPI \t\t\t* @dev Fungsi untuk mengirim t...\n      PUSH [tag] 249\t\t\tRC20 ke banyak alamat sekaligu...\n      PUSH [tag] 174\t\t\tRC20 ke banyak alamat sekaligu...\n      JUMP \t\t\tRC20 ke banyak alamat sekaligu...\n    tag 249\t\t\tRC20 ke banyak alamat sekaligu...\n      JUMPDEST \t\t\tRC20 ke banyak alamat sekaligu...\n    tag 248\t\t\t* @dev Fungsi untuk mengirim t...\n      JUMPDEST \t\t\t* @dev Fungsi untuk mengirim t...\n      PUSH 20\t\t\tlama\n      DUP4 \t\t\t Array\n      ADD \t\t\tents Array alamat\n      SWAP2 \t\t\tparam recipients Array alamat\n      POP \t\t\tparam recipients Array alamat\n      DUP4 \t\t\ten \n      PUSH 20\t\t\tmlah\n      DUP3 \t\t\tArray \n      MUL \t\t\tnts Array jumlah \n      DUP4 \t\t\tparam am\n      ADD \t\t\t * @param amounts Array jumlah...\n      GT \t\t\t    * @param amounts Array jum...\n      ISZERO \t\t\t\\r\\n     * @param amounts Arra...\n      PUSH [tag] 250\t\t\t\\r\\n     * @param amounts Arra...\n      JUMPI \t\t\t\\r\\n     * @param amounts Arra...\n      PUSH [tag] 251\t\t\t dikirim ke masing-masing pene...\n      PUSH [tag] 175\t\t\t dikirim ke masing-masing pene...\n      JUMP \t\t\t dikirim ke masing-masing pene...\n    tag 251\t\t\t dikirim ke masing-masing pene...\n      JUMPDEST \t\t\t dikirim ke masing-masing pene...\n    tag 250\t\t\t\\r\\n     * @param amounts Arra...\n      JUMPDEST \t\t\t\\r\\n     * @param amounts Arra...\n      SWAP3 \t\t\t            require(success, \"...\n      POP \t\t\t            require(success, \"...\n      SWAP3 \t\t\t            require(success, \"...\n      SWAP1 \t\t\t            require(success, \"...\n      POP \t\t\t            require(success, \"...\n      JUMP \t\t\t            require(success, \"...\n    tag 18\t\t\tan transaksi\\r\\n     */\\r\\n   ...\n      JUMPDEST \t\t\tan transaksi\\r\\n     */\\r\\n   ...\n      PUSH 0\t\t\tnts) e\n      PUSH 0\t\t\ternal \n      PUSH 0\t\t\tlyOwne\n      PUSH 0\t\t\treturn\n      PUSH 0\t\t\t(bool)\n      PUSH 60\t\t\tie\n      DUP7 \t\t\tents = re\n      DUP9 \t\t\ttalReci\n      SUB \t\t\t6 totalRecipients = rec\n      SLT \t\t\tnt256 totalRecipients = recipi...\n      ISZERO \t\t\t uint256 totalRecipients = rec...\n      PUSH [tag] 253\t\t\t uint256 totalRecipients = rec...\n      JUMPI \t\t\t uint256 totalRecipients = rec...\n      PUSH [tag] 254\t\t\tlength;\\r\\n        \\r\\n       ...\n      PUSH [tag] 164\t\t\tlength;\\r\\n        \\r\\n       ...\n      JUMP \t\t\tlength;\\r\\n        \\r\\n       ...\n    tag 254\t\t\tlength;\\r\\n        \\r\\n       ...\n      JUMPDEST \t\t\tlength;\\r\\n        \\r\\n       ...\n    tag 253\t\t\t uint256 totalRecipients = rec...\n      JUMPDEST \t\t\t uint256 totalRecipients = rec...\n      PUSH 0\t\t\ts\n      PUSH [tag] 255\t\t\tjang array recipients dan amou...\n      DUP9 \t\t\t);\\r\\n   \n      DUP3 \t\t\trus sa\n      DUP10 \t\t\t amounts \n      ADD \t\t\t dan amounts harus sam\n      PUSH [tag] 169\t\t\tjang array recipients dan amou...\n      JUMP \t\t\tjang array recipients dan amou...\n    tag 255\t\t\tjang array recipients dan amou...\n      JUMPDEST \t\t\tjang array recipients dan amou...\n      SWAP6 \t\t\tngth, \"Panjang array recipient...\n      POP \t\t\tngth, \"Panjang array recipient...\n      POP \t\t\t       require(totalRecipients...\n      PUSH 20\t\t\ts\\r\n      DUP7 \t\t\tfisiensi \n      ADD \t\t\tuk efisiensi gas\\r\\n\n      CALLDATALOAD \t\t\t penerima untuk efisiensi gas\\...\n      PUSH FFFFFFFFFFFFFFFF\t\t\tnts <= 2000, \"Maks\n      DUP2 \t\t\tlRecip\n      GT \t\t\totalRecipients <= 2000, \"Maksi\n      ISZERO \t\t\te(totalRecipients <= 2000, \"Ma...\n      PUSH [tag] 256\t\t\te(totalRecipients <= 2000, \"Ma...\n      JUMPI \t\t\te(totalRecipients <= 2000, \"Ma...\n      PUSH [tag] 257\t\t\t 2000 alamat penerima dalam sa...\n      PUSH [tag] 165\t\t\t 2000 alamat penerima dalam sa...\n      JUMP \t\t\t 2000 alamat penerima dalam sa...\n    tag 257\t\t\t 2000 alamat penerima dalam sa...\n      JUMPDEST \t\t\t 2000 alamat penerima dalam sa...\n    tag 256\t\t\te(totalRecipients <= 2000, \"Ma...\n      JUMPDEST \t\t\te(totalRecipients <= 2000, \"Ma...\n      PUSH [tag] 258\t\t\t20 token = IERC20(tokenAddress...\n      DUP9 \t\t\t= 0;\\r\\n \n      DUP3 \t\t\talAmou\n      DUP10 \t\t\tuint256 t\n      ADD \t\t\t    uint256 totalAmoun\n      PUSH [tag] 176\t\t\t20 token = IERC20(tokenAddress...\n      JUMP \t\t\t20 token = IERC20(tokenAddress...\n    tag 258\t\t\t20 token = IERC20(tokenAddress...\n      JUMPDEST \t\t\t20 token = IERC20(tokenAddress...\n      SWAP5 \t\t\tRC20\\r\\n        IERC20 token =...\n      POP \t\t\tRC20\\r\\n        IERC20 token =...\n      SWAP5 \t\t\tRC20\\r\\n        IERC20 token =...\n      POP \t\t\tRC20\\r\\n        IERC20 token =...\n      POP \t\t\tifikasi batas maksimum alamat ...\n      PUSH 40\t\t\tt \n      DUP7 \t\t\t totalAmo\n      ADD \t\t\t     totalAmount +\n      CALLDATALOAD \t\t\t+) {\\r\\n            totalAmoun...\n      PUSH FFFFFFFFFFFFFFFF\t\t\t      \\r\\n        //\n      DUP2 \t\t\t   }\\r\\n\n      GT \t\t\t      }\\r\\n        \\r\\n       ...\n      ISZERO \t\t\t\\n        }\\r\\n        \\r\\n   ...\n      PUSH [tag] 259\t\t\t\\n        }\\r\\n        \\r\\n   ...\n      JUMPI \t\t\t\\n        }\\r\\n        \\r\\n   ...\n      PUSH [tag] 260\t\t\tifikasi kontrak memiliki allow...\n      PUSH [tag] 165\t\t\tifikasi kontrak memiliki allow...\n      JUMP \t\t\tifikasi kontrak memiliki allow...\n    tag 260\t\t\tifikasi kontrak memiliki allow...\n      JUMPDEST \t\t\tifikasi kontrak memiliki allow...\n    tag 259\t\t\t\\n        }\\r\\n        \\r\\n   ...\n      JUMPDEST \t\t\t\\n        }\\r\\n        \\r\\n   ...\n      PUSH [tag] 261\t\t\tlAmount, \"Allowance token tida...\n      DUP9 \t\t\ttoken d\n      DUP3 \t\t\tTransf\n      DUP10 \t\t\t        /\n      ADD \t\t\t  \\r\\n        // Transfe\n      PUSH [tag] 177\t\t\tlAmount, \"Allowance token tida...\n      JUMP \t\t\tlAmount, \"Allowance token tida...\n    tag 261\t\t\tlAmount, \"Allowance token tida...\n      JUMPDEST \t\t\tlAmount, \"Allowance token tida...\n      SWAP3 \t\t\tess(this)) >= totalAmount, \"Al...\n      POP \t\t\tess(this)) >= totalAmount, \"Al...\n      SWAP3 \t\t\tess(this)) >= totalAmount, \"Al...\n      POP \t\t\tess(this)) >= totalAmount, \"Al...\n      POP \t\t\t = 0; i < totalRecipients; i++...\n      SWAP3 \t\t\tan transaksi\\r\\n     */\\r\\n   ...\n      SWAP6 \t\t\tan transaksi\\r\\n     */\\r\\n   ...\n      POP \t\t\tan transaksi\\r\\n     */\\r\\n   ...\n      SWAP3 \t\t\tan transaksi\\r\\n     */\\r\\n   ...\n      SWAP6 \t\t\tan transaksi\\r\\n     */\\r\\n   ...\n      SWAP1 \t\t\tan transaksi\\r\\n     */\\r\\n   ...\n      SWAP4 \t\t\tan transaksi\\r\\n     */\\r\\n   ...\n      POP \t\t\tan transaksi\\r\\n     */\\r\\n   ...\n      JUMP \t\t\tan transaksi\\r\\n     */\\r\\n   ...\n    tag 178\t\t\t\\n        require(token.transf...\n      JUMPDEST \t\t\t\\n        require(token.transf...\n      PUSH 0\t\t\tm(msg.s\n      DUP2 \t\t\t\"Tran\n      ISZERO \t\t\tount), \"Trans\n      ISZERO \t\t\ttotalAmount), \"Transf\n      SWAP1 \t\t\tess(this), totalAmount), \"Tran...\n      POP \t\t\tess(this), totalAmount), \"Tran...\n      SWAP2 \t\t\t\\n        require(token.transf...\n      SWAP1 \t\t\t\\n        require(token.transf...\n      POP \t\t\t\\n        require(token.transf...\n      JUMP \t\t\t\\n        require(token.transf...\n    tag 179\t\t\tirim ke kontrak gagal\");\\r\\n  ...\n      JUMPDEST \t\t\tirim ke kontrak gagal\");\\r\\n  ...\n      PUSH [tag] 264\t\t\tnerima\\r\\n        for (\n      DUP2 \t\t\t for \n      PUSH [tag] 178\t\t\tnerima\\r\\n        for (\n      JUMP \t\t\tnerima\\r\\n        for (\n    tag 264\t\t\tnerima\\r\\n        for (\n      JUMPDEST \t\t\tnerima\\r\\n        for (\n      DUP3 \t\t\tng \n      MSTORE \t\t\tng-masing penerima\\r\\n        ...\n      POP \t\t\tirim ke kontrak gagal\");\\r\\n  ...\n      POP \t\t\tirim ke kontrak gagal\");\\r\\n  ...\n      JUMP \t\t\tirim ke kontrak gagal\");\\r\\n  ...\n    tag 21\t\t\t; i < totalRecipients; i++) {\\...\n      JUMPDEST \t\t\t; i < totalRecipients; i++) {\\...\n      PUSH 0\t\t\tire(\n      PUSH 20\t\t\tat\n      DUP3 \t\t\ts(0), \"Al\n      ADD \t\t\tdress(0), \"Alamat \n      SWAP1 \t\t\ti] != address(0), \"Alamat \n      POP \t\t\ti] != address(0), \"Alamat \n      PUSH [tag] 266\t\t\tidak boleh alamat nol\");\\r\\n  ...\n      PUSH 0\t\t\tr\n      DUP4 \t\t\t // Trans\n      ADD \t\t\t     // Transfer \n      DUP5 \t\t\t\\r\\n    \n      PUSH [tag] 179\t\t\tidak boleh alamat nol\");\\r\\n  ...\n      JUMP \t\t\tidak boleh alamat nol\");\\r\\n  ...\n    tag 266\t\t\tidak boleh alamat nol\");\\r\\n  ...\n      JUMPDEST \t\t\tidak boleh alamat nol\");\\r\\n  ...\n      SWAP3 \t\t\t; i < totalRecipients; i++) {\\...\n      SWAP2 \t\t\t; i < totalRecipients; i++) {\\...\n      POP \t\t\t; i < totalRecipients; i++) {\\...\n      POP \t\t\t; i < totalRecipients; i++) {\\...\n      JUMP \t\t\t; i < totalRecipients; i++) {\\...\n    tag 24\t\t\tt penerima\\r\\n            requ...\n      JUMPDEST \t\t\tt penerima\\r\\n            requ...\n      PUSH 0\t\t\t      \n      PUSH 0\t\t\t// Emi\n      PUSH 0\t\t\tevent \n      PUSH 0\t\t\ttelah \n      PUSH 40\t\t\tTr\n      DUP6 \t\t\t  emit Ba\n      DUP8 \t\t\tl\\r\\n    \n      SUB \t\t\thasil\\r\\n        emit Bat\n      SLT \t\t\t berhasil\\r\\n        emit Batc...\n      ISZERO \t\t\tfer berhasil\\r\\n        emit B...\n      PUSH [tag] 268\t\t\tfer berhasil\\r\\n        emit B...\n      JUMPI \t\t\tfer berhasil\\r\\n        emit B...\n      PUSH [tag] 269\t\t\terSuccessful(totalRecipients, ...\n      PUSH [tag] 164\t\t\terSuccessful(totalRecipients, ...\n      JUMP \t\t\terSuccessful(totalRecipients, ...\n    tag 269\t\t\terSuccessful(totalRecipients, ...\n      JUMPDEST \t\t\terSuccessful(totalRecipients, ...\n    tag 268\t\t\tfer berhasil\\r\\n        emit B...\n      JUMPDEST \t\t\tfer berhasil\\r\\n        emit B...\n      PUSH 0\t\t\ta\n      DUP6 \t\t\ttuk menge\n      ADD \t\t\ti untuk mengembal\n      CALLDATALOAD \t\t\t * @dev Fungsi untuk mengembal...\n      PUSH FFFFFFFFFFFFFFFF\t\t\ta dikirim ke kontr\n      DUP2 \t\t\tk seng\n      GT \t\t\tidak sengaja dikirim ke kontra\n      ISZERO \t\t\tg tidak sengaja dikirim ke kon...\n      PUSH [tag] 270\t\t\tg tidak sengaja dikirim ke kon...\n      JUMPI \t\t\tg tidak sengaja dikirim ke kon...\n      PUSH [tag] 271\t\t\t     * @param tokenAddress Ala...\n      PUSH [tag] 165\t\t\t     * @param tokenAddress Ala...\n      JUMP \t\t\t     * @param tokenAddress Ala...\n    tag 271\t\t\t     * @param tokenAddress Ala...\n      JUMPDEST \t\t\t     * @param tokenAddress Ala...\n    tag 270\t\t\tg tidak sengaja dikirim ke kon...\n      JUMPDEST \t\t\tg tidak sengaja dikirim ke kon...\n      PUSH [tag] 272\t\t\tlah token yang akan dikembalik...\n      DUP8 \t\t\tdress t\n      DUP3 \t\t\tTokens\n      DUP9 \t\t\tion recov\n      ADD \t\t\tunction recoverTokens(\n      PUSH [tag] 176\t\t\tlah token yang akan dikembalik...\n      JUMP \t\t\tlah token yang akan dikembalik...\n    tag 272\t\t\tlah token yang akan dikembalik...\n      JUMPDEST \t\t\tlah token yang akan dikembalik...\n      SWAP5 \t\t\t @param amount Jumlah token ya...\n      POP \t\t\t @param amount Jumlah token ya...\n      SWAP5 \t\t\t @param amount Jumlah token ya...\n      POP \t\t\t @param amount Jumlah token ya...\n      POP \t\t\t;\\r\\n    }\\r\\n    \\r\\n    /**\\...\n      PUSH 20\t\t\t a\n      DUP6 \t\t\tnAddress \n      ADD \t\t\ttokenAddress == ad\n      CALLDATALOAD \t\t\t\\n        if (tokenAddress == ...\n      PUSH FFFFFFFFFFFFFFFF\t\t\tRecover native tok\n      DUP2 \t\t\t     /\n      GT \t\t\t        // Recover native toke\n      ISZERO \t\t\t           // Recover native t...\n      PUSH [tag] 273\t\t\t           // Recover native t...\n      JUMPI \t\t\t           // Recover native t...\n      PUSH [tag] 274\t\t\t            (bool success, ) =...\n      PUSH [tag] 165\t\t\t            (bool success, ) =...\n      JUMP \t\t\t            (bool success, ) =...\n    tag 274\t\t\t            (bool success, ) =...\n      JUMPDEST \t\t\t            (bool success, ) =...\n    tag 273\t\t\t           // Recover native t...\n      JUMPDEST \t\t\t           // Recover native t...\n      PUSH [tag] 275\t\t\tn gagal\");\\r\\n        } else {...\n      DUP8 \t\t\t      I\n      DUP3 \t\t\tn\\r\\n   \n      DUP9 \t\t\t ERC20 to\n      ADD \t\t\tover ERC20 token\\r\\n    \n      PUSH [tag] 177\t\t\tn gagal\");\\r\\n        } else {...\n      JUMP \t\t\tn gagal\");\\r\\n        } else {...\n    tag 275\t\t\tn gagal\");\\r\\n        } else {...\n      JUMPDEST \t\t\tn gagal\");\\r\\n        } else {...\n      SWAP3 \t\t\tansfer native token gagal\");\\r...\n      POP \t\t\tansfer native token gagal\");\\r...\n      SWAP3 \t\t\tansfer native token gagal\");\\r...\n      POP \t\t\tansfer native token gagal\");\\r...\n      POP \t\t\tamount) external onlyOwner {\\r...\n      SWAP3 \t\t\tt penerima\\r\\n            requ...\n      SWAP6 \t\t\tt penerima\\r\\n            requ...\n      SWAP2 \t\t\tt penerima\\r\\n            requ...\n      SWAP5 \t\t\tt penerima\\r\\n            requ...\n      POP \t\t\tt penerima\\r\\n            requ...\n      SWAP3 \t\t\tt penerima\\r\\n            requ...\n      POP \t\t\tt penerima\\r\\n            requ...\n      JUMP \t\t\tt penerima\\r\\n            requ...\n    tag 180\t\t\tenAddress);\\r\\n            req...\n      JUMPDEST \t\t\tenAddress);\\r\\n            req...\n      PUSH [tag] 277\t\t\t;\\r\\n        }\\r\\n    }\\r\\n   \n      DUP2 \t\t\t}\\r\\n  \n      PUSH [tag] 167\t\t\t;\\r\\n        }\\r\\n    }\\r\\n   \n      JUMP \t\t\t;\\r\\n        }\\r\\n    }\\r\\n   \n    tag 277\t\t\t;\\r\\n        }\\r\\n    }\\r\\n   \n      JUMPDEST \t\t\t;\\r\\n        }\\r\\n    }\\r\\n   \n      DUP3 \t\t\tgal\n      MSTORE \t\t\token gagal\");\\r\\n        }\\r\\n...\n      POP \t\t\tenAddress);\\r\\n            req...\n      POP \t\t\tenAddress);\\r\\n            req...\n      JUMP \t\t\tenAddress);\\r\\n            req...\n    tag 31\t\t\tgsi untuk menerima native toke...\n      JUMPDEST \t\t\tgsi untuk menerima native toke...\n      PUSH 0\t\t\t unt\n      PUSH 20\t\t\t\\r\\n\n      DUP3 \t\t\tce IERC20\n      ADD \t\t\terface IERC20 {\\r\\n \n      SWAP1 \t\t\tC20\\r\\ninterface IERC20 {\\r\\n \n      POP \t\t\tC20\\r\\ninterface IERC20 {\\r\\n \n      PUSH [tag] 279\t\t\tn transferFrom(address sender,...\n      PUSH 0\t\t\tt\n      DUP4 \t\t\t amount) \n      ADD \t\t\tt256 amount) exte\n      DUP5 \t\t\tient, \n      PUSH [tag] 180\t\t\tn transferFrom(address sender,...\n      JUMP \t\t\tn transferFrom(address sender,...\n    tag 279\t\t\tn transferFrom(address sender,...\n      JUMPDEST \t\t\tn transferFrom(address sender,...\n      SWAP3 \t\t\tgsi untuk menerima native toke...\n      SWAP2 \t\t\tgsi untuk menerima native toke...\n      POP \t\t\tgsi untuk menerima native toke...\n      POP \t\t\tgsi untuk menerima native toke...\n      JUMP \t\t\tgsi untuk menerima native toke...\n    tag 35\t\t\tbool);\\r\\n    function transfe...\n      JUMPDEST \t\t\tbool);\\r\\n    function transfe...\n      PUSH 0\t\t\tount) \n      PUSH 20\t\t\twa\n      DUP3 \t\t\tunction a\n      DUP5 \t\t\t);\\r\\n   \n      SUB \t\t\tbool);\\r\\n    function al\n      SLT \t\t\tns (bool);\\r\\n    function all...\n      ISZERO \t\t\tturns (bool);\\r\\n    function ...\n      PUSH [tag] 281\t\t\tturns (bool);\\r\\n    function ...\n      JUMPI \t\t\tturns (bool);\\r\\n    function ...\n      PUSH [tag] 282\t\t\taddress owner, address spender...\n      PUSH [tag] 164\t\t\taddress owner, address spender...\n      JUMP \t\t\taddress owner, address spender...\n    tag 282\t\t\taddress owner, address spender...\n      JUMPDEST \t\t\taddress owner, address spender...\n    tag 281\t\t\tturns (bool);\\r\\n    function ...\n      JUMPDEST \t\t\tturns (bool);\\r\\n    function ...\n      PUSH 0\t\t\t\n      PUSH [tag] 283\t\t\t\n      DUP5 \t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 169\t\t\t\n      JUMP \t\t\t\n    tag 283\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\tbool);\\r\\n    function transfe...\n      SWAP2 \t\t\tbool);\\r\\n    function transfe...\n      POP \t\t\tbool);\\r\\n    function transfe...\n      POP \t\t\tbool);\\r\\n    function transfe...\n      JUMP \t\t\tbool);\\r\\n    function transfe...\n    tag 181\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 182\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 48616E7961206F776E65722079616E67206461706174206D656E67616B736573\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 2066756E67736920696E69000000000000000000000000000000000000000000\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 183\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 287\t\t\t\n      PUSH 2B\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 181\t\t\t\n      JUMP \t\t\t\n    tag 287\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 288\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 182\t\t\t\n      JUMP \t\t\t\n    tag 288\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 40\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 290\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 183\t\t\t\n      JUMP \t\t\t\n    tag 290\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 184\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 185\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 186\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 294\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 184\t\t\t\n      JUMP \t\t\t\n    tag 294\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 295\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 185\t\t\t\n      JUMP \t\t\t\n    tag 295\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 44\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 297\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 186\t\t\t\n      JUMP \t\t\t\n    tag 297\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 187\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5472616E73666572206E617469766520746F6B656E20676167616C0000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 188\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 300\t\t\t\n      PUSH 1B\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 181\t\t\t\n      JUMP \t\t\t\n    tag 300\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 301\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 187\t\t\t\n      JUMP \t\t\t\n    tag 301\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 50\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 303\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 188\t\t\t\n      JUMP \t\t\t\n    tag 303\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 189\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 305\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 170\t\t\t\n      JUMP \t\t\t\n    tag 305\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 53\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 307\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 180\t\t\t\n      JUMP \t\t\t\n    tag 307\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 308\t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 189\t\t\t\n      JUMP \t\t\t\n    tag 308\t\t\t\n      JUMPDEST \t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 190\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 310\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 178\t\t\t\n      JUMP \t\t\t\n    tag 310\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 311\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 311\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 191\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 313\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 190\t\t\t\n      JUMP \t\t\t\n    tag 313\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 57\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 315\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 316\t\t\t\n      PUSH [tag] 164\t\t\t\n      JUMP \t\t\t\n    tag 316\t\t\t\n      JUMPDEST \t\t\t\n    tag 315\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 317\t\t\t\n      DUP5 \t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 191\t\t\t\n      JUMP \t\t\t\n    tag 317\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 192\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5472616E7366657220746F6B656E20676167616C000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 193\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 320\t\t\t\n      PUSH 14\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 181\t\t\t\n      JUMP \t\t\t\n    tag 320\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 321\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 192\t\t\t\n      JUMP \t\t\t\n    tag 321\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 60\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 323\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 193\t\t\t\n      JUMP \t\t\t\n    tag 323\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 194\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 50616E6A616E6720617272617920726563697069656E74732064616E20616D6F\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 756E74732068617275732073616D610000000000000000000000000000000000\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 195\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 326\t\t\t\n      PUSH 2F\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 181\t\t\t\n      JUMP \t\t\t\n    tag 326\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 327\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP \t\t\t\n    tag 327\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 67\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 329\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 195\t\t\t\n      JUMP \t\t\t\n    tag 329\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 196\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4D616B73696D616C203230303020616C616D61742070656E6572696D61206461\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6C616D2073617475206261746368000000000000000000000000000000000000\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 197\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 332\t\t\t\n      PUSH 2E\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 181\t\t\t\n      JUMP \t\t\t\n    tag 332\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 333\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 196\t\t\t\n      JUMP \t\t\t\n    tag 333\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 70\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 335\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 197\t\t\t\n      JUMP \t\t\t\n    tag 335\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 76\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 32\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 198\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 11\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 78\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 339\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 170\t\t\t\n      JUMP \t\t\t\n    tag 339\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 340\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 170\t\t\t\n      JUMP \t\t\t\n    tag 340\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 341\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 342\t\t\t\n      PUSH [tag] 198\t\t\t\n      JUMP \t\t\t\n    tag 342\t\t\t\n      JUMPDEST \t\t\t\n    tag 341\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 80\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 344\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 180\t\t\t\n      JUMP \t\t\t\n    tag 344\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 345\t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 180\t\t\t\n      JUMP \t\t\t\n    tag 345\t\t\t\n      JUMPDEST \t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 199\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 347\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 171\t\t\t\n      JUMP \t\t\t\n    tag 347\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 84\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 349\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 350\t\t\t\n      PUSH [tag] 164\t\t\t\n      JUMP \t\t\t\n    tag 350\t\t\t\n      JUMPDEST \t\t\t\n    tag 349\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 351\t\t\t\n      DUP5 \t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 199\t\t\t\n      JUMP \t\t\t\n    tag 351\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 200\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 416C6C6F77616E636520746F6B656E20746964616B2063756B75700000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 201\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 354\t\t\t\n      PUSH 1B\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 181\t\t\t\n      JUMP \t\t\t\n    tag 354\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 355\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 200\t\t\t\n      JUMP \t\t\t\n    tag 355\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 87\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 357\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 201\t\t\t\n      JUMP \t\t\t\n    tag 357\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 89\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 60\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 359\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP7 \t\t\t\n      PUSH [tag] 180\t\t\t\n      JUMP \t\t\t\n    tag 359\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 360\t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 180\t\t\t\n      JUMP \t\t\t\n    tag 360\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 361\t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 189\t\t\t\n      JUMP \t\t\t\n    tag 361\t\t\t\n      JUMPDEST \t\t\t\n      SWAP5 \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 202\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5472616E7366657220646172692070656E676972696D206B65206B6F6E747261\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6B20676167616C00000000000000000000000000000000000000000000000000\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 203\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 364\t\t\t\n      PUSH 27\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 181\t\t\t\n      JUMP \t\t\t\n    tag 364\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 365\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 202\t\t\t\n      JUMP \t\t\t\n    tag 365\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 95\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 367\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 203\t\t\t\n      JUMP \t\t\t\n    tag 367\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 204\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 416C616D61742070656E6572696D6120746964616B20626F6C656820616C616D\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6174206E6F6C0000000000000000000000000000000000000000000000000000\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 205\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 370\t\t\t\n      PUSH 26\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 181\t\t\t\n      JUMP \t\t\t\n    tag 370\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 371\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 204\t\t\t\n      JUMP \t\t\t\n    tag 371\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 104\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 373\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 205\t\t\t\n      JUMP \t\t\t\n    tag 373\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 117\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 60\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 375\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP7 \t\t\t\n      PUSH [tag] 189\t\t\t\n      JUMP \t\t\t\n    tag 375\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 376\t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 189\t\t\t\n      JUMP \t\t\t\n    tag 376\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 377\t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 189\t\t\t\n      JUMP \t\t\t\n    tag 377\t\t\t\n      JUMPDEST \t\t\t\n      SWAP5 \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 206\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 546F74616C20616D6F756E742068617275732073616D612064656E67616E206E\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 696C61692079616E672064696B6972696D000000000000000000000000000000\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 207\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 380\t\t\t\n      PUSH 31\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 181\t\t\t\n      JUMP \t\t\t\n    tag 380\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 381\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 206\t\t\t\n      JUMP \t\t\t\n    tag 381\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 134\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 383\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 207\t\t\t\n      JUMP \t\t\t\n    tag 383\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 208\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5472616E7366657220676167616C000000000000000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 209\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 386\t\t\t\n      PUSH E\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 181\t\t\t\n      JUMP \t\t\t\n    tag 386\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 387\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 208\t\t\t\n      JUMP \t\t\t\n    tag 387\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 154\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 389\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 209\t\t\t\n      JUMP \t\t\t\n    tag 389\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 210\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 416C616D6174206F776E6572206261727520746964616B20626F6C656820616C\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 616D6174206E6F6C000000000000000000000000000000000000000000000000\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 211\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 392\t\t\t\n      PUSH 28\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 181\t\t\t\n      JUMP \t\t\t\n    tag 392\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 393\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 210\t\t\t\n      JUMP \t\t\t\n    tag 393\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 162\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 395\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 211\t\t\t\n      JUMP \t\t\t\n    tag 395\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    .data\n"
}